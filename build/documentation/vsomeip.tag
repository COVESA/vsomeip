<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.4">
  <compound kind="file">
    <name>message_base_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/message/include/</path>
    <filename>compat_2message_2include_2message__base__impl_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="no" imported="no">compat/vsomeip/export.hpp</includes>
    <includes id="compat_2vsomeip_2message_8hpp" name="message.hpp" local="no" imported="no">compat/vsomeip/message.hpp</includes>
    <class kind="class">vsomeip::message_base_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_base_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/include/</path>
    <filename>message_2include_2message__base__impl_8hpp.html</filename>
    <includes id="message__header__impl_8hpp" name="message_header_impl.hpp" local="yes" imported="no">message_header_impl.hpp</includes>
    <class kind="class">vsomeip_v3::message_base_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/message/include/</path>
    <filename>compat_2message_2include_2message__impl_8hpp.html</filename>
    <includes id="compat_2vsomeip_2message_8hpp" name="message.hpp" local="no" imported="no">compat/vsomeip/message.hpp</includes>
    <includes id="compat_2message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">message_base_impl.hpp</includes>
    <class kind="class">vsomeip::message_impl</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/include/</path>
    <filename>message_2include_2message__impl_8hpp.html</filename>
    <includes id="message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">message_base_impl.hpp</includes>
    <class kind="class">vsomeip_v3::message_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>service__discovery_2include_2message__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../include/primitive_types.hpp</includes>
    <includes id="message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">../../message/include/message_base_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <class kind="class">vsomeip_v3::sd::message_impl</class>
    <class kind="struct">vsomeip_v3::sd::message_impl::forced_initial_events_t</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>payload_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/message/include/</path>
    <filename>compat_2message_2include_2payload__impl_8hpp.html</filename>
    <includes id="compat_2vsomeip_2payload_8hpp" name="payload.hpp" local="no" imported="no">compat/vsomeip/payload.hpp</includes>
    <class kind="class">vsomeip::payload_impl</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>payload_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/include/</path>
    <filename>message_2include_2payload__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::payload_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_base_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/message/src/</path>
    <filename>compat_2message_2src_2message__base__impl_8cpp.html</filename>
    <includes id="compat_2message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">../include/message_base_impl.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../../message/include/message_impl.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_base_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/src/</path>
    <filename>message_2src_2message__base__impl_8cpp.html</filename>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/message/src/</path>
    <filename>compat_2message_2src_2message__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="compat_2message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="compat_2message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../include/payload_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../../configuration/include/internal.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../../message/include/message_impl.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/src/</path>
    <filename>message_2src_2message__impl_8cpp.html</filename>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>service__discovery_2src_2message__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="eventgroupentry__impl_8hpp" name="eventgroupentry_impl.hpp" local="yes" imported="no">../include/eventgroupentry_impl.hpp</includes>
    <includes id="serviceentry__impl_8hpp" name="serviceentry_impl.hpp" local="yes" imported="no">../include/serviceentry_impl.hpp</includes>
    <includes id="configuration__option__impl_8hpp" name="configuration_option_impl.hpp" local="yes" imported="no">../include/configuration_option_impl.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">../include/ipv4_option_impl.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">../include/ipv6_option_impl.hpp</includes>
    <includes id="load__balancing__option__impl_8hpp" name="load_balancing_option_impl.hpp" local="yes" imported="no">../include/load_balancing_option_impl.hpp</includes>
    <includes id="protection__option__impl_8hpp" name="protection_option_impl.hpp" local="yes" imported="no">../include/protection_option_impl.hpp</includes>
    <includes id="selective__option__impl_8hpp" name="selective_option_impl.hpp" local="yes" imported="no">../include/selective_option_impl.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REBOOT_FLAG</name>
      <anchorfile>service__discovery_2src_2message__impl_8cpp.html</anchorfile>
      <anchor>a72794b2aa8c6aa8c604f2aa1432630b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNICAST_FLAG</name>
      <anchorfile>service__discovery_2src_2message__impl_8cpp.html</anchorfile>
      <anchor>a0f3ac9e4266e81d0f67aff8f4bd70301</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>payload_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/message/src/</path>
    <filename>compat_2message_2src_2payload__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="compat_2message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../include/payload_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>payload_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/src/</path>
    <filename>message_2src_2payload__impl_8cpp.html</filename>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <includes id="message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../include/payload_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>application_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/runtime/include/</path>
    <filename>compat_2runtime_2include_2application__impl_8hpp.html</filename>
    <includes id="compat_2vsomeip_2application_8hpp" name="application.hpp" local="no" imported="no">compat/vsomeip/application.hpp</includes>
    <class kind="class">vsomeip::application_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>application_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/runtime/include/</path>
    <filename>runtime_2include_2application__impl_8hpp.html</filename>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="routing__manager__host_8hpp" name="routing_manager_host.hpp" local="yes" imported="no">../../routing/include/routing_manager_host.hpp</includes>
    <class kind="class">vsomeip_v3::application_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/runtime/include/</path>
    <filename>compat_2runtime_2include_2runtime__impl_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2runtime_8hpp" name="runtime.hpp" local="no" imported="no">compat/vsomeip/runtime.hpp</includes>
    <class kind="class">vsomeip::runtime_impl</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/runtime/include/</path>
    <filename>runtime_2include_2runtime__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::runtime_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>service__discovery_2include_2runtime__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">runtime.hpp</includes>
    <class kind="class">vsomeip_v3::sd::runtime_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>application_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/runtime/src/</path>
    <filename>compat_2runtime_2src_2application__impl_8cpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2runtime_8hpp" name="runtime.hpp" local="no" imported="no">compat/vsomeip/runtime.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="compat_2runtime_2include_2application__impl_8hpp" name="application_impl.hpp" local="yes" imported="no">../include/application_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../../configuration/include/internal.hpp</includes>
    <includes id="compat_2message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="compat_2message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <namespace>vsomeip</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ERROR_HANDLER_DUMMY_EVENT</name>
      <anchorfile>compat_2runtime_2src_2application__impl_8cpp.html</anchorfile>
      <anchor>a2e0eda84f52769445aa84f6dc214c0d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>application_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/runtime/src/</path>
    <filename>runtime_2src_2application__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="runtime_2include_2application__impl_8hpp" name="application_impl.hpp" local="yes" imported="no">../include/application_impl.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="configuration__plugin_8hpp" name="configuration_plugin.hpp" local="yes" imported="no">../../configuration/include/configuration_plugin.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="routing__manager__impl_8hpp" name="routing_manager_impl.hpp" local="yes" imported="no">../../routing/include/routing_manager_impl.hpp</includes>
    <includes id="routing__manager__proxy_8hpp" name="routing_manager_proxy.hpp" local="yes" imported="no">../../routing/include/routing_manager_proxy.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="connector__impl_8hpp" name="connector_impl.hpp" local="yes" imported="no">../../tracing/include/connector_impl.hpp</includes>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../../plugin/include/plugin_manager_impl.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/runtime/src/</path>
    <filename>compat_2runtime_2src_2runtime_8cpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2runtime_8hpp" name="runtime.hpp" local="no" imported="no">compat/vsomeip/runtime.hpp</includes>
    <includes id="compat_2runtime_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/runtime/src/</path>
    <filename>runtime_2src_2runtime_8cpp.html</filename>
    <includes id="runtime_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="client__endpoint_8hpp" name="client_endpoint.hpp" local="yes" imported="no">../../endpoints/include/client_endpoint.hpp</includes>
    <includes id="configuration__plugin_8hpp" name="configuration_plugin.hpp" local="yes" imported="no">../../configuration/include/configuration_plugin.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/compat/runtime/src/</path>
    <filename>compat_2runtime_2src_2runtime__impl_8cpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2defines_8hpp" name="defines.hpp" local="no" imported="no">compat/vsomeip/defines.hpp</includes>
    <includes id="compat_2runtime_2include_2application__impl_8hpp" name="application_impl.hpp" local="yes" imported="no">../include/application_impl.hpp</includes>
    <includes id="compat_2runtime_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <includes id="compat_2message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="compat_2message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/runtime/src/</path>
    <filename>runtime_2src_2runtime__impl_8cpp.html</filename>
    <includes id="runtime_2include_2application__impl_8hpp" name="application_impl.hpp" local="yes" imported="no">../include/application_impl.hpp</includes>
    <includes id="runtime_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>service__discovery_2src_2runtime__impl_8cpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="service__discovery_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <includes id="service__discovery__impl_8hpp" name="service_discovery_impl.hpp" local="yes" imported="no">../include/service_discovery_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>client.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>client_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::client</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>configuration.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>configuration_8hpp.html</filename>
    <includes id="implementation_2configuration_2include_2trace_8hpp" name="trace.hpp" local="yes" imported="no">trace.hpp</includes>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../e2e_protection/include/e2exf/config.hpp</includes>
    <includes id="e2e_8hpp" name="e2e.hpp" local="yes" imported="no">e2e.hpp</includes>
    <includes id="debounce_8hpp" name="debounce.hpp" local="yes" imported="no">debounce.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">internal.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <class kind="class">vsomeip_v3::configuration</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CONFIG_PLUGIN_VERSION</name>
      <anchorfile>configuration_8hpp.html</anchorfile>
      <anchor>ae841c07fd7a9206b693f7828a5beed11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_element.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>configuration__element_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::configuration_element</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>configuration_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>configuration__impl_8hpp.html</filename>
    <includes id="implementation_2configuration_2include_2trace_8hpp" name="trace.hpp" local="yes" imported="no">trace.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">configuration.hpp</includes>
    <includes id="configuration__element_8hpp" name="configuration_element.hpp" local="yes" imported="no">configuration_element.hpp</includes>
    <includes id="watchdog_8hpp" name="watchdog.hpp" local="yes" imported="no">watchdog.hpp</includes>
    <includes id="service__instance__range_8hpp" name="service_instance_range.hpp" local="yes" imported="no">service_instance_range.hpp</includes>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../e2e_protection/include/e2exf/config.hpp</includes>
    <includes id="e2e_8hpp" name="e2e.hpp" local="yes" imported="no">e2e.hpp</includes>
    <includes id="debounce_8hpp" name="debounce.hpp" local="yes" imported="no">debounce.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <class kind="class">vsomeip_v3::cfg::configuration_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>configuration_plugin.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>configuration__plugin_8hpp.html</filename>
    <class kind="class">vsomeip_v3::configuration_plugin</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CONFIG_PLUGIN_VERSION</name>
      <anchorfile>configuration__plugin_8hpp.html</anchorfile>
      <anchor>ae841c07fd7a9206b693f7828a5beed11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_plugin_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>configuration__plugin__impl_8hpp.html</filename>
    <includes id="configuration__plugin_8hpp" name="configuration_plugin.hpp" local="yes" imported="no">configuration_plugin.hpp</includes>
    <class kind="class">vsomeip_v3::configuration_plugin_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>debounce.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>debounce_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::debounce</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>e2e.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>e2e_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::e2e</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>eventgroup.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>eventgroup_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::eventgroup</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>internal.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>internal_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::service_data_t</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_APPLICATION_NAME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aba4b9cf5d22e6a7f9482ba47df371a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CONFIGURATION</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a21661565eadd4fe6bfe8d19ab0f0eaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CONFIGURATION_MODULE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>afb4d6f105561294e8cfe83bb8f512cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_E2E_PROTECTION_MODULE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a5578cb174bdc362fac23c5e3a120a596</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_MANDATORY_CONFIGURATION_FILES</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8e2fa1c047c6dcb9f5aaba6b043687a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_LOAD_PLUGINS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>acf0b569c001353080a1b8cc264f2b4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CLIENTSIDELOGGING</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a94b0851921a19178c1b738027ab41173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONFIGURATION_FILE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ae2a5fc3c019ea1be8d1734e3dc63d8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CONFIGURATION_FILE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>acb07d42fab8dae18e60fefbd13ab0fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MANDATORY_CONFIGURATION_FILES</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a5670bf21ead33725410339ebc472174e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONFIGURATION_FOLDER</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a753e89c53f220d028832257e642d7754</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEBUG_CONFIGURATION_FOLDER</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a00556f427b1b50197b55a8ec6a759757</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CONFIGURATION_FOLDER</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aca8144da17a331c3ae4012dbed0299fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_BASE_PATH</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad52a834a38467355e1c0e4d1d507d93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CFG_LIBRARY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af5be3e7eb542708053aca4c73bbee58e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_LIBRARY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa8e3a3d2cdfb1107ee924f468f1b2d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_E2E_LIBRARY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>adf341103e058db79918753aed25572dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_CLIENT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ac9ab6d8b260c66080dc14f4fdcb0260f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_UNSET</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a5cc9aa9f0d4d27d41249dc592f136e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNICAST_ADDRESS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad24d4e62b582dfece9458a7463716d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_NETMASK</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad7cf2936837b4573981a7267592e2973</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONNECT_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a6bc55565e624b3e938952bc8e2d6f274</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_CONNECT_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8cbbdf710cd21ed8ec7d82f7e0503b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_FLUSH_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a77fe1dd712dba09e86fb2d902dc8e886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_SHUTDOWN_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af4e36de5588e0df56eff92051f7a41f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_QUEUE_WARN_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aefc0710a232f3158dcc6a5097b6baab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_CONNECT_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ab5ded6f5511ac71ebb492abce977b961</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_RESTART_ABORTS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a68d9c9fd34c024501bea3fda96254771</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_SENT_WAIT_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a95f8ecb6d575aad40c65390b8fe06a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_BUFFER_SHRINK_THRESHOLD</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a135b1bfcd6428a1f7f575019debba308</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_WATCHDOG_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a0de628492afe4cae982bf92822157042</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_MAX_MISSING_PONGS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a25d9569a349819d06080539af68d7373</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_UDP_RCV_BUFFER_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a937e7dfa5fe860331703b410efb5c13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IO_THREAD_COUNT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa98b30631c5c400f981e280cd4b149e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IO_THREAD_NICE_LEVEL</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a84875cb9cfe5aef0c1a84d03af85e862</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_DISPATCHERS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a845256bffbd30c971c60b86f01fee504</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_DISPATCH_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a46667413edc4d8a2321a96dac18f38ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REQUEST_DEBOUNCE_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a0544924a59cf6f742367121851c35f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_MAX_MSG</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a4f84986b02357810c86b572020085a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_MIN_FREQ</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>afe85b828e78f28f8b54008849a5d26e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_INTERVAL</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa4508ebb6e738e56bcc71ea87405ec5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_WAIT_SENT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a96b07acca046e873d3f0d527e4e38a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_HEADER_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a12788edd833019844d7969b05aec6f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_TYPE_POS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af134ab2134f159d2e3430bab6550f27e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_CLIENT_POS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>afe41f7ab049eaecc6cd3cd98ec17cb93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_SIZE_POS_MIN</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>adf0552a84b56b12086850e58cf1bb38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_SIZE_POS_MAX</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a68dda939e12b7952ec5f400764368b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_PAYLOAD_POS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ab1142fa6f25cd01fb6b37ab88b63a28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ASSIGN_CLIENT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a3cfc9e735fb116ed180586311133e30f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ASSIGN_CLIENT_ACK</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad4481854605acd38d1c244e6bcb57055</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTER_APPLICATION</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a0168037f17b43d05e92a5b8d63322c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEREGISTER_APPLICATION</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a63e416385bfa87f5525fcb6b32887f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_APPLICATION_LOST</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af565784549b2bcef97458f065e2ddda4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_INFO</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a1f042d5c1bd57acc2644d4354b483187</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTERED_ACK</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a105e332c7c734ace4ca6f8a5315e7ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PING</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8900ac5d57d2e9ef74ca2da306e32a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PONG</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>adb39d06de898161aff241cca713fbae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFER_SERVICE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a233d93ddb11067f6931603c932d61f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_STOP_OFFER_SERVICE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>afab6e8684a8494b37aa7fbf7fc918181</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a727c0bf4b2e65629a07a9b48a6e27486</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNSUBSCRIBE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a677d96ca806f5e190c646081e4c65051</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REQUEST_SERVICE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a51537a35e3708618cfe240d136983467</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RELEASE_SERVICE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a01c83a281f7780667e7a8ff24a1ac48e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_NACK</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a6656a357e1b1ba391806ee64b2c34b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_ACK</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa7b8725effa6ac86b1a1ccce4b7cfd55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8d59b0a13049a46c7f212b754452325e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_NOTIFY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad15987f599f25eb206763a7e7167018f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_NOTIFY_ONE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a444bbb25bc19ee8857a66f8bbb5dcbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTER_EVENT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ae8ba4318e67c5593ca80029a1d8083fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNREGISTER_EVENT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a1a080f0438b999051a6a11f599ef5370</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ID_RESPONSE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>afdbd60e39c03793426eedf44f4319d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ID_REQUEST</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>afb3f102bc610a57ba6b8701a441dc8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFERED_SERVICES_REQUEST</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a15cd621b9421daeef83be08b7942403b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFERED_SERVICES_RESPONSE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a58135bc145388bf1d94da9dcdc1304e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNSUBSCRIBE_ACK</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a2593cedf60fa704967d5db1e09c25913</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RESEND_PROVIDED_EVENTS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a0b04731ecff7c716c4710d505cc61983</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_POLICY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af824457a8128b7d26777067433342d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_POLICY_RESPONSE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ae05b630a033defbc1d05e03f1ab5838e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REMOVE_SECURITY_POLICY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a184e64741e75e00750eccedb777da7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REMOVE_SECURITY_POLICY_RESPONSE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a2bb47c63a5e82ff81b735960881cc04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_CREDENTIALS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a467ae735ffe59b83a487c9bf1fbe5eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DISTRIBUTE_SECURITY_POLICIES</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a9e1d7781eeb5ba353f8bf31891552e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_POLICY_INT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a30a3b38ea724c280958b754c31a77ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a66157c8e6d5b23ad8697cf0cd90d4068</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_INSTANCE_POS_MIN</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a5d6659e17bc31218d7a8868fdab178be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_INSTANCE_POS_MAX</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a45592e22b9bd611fb1e1ecbe78016e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_RELIABLE_POS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa9ce729f3393f10fb11c77bb5f48e7f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_CHECK_STATUS_POS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8e5341ac0092ffdd0e543813617cc8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_DST_CLIENT_POS_MIN</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8da3a9de53c7d7c96a0a5af2edc26cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_DST_CLIENT_POS_MAX</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a1cbc5d979b1fe541c22fe8d2a01bd821</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_PAYLOAD_POS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a85cddae48cb5d2255c08bf8b92ad9581</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ASSIGN_CLIENT_ACK_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad51c195f6599c37c9299645d93a54491</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFER_SERVICE_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a3b3bbdc3071439125a9c44f18141ab23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REQUEST_SERVICE_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a3e0b0cac1687859383088edb6b35331c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RELEASE_SERVICE_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a72ca9ab709fc8ec72fb964d5b9fd5084</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_STOP_OFFER_SERVICE_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a279e591907cea9d7abb6cbe408715a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a80da8541a348dc6dfeb1ded54063dc3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_ACK_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a166da7766eb4e4565f565c32f7860224</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_NACK_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a294ea351dc6a0fd64ae5b68d618b46c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNSUBSCRIBE_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a07ddd90f4719a556a913cccbd48d939b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNSUBSCRIBE_ACK_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a6d33324fa2f1d8ed497c829a3495124f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTER_EVENT_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a57656c3e1f2d3125f24b4bd3aaf8a098</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNREGISTER_EVENT_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af7abc85d3aa88d2d1fe6ac968cb2fd80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFERED_SERVICES_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ae3f6b9a471ab690e209bf631e7f62efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RESEND_PROVIDED_EVENTS_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a448e942840897aede093d749fa3c43c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REMOVE_SECURITY_POLICY_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a6155ec8fcc926b3ad2b50267f060fb0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_POLICY_RESPONSE_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa1c509b3cda3dc0e7f156f6d4dd3d4a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REMOVE_SECURITY_POLICY_RESPONSE_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a523be73bc9d92302c02ac6d439b184a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PING_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ac32e8203d8de6f5e25d684d8c1559a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PONG_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>acb5dbaf54bf1e142bee1c9275e13123f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTER_APPLICATION_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a2269342f8caf82ac6ae0b51a59566898</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEREGISTER_APPLICATION_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ac43af03536260815ab1acf97bdf0d990</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTERED_ACK_COMMAND_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a26aa1b774be7c0311e6ef7901244de41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DATA_ID</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8589d99676ddb6a66526702675bc2021</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DIAGNOSIS_ADDRESS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aac84ac0dca918a5184295693d01cb894</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_SHM_PERMISSION</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a4d89d5b3d38e9c57e35c64d20e35857c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_UDS_PERMISSIONS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>abea1dd50214a62d2a43097d83a3e59a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_READY_MESSAGE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ac0a6e139b655482c68fd8aed45c4f2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_NPDU_DEBOUNCING_NANO</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ab609a8a35eea15ed2e27e7362e52f2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_NPDU_MAXIMUM_RETENTION_NANO</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a97ebcaab3aa52fa4ad9ffca4d41455fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::uint32_t, std::uint32_t &gt;</type>
      <name>credentials_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a89bb1aafc215b769ba02e9b0ff2ed715</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_info_entry_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a5aea15babe667876089dabc8145f4edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a9b40196ac95c5d105276c9b4f88ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad9909c88f5eb36ac32bd1942f59b61ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad63a51b60ad623de673de76dc5614d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a5aea15babe667876089dabc8145f4edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a9b40196ac95c5d105276c9b4f88ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad9909c88f5eb36ac32bd1942f59b61ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad63a51b60ad623de673de76dc5614d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>port_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4d1d428cc930cdc04bca08cdaa1e4839</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>MESSAGE_SIZE_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>abc9231a81ccf4ab9e3babcf1f2230345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>QUEUE_SIZE_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a629f2774576f3b00cf8616e8291ded5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>MAX_RECONNECTS_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>abf7c760b3533ab1fc7965af2b14721da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>ANY_UID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a729a2045f1925bc2bb1b178cec2f738a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>ANY_GID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6ceb4f0cdb93357b6bbd96ddf1751f5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>internal_android.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>internal__android_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::service_data_t</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_APPLICATION_NAME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aba4b9cf5d22e6a7f9482ba47df371a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CONFIGURATION</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a21661565eadd4fe6bfe8d19ab0f0eaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CONFIGURATION_MODULE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>afb4d6f105561294e8cfe83bb8f512cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_E2E_PROTECTION_MODULE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a5578cb174bdc362fac23c5e3a120a596</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_MANDATORY_CONFIGURATION_FILES</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8e2fa1c047c6dcb9f5aaba6b043687a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_LOAD_PLUGINS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>acf0b569c001353080a1b8cc264f2b4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CLIENTSIDELOGGING</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a94b0851921a19178c1b738027ab41173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_BASE_PATH</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a08747d3a2b7b266f25b746b148bb2101</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONFIGURATION_FILE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ae2a5fc3c019ea1be8d1734e3dc63d8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CONFIGURATION_FILE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>acb07d42fab8dae18e60fefbd13ab0fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MANDATORY_CONFIGURATION_FILES</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a5670bf21ead33725410339ebc472174e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONFIGURATION_FOLDER</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a753e89c53f220d028832257e642d7754</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEBUG_CONFIGURATION_FOLDER</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a00556f427b1b50197b55a8ec6a759757</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CONFIGURATION_FOLDER</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aca8144da17a331c3ae4012dbed0299fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_BASE_PATH</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ad52a834a38467355e1c0e4d1d507d93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CFG_LIBRARY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af5be3e7eb542708053aca4c73bbee58e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_LIBRARY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa8e3a3d2cdfb1107ee924f468f1b2d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_E2E_LIBRARY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>adf341103e058db79918753aed25572dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_CLIENT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ac9ab6d8b260c66080dc14f4fdcb0260f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_UNSET</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a5cc9aa9f0d4d27d41249dc592f136e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNICAST_ADDRESS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ad24d4e62b582dfece9458a7463716d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_NETMASK</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ad7cf2936837b4573981a7267592e2973</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONNECT_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a6bc55565e624b3e938952bc8e2d6f274</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_CONNECT_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8cbbdf710cd21ed8ec7d82f7e0503b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_FLUSH_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a77fe1dd712dba09e86fb2d902dc8e886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_SHUTDOWN_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af4e36de5588e0df56eff92051f7a41f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_QUEUE_WARN_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aefc0710a232f3158dcc6a5097b6baab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_CONNECT_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ab5ded6f5511ac71ebb492abce977b961</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_RESTART_ABORTS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a68d9c9fd34c024501bea3fda96254771</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_SENT_WAIT_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a95f8ecb6d575aad40c65390b8fe06a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_BUFFER_SHRINK_THRESHOLD</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a135b1bfcd6428a1f7f575019debba308</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_WATCHDOG_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a0de628492afe4cae982bf92822157042</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_MAX_MISSING_PONGS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a25d9569a349819d06080539af68d7373</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_UDP_RCV_BUFFER_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a937e7dfa5fe860331703b410efb5c13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IO_THREAD_COUNT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa98b30631c5c400f981e280cd4b149e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IO_THREAD_NICE_LEVEL</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a84875cb9cfe5aef0c1a84d03af85e862</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_DISPATCHERS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a845256bffbd30c971c60b86f01fee504</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_DISPATCH_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a46667413edc4d8a2321a96dac18f38ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REQUEST_DEBOUNCE_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a0544924a59cf6f742367121851c35f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_MAX_MSG</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a4f84986b02357810c86b572020085a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_MIN_FREQ</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>afe85b828e78f28f8b54008849a5d26e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_INTERVAL</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa4508ebb6e738e56bcc71ea87405ec5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_WAIT_SENT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a96b07acca046e873d3f0d527e4e38a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_HEADER_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a12788edd833019844d7969b05aec6f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_TYPE_POS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af134ab2134f159d2e3430bab6550f27e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_CLIENT_POS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>afe41f7ab049eaecc6cd3cd98ec17cb93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_SIZE_POS_MIN</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>adf0552a84b56b12086850e58cf1bb38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_SIZE_POS_MAX</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a68dda939e12b7952ec5f400764368b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_COMMAND_PAYLOAD_POS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ab1142fa6f25cd01fb6b37ab88b63a28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ASSIGN_CLIENT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a3cfc9e735fb116ed180586311133e30f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ASSIGN_CLIENT_ACK</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ad4481854605acd38d1c244e6bcb57055</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTER_APPLICATION</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a0168037f17b43d05e92a5b8d63322c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEREGISTER_APPLICATION</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a63e416385bfa87f5525fcb6b32887f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_APPLICATION_LOST</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af565784549b2bcef97458f065e2ddda4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_INFO</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a1f042d5c1bd57acc2644d4354b483187</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTERED_ACK</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a105e332c7c734ace4ca6f8a5315e7ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PING</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8900ac5d57d2e9ef74ca2da306e32a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PONG</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>adb39d06de898161aff241cca713fbae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFER_SERVICE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a233d93ddb11067f6931603c932d61f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_STOP_OFFER_SERVICE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>afab6e8684a8494b37aa7fbf7fc918181</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a727c0bf4b2e65629a07a9b48a6e27486</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNSUBSCRIBE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a677d96ca806f5e190c646081e4c65051</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REQUEST_SERVICE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a51537a35e3708618cfe240d136983467</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RELEASE_SERVICE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a01c83a281f7780667e7a8ff24a1ac48e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_NACK</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a6656a357e1b1ba391806ee64b2c34b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_ACK</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa7b8725effa6ac86b1a1ccce4b7cfd55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8d59b0a13049a46c7f212b754452325e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_NOTIFY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ad15987f599f25eb206763a7e7167018f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_NOTIFY_ONE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a444bbb25bc19ee8857a66f8bbb5dcbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTER_EVENT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ae8ba4318e67c5593ca80029a1d8083fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNREGISTER_EVENT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a1a080f0438b999051a6a11f599ef5370</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ID_RESPONSE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>afdbd60e39c03793426eedf44f4319d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ID_REQUEST</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>afb3f102bc610a57ba6b8701a441dc8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFERED_SERVICES_REQUEST</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a15cd621b9421daeef83be08b7942403b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFERED_SERVICES_RESPONSE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a58135bc145388bf1d94da9dcdc1304e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNSUBSCRIBE_ACK</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a2593cedf60fa704967d5db1e09c25913</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RESEND_PROVIDED_EVENTS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a0b04731ecff7c716c4710d505cc61983</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_POLICY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af824457a8128b7d26777067433342d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_POLICY_RESPONSE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ae05b630a033defbc1d05e03f1ab5838e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REMOVE_SECURITY_POLICY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a184e64741e75e00750eccedb777da7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REMOVE_SECURITY_POLICY_RESPONSE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a2bb47c63a5e82ff81b735960881cc04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_CREDENTIALS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a467ae735ffe59b83a487c9bf1fbe5eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DISTRIBUTE_SECURITY_POLICIES</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a9e1d7781eeb5ba353f8bf31891552e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_POLICY_INT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a30a3b38ea724c280958b754c31a77ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a66157c8e6d5b23ad8697cf0cd90d4068</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_INSTANCE_POS_MIN</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a5d6659e17bc31218d7a8868fdab178be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_INSTANCE_POS_MAX</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a45592e22b9bd611fb1e1ecbe78016e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_RELIABLE_POS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa9ce729f3393f10fb11c77bb5f48e7f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_CHECK_STATUS_POS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8e5341ac0092ffdd0e543813617cc8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_DST_CLIENT_POS_MIN</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8da3a9de53c7d7c96a0a5af2edc26cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_DST_CLIENT_POS_MAX</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a1cbc5d979b1fe541c22fe8d2a01bd821</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEND_COMMAND_PAYLOAD_POS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a85cddae48cb5d2255c08bf8b92ad9581</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ASSIGN_CLIENT_ACK_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ad51c195f6599c37c9299645d93a54491</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFER_SERVICE_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a3b3bbdc3071439125a9c44f18141ab23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REQUEST_SERVICE_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a3e0b0cac1687859383088edb6b35331c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RELEASE_SERVICE_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a72ca9ab709fc8ec72fb964d5b9fd5084</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_STOP_OFFER_SERVICE_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a279e591907cea9d7abb6cbe408715a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a80da8541a348dc6dfeb1ded54063dc3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_ACK_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a166da7766eb4e4565f565c32f7860224</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SUBSCRIBE_NACK_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a294ea351dc6a0fd64ae5b68d618b46c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNSUBSCRIBE_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a07ddd90f4719a556a913cccbd48d939b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNSUBSCRIBE_ACK_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a6d33324fa2f1d8ed497c829a3495124f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTER_EVENT_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a57656c3e1f2d3125f24b4bd3aaf8a098</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNREGISTER_EVENT_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af7abc85d3aa88d2d1fe6ac968cb2fd80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_OFFERED_SERVICES_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ae3f6b9a471ab690e209bf631e7f62efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RESEND_PROVIDED_EVENTS_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a448e942840897aede093d749fa3c43c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REMOVE_SECURITY_POLICY_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a6155ec8fcc926b3ad2b50267f060fb0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UPDATE_SECURITY_POLICY_RESPONSE_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa1c509b3cda3dc0e7f156f6d4dd3d4a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REMOVE_SECURITY_POLICY_RESPONSE_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a523be73bc9d92302c02ac6d439b184a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PING_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ac32e8203d8de6f5e25d684d8c1559a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PONG_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>acb5dbaf54bf1e142bee1c9275e13123f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTER_APPLICATION_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a2269342f8caf82ac6ae0b51a59566898</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEREGISTER_APPLICATION_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ac43af03536260815ab1acf97bdf0d990</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REGISTERED_ACK_COMMAND_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a26aa1b774be7c0311e6ef7901244de41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DATA_ID</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8589d99676ddb6a66526702675bc2021</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DIAGNOSIS_ADDRESS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aac84ac0dca918a5184295693d01cb894</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_SHM_PERMISSION</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a4d89d5b3d38e9c57e35c64d20e35857c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_UDS_PERMISSIONS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>abea1dd50214a62d2a43097d83a3e59a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_READY_MESSAGE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ac0a6e139b655482c68fd8aed45c4f2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_NPDU_DEBOUNCING_NANO</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ab609a8a35eea15ed2e27e7362e52f2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_NPDU_MAXIMUM_RETENTION_NANO</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a97ebcaab3aa52fa4ad9ffca4d41455fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_info_entry_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a5aea15babe667876089dabc8145f4edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a9b40196ac95c5d105276c9b4f88ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad9909c88f5eb36ac32bd1942f59b61ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad63a51b60ad623de673de76dc5614d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a5aea15babe667876089dabc8145f4edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a9b40196ac95c5d105276c9b4f88ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad9909c88f5eb36ac32bd1942f59b61ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad63a51b60ad623de673de76dc5614d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>port_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4d1d428cc930cdc04bca08cdaa1e4839</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>service.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>service_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::service</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>service_instance_range.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>service__instance__range_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::service_instance_range</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>trace.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>implementation_2configuration_2include_2trace_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::trace_channel</class>
    <class kind="struct">vsomeip_v3::cfg::trace_filter</class>
    <class kind="struct">vsomeip_v3::cfg::trace</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>trace.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2trace_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../../compat/vsomeip/constants.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::trace::channel</class>
    <class kind="class">vsomeip::trace::connector</class>
    <namespace>vsomeip</namespace>
    <namespace>vsomeip::trace</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>filter_id_t</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>a038e1f315125aadab49a6bffd54e5ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; service_t, instance_t, method_t &gt;</type>
      <name>match_t</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>ac48c2a837611c64ff228062b2866ec27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>af6ffad10d3cb32db0690edbb378674b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_ID</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>a624ef4d24ada8d671a01c8fc1eb63b0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>trace.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2trace_8hpp.html</filename>
    <class kind="class">vsomeip_v3::trace::channel</class>
    <class kind="class">vsomeip_v3::trace::connector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>filter_id_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>abdc3d3f7d319ce0af305457e0447cda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; service_t, instance_t, method_t &gt;</type>
      <name>match_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a3efc612d82eb681b5991adae7afdf8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a85acf523d361436c707c38c0de473cba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>watchdog.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>watchdog_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::watchdog</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>configuration_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/src/</path>
    <filename>configuration__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="client_8hpp" name="client.hpp" local="yes" imported="no">../include/client.hpp</includes>
    <includes id="configuration__impl_8hpp" name="configuration_impl.hpp" local="yes" imported="no">../include/configuration_impl.hpp</includes>
    <includes id="configuration_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="eventgroup_8hpp" name="eventgroup.hpp" local="yes" imported="no">../include/eventgroup.hpp</includes>
    <includes id="service_8hpp" name="service.hpp" local="yes" imported="no">../include/service.hpp</includes>
    <includes id="logger__impl_8hpp" name="logger_impl.hpp" local="yes" imported="no">../../logger/include/logger_impl.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../../routing/include/event.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../service_discovery/include/defines.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="plugin__manager_8hpp" name="plugin_manager.hpp" local="yes" imported="no">../../plugin/include/plugin_manager.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
    <member kind="define">
      <type>#define</type>
      <name>WIN32_LEAN_AND_MEAN</name>
      <anchorfile>configuration__impl_8cpp.html</anchorfile>
      <anchor>ac7bef5d85e3dcd73eef56ad39ffc84a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_plugin_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/src/</path>
    <filename>configuration__plugin__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="configuration__plugin__impl_8hpp" name="configuration_plugin_impl.hpp" local="yes" imported="no">../include/configuration_plugin_impl.hpp</includes>
    <includes id="configuration__impl_8hpp" name="configuration_impl.hpp" local="yes" imported="no">../include/configuration_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>buffer.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/buffer/</path>
    <filename>e2e__protection_2include_2buffer_2buffer_8hpp.html</filename>
    <class kind="class">vsomeip_v3::buffer_view</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>e2e_buffer</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa86ee4712520ff7bebfabb8769c2ee9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6fb00227954a741ce279e5897cb43b8d</anchor>
      <arglist>(std::ostream &amp;_os, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>buffer.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>endpoints_2include_2buffer_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::timing</class>
    <class kind="struct">vsomeip_v3::train</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NANOSECONDS_MAX</name>
      <anchorfile>endpoints_2include_2buffer_8hpp.html</anchorfile>
      <anchor>a6a7f2e84b6860f188a2a13231425c55f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; byte_t &gt;</type>
      <name>message_buffer_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a01f33f6dfb9f653b04c4ca53de0761ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; message_buffer_t &gt;</type>
      <name>message_buffer_ptr_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adefbfff9889d6da476433d6a97a721eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>crc.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/crc/</path>
    <filename>crc_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e_crc</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>e2e_provider.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/</path>
    <filename>e2e__provider_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../buffer/buffer.hpp</includes>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../e2exf/config.hpp</includes>
    <includes id="e2e_8hpp" name="e2e.hpp" local="yes" imported="no">../../../../configuration/include/e2e.hpp</includes>
    <includes id="profile__interface_8hpp" name="profile_interface.hpp" local="yes" imported="no">profile_interface/profile_interface.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::e2e_provider</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
  </compound>
  <compound kind="file">
    <name>e2e_provider_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/</path>
    <filename>e2e__provider__impl_8hpp.html</filename>
    <includes id="e2e__provider_8hpp" name="e2e_provider.hpp" local="yes" imported="no">e2e_provider.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">profile_interface/checker.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">profile_interface/protector.hpp</includes>
    <includes id="vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../../../interface/vsomeip/export.hpp</includes>
    <includes id="vsomeip_2plugin_8hpp" name="plugin.hpp" local="yes" imported="no">../../../../../interface/vsomeip/plugin.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::e2e_provider_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile01/</path>
    <filename>profile01_2checker_8hpp.html</filename>
    <includes id="profile__01_8hpp" name="profile_01.hpp" local="yes" imported="no">../profile01/profile_01.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../profile_interface/checker.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile01::profile_01_checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile04/</path>
    <filename>profile04_2checker_8hpp.html</filename>
    <includes id="profile__04_8hpp" name="profile_04.hpp" local="yes" imported="no">../profile04/profile_04.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../profile_interface/checker.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile04::profile_04_checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile_custom/</path>
    <filename>profile__custom_2checker_8hpp.html</filename>
    <includes id="profile__custom_8hpp" name="profile_custom.hpp" local="yes" imported="no">../profile_custom/profile_custom.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../profile_interface/checker.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_custom::profile_custom_checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile_interface/</path>
    <filename>profile__interface_2checker_8hpp.html</filename>
    <includes id="profile__interface_8hpp" name="profile_interface.hpp" local="yes" imported="no">../profile_interface/profile_interface.hpp</includes>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_interface::checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_interface</namespace>
  </compound>
  <compound kind="file">
    <name>profile_01.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile01/</path>
    <filename>profile__01_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile01::profile_01</class>
    <class kind="struct">vsomeip_v3::e2e::profile01::profile_config</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
    <member kind="enumeration">
      <type></type>
      <name>p01_data_id_mode</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile01.html</anchorfile>
      <anchor>a2e8caaeb4eb85dafd31c5ebb188f8e98</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98a8cde6ca1876fd3f658a3bce6783b689a">E2E_P01_DATAID_BOTH</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98ad94905468a028f23a2bcc87631a7a135">E2E_P01_DATAID_ALT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98aa98164a5695ba23e4bcabd55c904c2c2">E2E_P01_DATAID_LOW</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98ab2f6fa1897c0932a8c97fd7ba731643c">E2E_P01_DATAID_NIBBLE</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile01/</path>
    <filename>profile01_2protector_8hpp.html</filename>
    <includes id="profile__01_8hpp" name="profile_01.hpp" local="yes" imported="no">../profile01/profile_01.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../profile_interface/protector.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile01::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile04/</path>
    <filename>profile04_2protector_8hpp.html</filename>
    <includes id="profile__04_8hpp" name="profile_04.hpp" local="yes" imported="no">../profile04/profile_04.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../profile_interface/protector.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile04::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile_custom/</path>
    <filename>profile__custom_2protector_8hpp.html</filename>
    <includes id="profile__custom_8hpp" name="profile_custom.hpp" local="yes" imported="no">../profile_custom/profile_custom.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../profile_interface/protector.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_custom::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile_interface/</path>
    <filename>profile__interface_2protector_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <includes id="profile__interface_8hpp" name="profile_interface.hpp" local="yes" imported="no">../profile_interface/profile_interface.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_interface::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_interface</namespace>
  </compound>
  <compound kind="file">
    <name>profile_04.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile04/</path>
    <filename>profile__04_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile04::profile_04</class>
    <class kind="struct">vsomeip_v3::e2e::profile04::profile_config</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_E2E_PROFILE04_MAX_INSTANCE</name>
      <anchorfile>profile__04_8hpp.html</anchorfile>
      <anchor>a3e7140d3d9234824497eb06bf8fd136b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>profile_custom.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile_custom/</path>
    <filename>profile__custom_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_custom::profile_custom</class>
    <class kind="struct">vsomeip_v3::e2e::profile_custom::profile_config</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>profile_interface.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2e/profile/profile_interface/</path>
    <filename>profile__interface_8hpp.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile_interface::profile_interface</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_interface</namespace>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>check_status_t</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>af012b9975eaac10690dfee805716c8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>generic_check_status</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_OK</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba4964058702f44175c383698310bee9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_WRONG_CRC</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba8973583c38ef134372426016679e2213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba6a1733e8d1357e370256f30cdf22e20e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>config.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/include/e2exf/</path>
    <filename>config_8hpp.html</filename>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../e2e/profile/profile_interface/checker.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../e2e/profile/profile_interface/protector.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2exf</namespace>
    <member kind="typedef">
      <type>std::pair&lt; service_t, event_t &gt;</type>
      <name>data_identifier_t</name>
      <anchorfile>namespacevsomeip__v3_1_1e2exf.html</anchorfile>
      <anchor>a3aac6ade88468e74745cab623c6818e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3_1_1e2exf.html</anchorfile>
      <anchor>aeab6b6be4e8186e138c779dba35691fd</anchor>
      <arglist>(std::ostream &amp;_os, const e2exf::data_identifier_t &amp;_data_identifier)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>buffer.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/buffer/</path>
    <filename>buffer_8cpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../e2e_protection/include/buffer/buffer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6fb00227954a741ce279e5897cb43b8d</anchor>
      <arglist>(std::ostream &amp;_os, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>crc.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/crc/</path>
    <filename>crc_8cpp.html</filename>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../include/crc/crc.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>e2e_provider_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/</path>
    <filename>e2e__provider__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="e2e__provider__impl_8hpp" name="e2e_provider_impl.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/e2e_provider_impl.hpp</includes>
    <includes id="profile01_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile01/checker.hpp</includes>
    <includes id="profile__01_8hpp" name="profile_01.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile01/profile_01.hpp</includes>
    <includes id="profile01_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile01/protector.hpp</includes>
    <includes id="profile04_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile04/checker.hpp</includes>
    <includes id="profile__04_8hpp" name="profile_04.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile04/profile_04.hpp</includes>
    <includes id="profile04_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile04/protector.hpp</includes>
    <includes id="profile__custom_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile_custom/checker.hpp</includes>
    <includes id="profile__custom_8hpp" name="profile_custom.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile_custom/profile_custom.hpp</includes>
    <includes id="profile__custom_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile_custom/protector.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
  </compound>
  <compound kind="file">
    <name>checker.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile01/</path>
    <filename>profile01_2checker_8cpp.html</filename>
    <includes id="profile01_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile01/checker.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>checker.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile04/</path>
    <filename>profile04_2checker_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile04_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile04/checker.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>checker.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile_custom/</path>
    <filename>profile__custom_2checker_8cpp.html</filename>
    <includes id="profile__custom_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile_custom/checker.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>profile_01.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile01/</path>
    <filename>profile__01_8cpp.html</filename>
    <includes id="profile__01_8hpp" name="profile_01.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile01/profile_01.hpp</includes>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../../../../e2e_protection/include/crc/crc.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>protector.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile01/</path>
    <filename>profile01_2protector_8cpp.html</filename>
    <includes id="profile01_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile01/protector.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>protector.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile04/</path>
    <filename>profile04_2protector_8cpp.html</filename>
    <includes id="profile04_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile04/protector.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>protector.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile_custom/</path>
    <filename>profile__custom_2protector_8cpp.html</filename>
    <includes id="profile__custom_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile_custom/protector.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>profile_04.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile04/</path>
    <filename>profile__04_8cpp.html</filename>
    <includes id="profile__04_8hpp" name="profile_04.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile04/profile_04.hpp</includes>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../../../../e2e_protection/include/crc/crc.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>profile_custom.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2e/profile/profile_custom/</path>
    <filename>profile__custom_8cpp.html</filename>
    <includes id="profile__custom_8hpp" name="profile_custom.hpp" local="yes" imported="no">../../../../../e2e_protection/include/e2e/profile/profile_custom/profile_custom.hpp</includes>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../../../../e2e_protection/include/crc/crc.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>config.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/e2e_protection/src/e2exf/</path>
    <filename>config_8cpp.html</filename>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../../e2e_protection/include/e2exf/config.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>add61fbb87ebbb6ec79d31bdfa4b51c85</anchor>
      <arglist>(std::ostream &amp;_os, const e2exf::data_identifier_t &amp;_data_identifier)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>client_endpoint.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>client__endpoint_8hpp.html</filename>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">endpoint.hpp</includes>
    <class kind="class">vsomeip_v3::client_endpoint</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>client_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>client__endpoint__impl_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="endpoint__impl_8hpp" name="endpoint_impl.hpp" local="yes" imported="no">endpoint_impl.hpp</includes>
    <includes id="client__endpoint_8hpp" name="client_endpoint.hpp" local="yes" imported="no">client_endpoint.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">tp.hpp</includes>
    <class kind="class">vsomeip_v3::client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>credentials.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>credentials_8hpp.html</filename>
    <class kind="class">vsomeip_v3::credentials</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>endpoint_8hpp.html</filename>
    <class kind="class">vsomeip_v3::endpoint</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_definition.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>endpoint__definition_8hpp.html</filename>
    <class kind="class">vsomeip_v3::endpoint_definition</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_host.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>endpoint__host_8hpp.html</filename>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <class kind="class">vsomeip_v3::endpoint_host</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>endpoint__impl_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">endpoint.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <class kind="class">vsomeip_v3::endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_manager_base.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>endpoint__manager__base_8hpp.html</filename>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">endpoint.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">endpoint_host.hpp</includes>
    <class kind="class">vsomeip_v3::endpoint_manager_base</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_manager_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>endpoint__manager__impl_8hpp.html</filename>
    <includes id="endpoint__manager__base_8hpp" name="endpoint_manager_base.hpp" local="yes" imported="no">../include/endpoint_manager_base.hpp</includes>
    <class kind="class">vsomeip_v3::endpoint_manager_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>local_client_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>local__client__endpoint__impl_8hpp.html</filename>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">client_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::local_client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::local::stream_protocol &gt;</type>
      <name>local_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2481a1bb872dc644fbe8b5478df06fe1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>local_server_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>local__server__endpoint__impl_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">server_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::local_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::local::stream_protocol_ext &gt;</type>
      <name>local_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a96aa624e34ff49ecbbb6100530cbf472</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>netlink_connector.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>netlink__connector_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../endpoints/include/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::nl_endpoint</class>
    <class kind="class">vsomeip_v3::nl_protocol</class>
    <class kind="class">vsomeip_v3::netlink_connector</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::function&lt; void(bool, std::string, bool) &gt;</type>
      <name>net_if_changed_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae3af9433add9895084593fe649e7c67f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>server_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>server__endpoint__impl_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="endpoint__impl_8hpp" name="endpoint_impl.hpp" local="yes" imported="no">endpoint_impl.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">tp.hpp</includes>
    <class kind="class">vsomeip_v3::server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>tcp_client_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>tcp__client__endpoint__impl_8hpp.html</filename>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">client_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::tcp_client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>tcp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab8709a93ec9ea91b0ce3a00cbef0a3a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tcp_server_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>tcp__server__endpoint__impl_8hpp.html</filename>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">server_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::tcp_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>tcp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5a870a512e63c528c3063ec5233b76dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tp.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>tp_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <class kind="class">vsomeip_v3::tp::tp</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_HEADER_SIZE</name>
      <anchorfile>tp_8hpp.html</anchorfile>
      <anchor>afd98449cbef7d3d148f62b758116ac14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_HEADER_POS_MIN</name>
      <anchorfile>tp_8hpp.html</anchorfile>
      <anchor>a4140427891f5f80058290e53bcb80d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_HEADER_POS_MAX</name>
      <anchorfile>tp_8hpp.html</anchorfile>
      <anchor>ace06b7a8718f0701ca8cccbafd1ddb1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_PAYLOAD_POS</name>
      <anchorfile>tp_8hpp.html</anchorfile>
      <anchor>aff87ff2bd75661cc2176c47cfdc13836</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>tp_header_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>ae442a454e5c8747a7f581c3beab38f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>tp_message_type_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>ab0ea6b850ec9b67c07d2d4ab5cb74b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; message_buffer_ptr_t &gt;</type>
      <name>tp_split_messages_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>a6aa9829e35052a42f8cafa86aa2868d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint8_t</type>
      <name>TP_FLAG</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>af5908255bf86963844054628ffb83bde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tp_message.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>tp__message_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <class kind="class">vsomeip_v3::tp::tp_message</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>tp_reassembler.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>tp__reassembler_8hpp.html</filename>
    <includes id="tp__message_8hpp" name="tp_message.hpp" local="yes" imported="no">tp_message.hpp</includes>
    <class kind="class">vsomeip_v3::tp::tp_reassembler</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>udp_client_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>udp__client__endpoint__impl_8hpp.html</filename>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">client_endpoint_impl.hpp</includes>
    <includes id="tp__reassembler_8hpp" name="tp_reassembler.hpp" local="yes" imported="no">tp_reassembler.hpp</includes>
    <class kind="class">vsomeip_v3::udp_client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::udp &gt;</type>
      <name>udp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab7d6a552c539466f4522b91865d9bf08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>udp_server_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>udp__server__endpoint__impl_8hpp.html</filename>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">server_endpoint_impl.hpp</includes>
    <includes id="tp__reassembler_8hpp" name="tp_reassembler.hpp" local="yes" imported="no">tp_reassembler.hpp</includes>
    <class kind="class">vsomeip_v3::udp_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::udp_ext &gt;</type>
      <name>udp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2e435c1b1d43d3b476171e426d96f31e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>virtual_server_endpoint_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/include/</path>
    <filename>virtual__server__endpoint__impl_8hpp.html</filename>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../include/endpoint.hpp</includes>
    <class kind="class">vsomeip_v3::virtual_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>client_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">../include/client_endpoint_impl.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>credentials.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>credentials_8cpp.html</filename>
    <includes id="credentials_8hpp" name="credentials.hpp" local="yes" imported="no">../include/credentials.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_definition.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>endpoint__definition_8cpp.html</filename>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="endpoint__impl_8hpp" name="endpoint_impl.hpp" local="yes" imported="no">../include/endpoint_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_manager_base.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>endpoint__manager__base_8cpp.html</filename>
    <includes id="endpoint__manager__base_8hpp" name="endpoint_manager_base.hpp" local="yes" imported="no">../include/endpoint_manager_base.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">../../routing/include/routing_manager_base.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="local__client__endpoint__impl_8hpp" name="local_client_endpoint_impl.hpp" local="yes" imported="no">../include/local_client_endpoint_impl.hpp</includes>
    <includes id="local__server__endpoint__impl_8hpp" name="local_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_server_endpoint_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_manager_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>endpoint__manager__impl_8cpp.html</filename>
    <includes id="endpoint__manager__impl_8hpp" name="endpoint_manager_impl.hpp" local="yes" imported="no">../include/endpoint_manager_impl.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="udp__client__endpoint__impl_8hpp" name="udp_client_endpoint_impl.hpp" local="yes" imported="no">../include/udp_client_endpoint_impl.hpp</includes>
    <includes id="udp__server__endpoint__impl_8hpp" name="udp_server_endpoint_impl.hpp" local="yes" imported="no">../include/udp_server_endpoint_impl.hpp</includes>
    <includes id="tcp__client__endpoint__impl_8hpp" name="tcp_client_endpoint_impl.hpp" local="yes" imported="no">../include/tcp_client_endpoint_impl.hpp</includes>
    <includes id="tcp__server__endpoint__impl_8hpp" name="tcp_server_endpoint_impl.hpp" local="yes" imported="no">../include/tcp_server_endpoint_impl.hpp</includes>
    <includes id="local__server__endpoint__impl_8hpp" name="local_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_server_endpoint_impl.hpp</includes>
    <includes id="virtual__server__endpoint__impl_8hpp" name="virtual_server_endpoint_impl.hpp" local="yes" imported="no">../include/virtual_server_endpoint_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">../../routing/include/routing_manager_base.hpp</includes>
    <includes id="routing__manager__impl_8hpp" name="routing_manager_impl.hpp" local="yes" imported="no">../../routing/include/routing_manager_impl.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SD_LISTEN_FDS_START</name>
      <anchorfile>endpoint__manager__impl_8cpp.html</anchorfile>
      <anchor>ad91f989c8a2fc570846bb7b131ec3230</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>local_client_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>local__client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="local__client__endpoint__impl_8hpp" name="local_client_endpoint_impl.hpp" local="yes" imported="no">../include/local_client_endpoint_impl.hpp</includes>
    <includes id="local__server__endpoint__impl_8hpp" name="local_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_server_endpoint_impl.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="credentials_8hpp" name="credentials.hpp" local="yes" imported="no">../include/credentials.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>local_server_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>local__server__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="local__server__endpoint__impl_8hpp" name="local_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_server_endpoint_impl.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="credentials_8hpp" name="credentials.hpp" local="yes" imported="no">../include/credentials.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>netlink_connector.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>netlink__connector_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="netlink__connector_8hpp" name="netlink_connector.hpp" local="yes" imported="no">../include/netlink_connector.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>server_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>server__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">../include/server_endpoint_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../service_discovery/include/defines.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>tcp_client_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>tcp__client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="tcp__client__endpoint__impl_8hpp" name="tcp_client_endpoint_impl.hpp" local="yes" imported="no">../include/tcp_client_endpoint_impl.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>tcp_server_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>tcp__server__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="tcp__server__endpoint__impl_8hpp" name="tcp_server_endpoint_impl.hpp" local="yes" imported="no">../include/tcp_server_endpoint_impl.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>tp.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>tp_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>tp_message.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>tp__message_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="tp__message_8hpp" name="tp_message.hpp" local="yes" imported="no">../include/tp_message.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>tp_reassembler.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>tp__reassembler_8cpp.html</filename>
    <includes id="tp__reassembler_8hpp" name="tp_reassembler.hpp" local="yes" imported="no">../include/tp_reassembler.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>udp_client_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>udp__client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="udp__client__endpoint__impl_8hpp" name="udp_client_endpoint_impl.hpp" local="yes" imported="no">../include/udp_client_endpoint_impl.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>udp_server_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>udp__server__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="udp__server__endpoint__impl_8hpp" name="udp_server_endpoint_impl.hpp" local="yes" imported="no">../include/udp_server_endpoint_impl.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../service_discovery/include/defines.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>virtual_server_endpoint_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/endpoints/src/</path>
    <filename>virtual__server__endpoint__impl_8cpp.html</filename>
    <includes id="virtual__server__endpoint__impl_8hpp" name="virtual_server_endpoint_impl.hpp" local="yes" imported="no">../include/virtual_server_endpoint_impl.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>datagram_socket_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/</path>
    <filename>datagram__socket__service__ext_8hpp.html</filename>
    <includes id="1_855_2boost_2asio_2detail_2reactive__socket__service__ext_8hpp" name="reactive_socket_service_ext.hpp" local="yes" imported="no">detail/reactive_socket_service_ext.hpp</includes>
    <class kind="class">boost::asio::datagram_socket_service_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>socket_acceptor_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/</path>
    <filename>socket__acceptor__service__ext_8hpp.html</filename>
    <class kind="class">boost::asio::socket_acceptor_service_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>stream_socket_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/</path>
    <filename>1_855_2boost_2asio_2stream__socket__service__ext_8hpp.html</filename>
    <class kind="class">boost::asio::stream_socket_service_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>stream_socket_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/</path>
    <filename>1_866_2boost_2asio_2stream__socket__service__ext_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>basic_datagram_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/</path>
    <filename>1_855_2boost_2asio_2basic__datagram__socket__ext_8hpp.html</filename>
    <includes id="datagram__socket__service__ext_8hpp" name="datagram_socket_service_ext.hpp" local="no" imported="no">boost/asio/datagram_socket_service_ext.hpp</includes>
    <class kind="class">boost::asio::basic_datagram_socket_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>basic_datagram_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/</path>
    <filename>1_866_2boost_2asio_2basic__datagram__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_datagram_socket_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>basic_datagram_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/</path>
    <filename>1_870_2boost_2asio_2basic__datagram__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_datagram_socket_ext</class>
    <class kind="struct">boost::asio::basic_datagram_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_DATAGRAM_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_870_2boost_2asio_2basic__datagram__socket__ext_8hpp.html</anchorfile>
      <anchor>a8297d1627b00d5c471b4af655456cd8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_datagram_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/</path>
    <filename>1_874_2boost_2asio_2basic__datagram__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_datagram_socket_ext</class>
    <class kind="struct">boost::asio::basic_datagram_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_DATAGRAM_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_874_2boost_2asio_2basic__datagram__socket__ext_8hpp.html</anchorfile>
      <anchor>a8297d1627b00d5c471b4af655456cd8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_datagram_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/</path>
    <filename>1_876_2boost_2asio_2basic__datagram__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_datagram_socket_ext</class>
    <class kind="struct">boost::asio::basic_datagram_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_DATAGRAM_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_876_2boost_2asio_2basic__datagram__socket__ext_8hpp.html</anchorfile>
      <anchor>a8297d1627b00d5c471b4af655456cd8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_acceptor_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/</path>
    <filename>1_855_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</filename>
    <includes id="socket__acceptor__service__ext_8hpp" name="socket_acceptor_service_ext.hpp" local="no" imported="no">boost/asio/socket_acceptor_service_ext.hpp</includes>
    <class kind="class">boost::asio::basic_socket_acceptor_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>basic_socket_acceptor_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/</path>
    <filename>1_866_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_acceptor_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SVC_T</name>
      <anchorfile>1_866_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</anchorfile>
      <anchor>a319c8c5ff5ce5b1fe921ba05e043d3cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_acceptor_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/</path>
    <filename>1_870_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_acceptor_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_ACCEPTOR_EXT_FWD_DECL</name>
      <anchorfile>1_870_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</anchorfile>
      <anchor>ae652bc53a1dd425a86ec509e6b8ce9c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_acceptor_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/</path>
    <filename>1_874_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_acceptor_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_ACCEPTOR_EXT_FWD_DECL</name>
      <anchorfile>1_874_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</anchorfile>
      <anchor>ae652bc53a1dd425a86ec509e6b8ce9c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_acceptor_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/</path>
    <filename>1_876_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_acceptor_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_ACCEPTOR_EXT_FWD_DECL</name>
      <anchorfile>1_876_2boost_2asio_2basic__socket__acceptor__ext_8hpp.html</anchorfile>
      <anchor>ae652bc53a1dd425a86ec509e6b8ce9c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/</path>
    <filename>1_866_2boost_2asio_2basic__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SVC_T</name>
      <anchorfile>1_866_2boost_2asio_2basic__socket__ext_8hpp.html</anchorfile>
      <anchor>a319c8c5ff5ce5b1fe921ba05e043d3cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/</path>
    <filename>1_870_2boost_2asio_2basic__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_ext</class>
    <class kind="struct">boost::asio::basic_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_870_2boost_2asio_2basic__socket__ext_8hpp.html</anchorfile>
      <anchor>abb40ef1ec11526dea101a99a27ecf314</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/</path>
    <filename>1_874_2boost_2asio_2basic__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_ext</class>
    <class kind="struct">boost::asio::basic_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_874_2boost_2asio_2basic__socket__ext_8hpp.html</anchorfile>
      <anchor>abb40ef1ec11526dea101a99a27ecf314</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/</path>
    <filename>1_876_2boost_2asio_2basic__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_ext</class>
    <class kind="struct">boost::asio::basic_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_876_2boost_2asio_2basic__socket__ext_8hpp.html</anchorfile>
      <anchor>abb40ef1ec11526dea101a99a27ecf314</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/</path>
    <filename>1_866_2boost_2asio_2basic__socket__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SVC_T</name>
      <anchorfile>1_866_2boost_2asio_2basic__socket__ext__local_8hpp.html</anchorfile>
      <anchor>a319c8c5ff5ce5b1fe921ba05e043d3cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/</path>
    <filename>1_870_2boost_2asio_2basic__socket__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_ext_local</class>
    <class kind="struct">boost::asio::basic_socket_ext_local::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_EXT_LOCAL_FWD_DECL</name>
      <anchorfile>1_870_2boost_2asio_2basic__socket__ext__local_8hpp.html</anchorfile>
      <anchor>a81d2d92aee98fa6cf47dca9da4f588df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/</path>
    <filename>1_874_2boost_2asio_2basic__socket__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_ext_local</class>
    <class kind="struct">boost::asio::basic_socket_ext_local::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_EXT_LOCAL_FWD_DECL</name>
      <anchorfile>1_874_2boost_2asio_2basic__socket__ext__local_8hpp.html</anchorfile>
      <anchor>a81d2d92aee98fa6cf47dca9da4f588df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_socket_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/</path>
    <filename>1_876_2boost_2asio_2basic__socket__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::basic_socket_ext_local</class>
    <class kind="struct">boost::asio::basic_socket_ext_local::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_SOCKET_EXT_LOCAL_FWD_DECL</name>
      <anchorfile>1_876_2boost_2asio_2basic__socket__ext__local_8hpp.html</anchorfile>
      <anchor>a81d2d92aee98fa6cf47dca9da4f588df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_stream_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/</path>
    <filename>1_855_2boost_2asio_2basic__stream__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_stream_socket_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>basic_stream_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/</path>
    <filename>1_866_2boost_2asio_2basic__stream__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_stream_socket_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>basic_stream_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/</path>
    <filename>1_870_2boost_2asio_2basic__stream__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_stream_socket_ext</class>
    <class kind="struct">boost::asio::basic_stream_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_STREAM_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_870_2boost_2asio_2basic__stream__socket__ext_8hpp.html</anchorfile>
      <anchor>a5c8effbbdcb503febb896e1c84d6f1aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_stream_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/</path>
    <filename>1_874_2boost_2asio_2basic__stream__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_stream_socket_ext</class>
    <class kind="struct">boost::asio::basic_stream_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_STREAM_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_874_2boost_2asio_2basic__stream__socket__ext_8hpp.html</anchorfile>
      <anchor>a5c8effbbdcb503febb896e1c84d6f1aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_stream_socket_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/</path>
    <filename>1_876_2boost_2asio_2basic__stream__socket__ext_8hpp.html</filename>
    <class kind="class">boost::asio::basic_stream_socket_ext</class>
    <class kind="struct">boost::asio::basic_stream_socket_ext::rebind_executor</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BASIC_STREAM_SOCKET_EXT_FWD_DECL</name>
      <anchorfile>1_876_2boost_2asio_2basic__stream__socket__ext_8hpp.html</anchorfile>
      <anchor>a5c8effbbdcb503febb896e1c84d6f1aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_UNUSED_TYPEDEF</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ab0eb5ce2950e36264981173b498b43ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a475b43deae177ad7ef02d87a0ff998a0</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a764e47b61f0cd2beb9bebfb5059c5b1f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ACCEPT_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a2d8ef139e56d124b3d3b6d631b8578ef</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPOSED_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a0b2946595427a0af196527121f315064</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ad6008561c7ea467854b30b5f2a4d3272</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a475b43deae177ad7ef02d87a0ff998a0</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a764e47b61f0cd2beb9bebfb5059c5b1f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RANGE_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3cb95d6b4c906b56f3a62348a5a70d35</anchor>
      <arglist>(handler_type, handler, endpoint_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ITERATOR_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ac01c0b027f9e6ffdc64e6eb242f80bfc</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>aab9dd640714bd8f96186b605bfbeec93</anchor>
      <arglist>(handler_type, handler, range_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_LEGACY_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3554a5669eb5970afa6f9964df03531f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a764e47b61f0cd2beb9bebfb5059c5b1f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RANGE_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3cb95d6b4c906b56f3a62348a5a70d35</anchor>
      <arglist>(handler_type, handler, endpoint_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ITERATOR_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ac01c0b027f9e6ffdc64e6eb242f80bfc</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>aab9dd640714bd8f96186b605bfbeec93</anchor>
      <arglist>(handler_type, handler, range_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_LEGACY_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3554a5669eb5970afa6f9964df03531f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a764e47b61f0cd2beb9bebfb5059c5b1f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RANGE_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3cb95d6b4c906b56f3a62348a5a70d35</anchor>
      <arglist>(handler_type, handler, endpoint_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ITERATOR_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ac01c0b027f9e6ffdc64e6eb242f80bfc</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>aab9dd640714bd8f96186b605bfbeec93</anchor>
      <arglist>(handler_type, handler, range_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_LEGACY_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3554a5669eb5970afa6f9964df03531f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a764e47b61f0cd2beb9bebfb5059c5b1f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RANGE_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3cb95d6b4c906b56f3a62348a5a70d35</anchor>
      <arglist>(handler_type, handler, endpoint_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ITERATOR_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ac01c0b027f9e6ffdc64e6eb242f80bfc</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>aab9dd640714bd8f96186b605bfbeec93</anchor>
      <arglist>(handler_type, handler, range_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_UNUSED_TYPEDEF</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ab0eb5ce2950e36264981173b498b43ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a475b43deae177ad7ef02d87a0ff998a0</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT_LOCAL</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ace6498603d87493135329cbce71b699b</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ACCEPT_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2d8ef139e56d124b3d3b6d631b8578ef</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPOSED_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a0b2946595427a0af196527121f315064</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ad6008561c7ea467854b30b5f2a4d3272</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_855_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a475b43deae177ad7ef02d87a0ff998a0</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT_LOCAL</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ace6498603d87493135329cbce71b699b</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ACCEPT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2d8ef139e56d124b3d3b6d631b8578ef</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_MOVE_ACCEPT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a46bf7aef50e7c542e0164ee14e1be556</anchor>
      <arglist>(handler_type, handler, socket_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RANGE_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3cb95d6b4c906b56f3a62348a5a70d35</anchor>
      <arglist>(handler_type, handler, endpoint_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ITERATOR_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ac01c0b027f9e6ffdc64e6eb242f80bfc</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>aab9dd640714bd8f96186b605bfbeec93</anchor>
      <arglist>(handler_type, handler, range_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_866_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_LEGACY_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3554a5669eb5970afa6f9964df03531f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT_LOCAL</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ace6498603d87493135329cbce71b699b</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RANGE_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3cb95d6b4c906b56f3a62348a5a70d35</anchor>
      <arglist>(handler_type, handler, endpoint_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ITERATOR_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ac01c0b027f9e6ffdc64e6eb242f80bfc</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>aab9dd640714bd8f96186b605bfbeec93</anchor>
      <arglist>(handler_type, handler, range_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_870_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_LEGACY_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3554a5669eb5970afa6f9964df03531f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT_LOCAL</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ace6498603d87493135329cbce71b699b</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RANGE_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3cb95d6b4c906b56f3a62348a5a70d35</anchor>
      <arglist>(handler_type, handler, endpoint_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ITERATOR_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ac01c0b027f9e6ffdc64e6eb242f80bfc</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>aab9dd640714bd8f96186b605bfbeec93</anchor>
      <arglist>(handler_type, handler, range_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_874_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_LEGACY_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3554a5669eb5970afa6f9964df03531f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT_LOCAL</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ace6498603d87493135329cbce71b699b</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RANGE_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3cb95d6b4c906b56f3a62348a5a70d35</anchor>
      <arglist>(handler_type, handler, endpoint_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ITERATOR_CONNECT_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ac01c0b027f9e6ffdc64e6eb242f80bfc</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>aab9dd640714bd8f96186b605bfbeec93</anchor>
      <arglist>(handler_type, handler, range_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>1_876_2boost_2asio_2detail_2handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/impl/</path>
    <filename>1_855_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_IPP</name>
      <anchorfile>1_855_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</anchorfile>
      <anchor>a780d4839eced668c526c5dcf19952266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/impl/</path>
    <filename>1_866_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_IPP</name>
      <anchorfile>1_866_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</anchorfile>
      <anchor>a780d4839eced668c526c5dcf19952266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/impl/</path>
    <filename>1_870_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_IPP</name>
      <anchorfile>1_870_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</anchorfile>
      <anchor>a780d4839eced668c526c5dcf19952266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/impl/</path>
    <filename>1_874_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_IPP</name>
      <anchorfile>1_874_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</anchorfile>
      <anchor>a780d4839eced668c526c5dcf19952266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/impl/</path>
    <filename>1_876_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_IPP</name>
      <anchorfile>1_876_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext_8ipp.html</anchorfile>
      <anchor>a780d4839eced668c526c5dcf19952266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/impl/</path>
    <filename>1_855_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_LOCAL_IPP</name>
      <anchorfile>1_855_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</anchorfile>
      <anchor>a8451183d29ec33bf4aa35f6be0782a85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/impl/</path>
    <filename>1_866_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_LOCAL_IPP</name>
      <anchorfile>1_866_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</anchorfile>
      <anchor>a8451183d29ec33bf4aa35f6be0782a85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/impl/</path>
    <filename>1_870_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_LOCAL_IPP</name>
      <anchorfile>1_870_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</anchorfile>
      <anchor>a8451183d29ec33bf4aa35f6be0782a85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/impl/</path>
    <filename>1_874_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_LOCAL_IPP</name>
      <anchorfile>1_874_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</anchorfile>
      <anchor>a8451183d29ec33bf4aa35f6be0782a85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/impl/</path>
    <filename>1_876_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_LOCAL_IPP</name>
      <anchorfile>1_876_2boost_2asio_2detail_2impl_2reactive__socket__service__base__ext__local_8ipp.html</anchorfile>
      <anchor>a8451183d29ec33bf4aa35f6be0782a85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/impl/</path>
    <filename>1_855_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_IPP</name>
      <anchorfile>1_855_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</anchorfile>
      <anchor>a92419c788c544309f61beb6985b56041</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/impl/</path>
    <filename>1_866_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_IPP</name>
      <anchorfile>1_866_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</anchorfile>
      <anchor>a92419c788c544309f61beb6985b56041</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/impl/</path>
    <filename>1_870_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_IPP</name>
      <anchorfile>1_870_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</anchorfile>
      <anchor>a92419c788c544309f61beb6985b56041</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/impl/</path>
    <filename>1_874_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_IPP</name>
      <anchorfile>1_874_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</anchorfile>
      <anchor>a92419c788c544309f61beb6985b56041</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/impl/</path>
    <filename>1_876_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_IPP</name>
      <anchorfile>1_876_2boost_2asio_2detail_2impl_2socket__ops__ext_8ipp.html</anchorfile>
      <anchor>a92419c788c544309f61beb6985b56041</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/impl/</path>
    <filename>1_855_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_LOCAL_IPP</name>
      <anchorfile>1_855_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</anchorfile>
      <anchor>ad7d50c21de8248ef91d2078309b14e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/impl/</path>
    <filename>1_866_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_LOCAL_IPP</name>
      <anchorfile>1_866_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</anchorfile>
      <anchor>ad7d50c21de8248ef91d2078309b14e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/impl/</path>
    <filename>1_870_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_LOCAL_IPP</name>
      <anchorfile>1_870_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</anchorfile>
      <anchor>ad7d50c21de8248ef91d2078309b14e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/impl/</path>
    <filename>1_874_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_LOCAL_IPP</name>
      <anchorfile>1_874_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</anchorfile>
      <anchor>ad7d50c21de8248ef91d2078309b14e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.ipp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/impl/</path>
    <filename>1_876_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_LOCAL_IPP</name>
      <anchorfile>1_876_2boost_2asio_2detail_2impl_2socket__ops__ext__local_8ipp.html</anchorfile>
      <anchor>ad7d50c21de8248ef91d2078309b14e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__recv__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__recv__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__recv__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__recv__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__recv__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__recv__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__recv__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__recv__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__recv__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__recv__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__recvfrom__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__recvmsg__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__service__base__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__service__base__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__service__base__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__service__base__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__service__base__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__service__base__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__service__base__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__service__base__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__service__base__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__service__base__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__service__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__service__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__service__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__service__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__service__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactive__socket__service__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext_local::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactive__socket__service__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext_local::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactive__socket__service__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext_local::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactive__socket__service__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext_local::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactive__socket__service__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext_local::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactor__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactor__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactor__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactor__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactor__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2reactor__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2reactor__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2reactor__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2reactor__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2reactor__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2socket__ops__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2socket__ops__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2socket__ops__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2socket__ops__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2socket__ops__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/detail/</path>
    <filename>1_855_2boost_2asio_2detail_2socket__ops__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/detail/</path>
    <filename>1_866_2boost_2asio_2detail_2socket__ops__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL size_t</type>
      <name>sync_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a8afdfaf811f58ea6572a0db43f88a8d8</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, bool all_empty, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/detail/</path>
    <filename>1_870_2boost_2asio_2detail_2socket__ops__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL size_t</type>
      <name>sync_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a8afdfaf811f58ea6572a0db43f88a8d8</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, bool all_empty, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/detail/</path>
    <filename>1_874_2boost_2asio_2detail_2socket__ops__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL size_t</type>
      <name>sync_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a8afdfaf811f58ea6572a0db43f88a8d8</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, bool all_empty, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/detail/</path>
    <filename>1_876_2boost_2asio_2detail_2socket__ops__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL size_t</type>
      <name>sync_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a8afdfaf811f58ea6572a0db43f88a8d8</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, bool all_empty, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>udp_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/ip/</path>
    <filename>1_855_2boost_2asio_2ip_2udp__ext_8hpp.html</filename>
    <class kind="class">boost::asio::ip::udp_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::ip</namespace>
  </compound>
  <compound kind="file">
    <name>udp_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/ip/</path>
    <filename>1_866_2boost_2asio_2ip_2udp__ext_8hpp.html</filename>
    <class kind="class">boost::asio::ip::udp_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::ip</namespace>
  </compound>
  <compound kind="file">
    <name>udp_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/ip/</path>
    <filename>1_870_2boost_2asio_2ip_2udp__ext_8hpp.html</filename>
    <class kind="class">boost::asio::ip::udp_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::ip</namespace>
  </compound>
  <compound kind="file">
    <name>udp_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/ip/</path>
    <filename>1_874_2boost_2asio_2ip_2udp__ext_8hpp.html</filename>
    <class kind="class">boost::asio::ip::udp_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::ip</namespace>
  </compound>
  <compound kind="file">
    <name>udp_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/ip/</path>
    <filename>1_876_2boost_2asio_2ip_2udp__ext_8hpp.html</filename>
    <class kind="class">boost::asio::ip::udp_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::ip</namespace>
  </compound>
  <compound kind="file">
    <name>stream_protocol_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.55/boost/asio/local/</path>
    <filename>1_855_2boost_2asio_2local_2stream__protocol__ext_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>stream_protocol_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.66/boost/asio/local/</path>
    <filename>1_866_2boost_2asio_2local_2stream__protocol__ext_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>stream_protocol_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.70/boost/asio/local/</path>
    <filename>1_870_2boost_2asio_2local_2stream__protocol__ext_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>stream_protocol_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.74/boost/asio/local/</path>
    <filename>1_874_2boost_2asio_2local_2stream__protocol__ext_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>stream_protocol_ext.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/helper/1.76/boost/asio/local/</path>
    <filename>1_876_2boost_2asio_2local_2stream__protocol__ext_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>logger_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/logger/include/</path>
    <filename>logger__impl_8hpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <class kind="class">vsomeip_v3::logger::logger_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::logger</namespace>
  </compound>
  <compound kind="file">
    <name>logger_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/logger/src/</path>
    <filename>logger__impl_8cpp.html</filename>
    <includes id="logger__impl_8hpp" name="logger_impl.hpp" local="yes" imported="no">../include/logger_impl.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::logger</namespace>
  </compound>
  <compound kind="file">
    <name>message.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/logger/src/</path>
    <filename>message_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="logger__impl_8hpp" name="logger_impl.hpp" local="yes" imported="no">../include/logger_impl.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::logger</namespace>
  </compound>
  <compound kind="file">
    <name>deserializer.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/include/</path>
    <filename>message_2include_2deserializer_8hpp.html</filename>
    <class kind="class">vsomeip_v3::deserializer</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>deserializer.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>service__discovery_2include_2deserializer_8hpp.html</filename>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <class kind="class">vsomeip_v3::sd::deserializer</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>message_header_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/include/</path>
    <filename>message__header__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::message_header_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serializer.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/include/</path>
    <filename>serializer_8hpp.html</filename>
    <class kind="class">vsomeip_v3::serializer</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>deserializer.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/src/</path>
    <filename>message_2src_2deserializer_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>deserializer.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>service__discovery_2src_2deserializer_8cpp.html</filename>
    <includes id="service__discovery_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>message_header_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/src/</path>
    <filename>message__header__impl_8cpp.html</filename>
    <includes id="message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">../include/message_base_impl.hpp</includes>
    <includes id="message__header__impl_8hpp" name="message_header_impl.hpp" local="yes" imported="no">../include/message_header_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../include/serializer.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serializer.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/message/src/</path>
    <filename>serializer_8cpp.html</filename>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../include/serializer.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/plugin/include/</path>
    <filename>plugin__manager_8hpp.html</filename>
    <class kind="class">vsomeip_v3::plugin_manager</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/plugin/include/</path>
    <filename>plugin__manager__impl_8hpp.html</filename>
    <includes id="plugin__manager_8hpp" name="plugin_manager.hpp" local="yes" imported="no">../include/plugin_manager.hpp</includes>
    <class kind="class">vsomeip_v3::plugin_manager_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/plugin/src/</path>
    <filename>plugin__manager_8cpp.html</filename>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../include/plugin_manager_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/plugin/src/</path>
    <filename>plugin__manager__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../include/plugin_manager_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>event.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/configuration/include/</path>
    <filename>configuration_2include_2event_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::event</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>event.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing_2include_2event_8hpp.html</filename>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <class kind="class">vsomeip_v3::event</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>eventgroupinfo.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>eventgroupinfo_8hpp.html</filename>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">remote_subscription.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::eventgroupinfo</class>
    <class kind="struct">vsomeip_v3::eventgroupinfo::subscription_t</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>function_types.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>implementation_2routing_2include_2function__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)&gt;</type>
      <name>remote_subscription_callback_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aeae38dc6731cdbc54ee5da00e0684908</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>function_types.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2function__types_8hpp.html</filename>
    <namespace>vsomeip</namespace>
    <member kind="typedef">
      <type>std::function&lt; bool(const std::shared_ptr&lt; payload &gt; &amp;, const std::shared_ptr&lt; payload &gt; &amp;) &gt;</type>
      <name>epsilon_change_func_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2164b482d86f9722cb8cc228782e09a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>function_types.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2function__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>remote_subscription.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>remote__subscription_8hpp.html</filename>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::remote_subscription</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>const remote_subscription_id_t</type>
      <name>PENDING_SUBSCRIPTION_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a237277afbce9b6ac0469a20b314f6c92</anchor>
      <arglist>(0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>routing_host.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__host_8hpp.html</filename>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <class kind="class">vsomeip_v3::routing_host</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__manager_8hpp.html</filename>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_adapter.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__manager__adapter_8hpp.html</filename>
    <class kind="class">vsomeip_v3::routing_manager_adapter</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_base.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__manager__base_8hpp.html</filename>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">routing_host.hpp</includes>
    <includes id="routing__manager_8hpp" name="routing_manager.hpp" local="yes" imported="no">routing_manager.hpp</includes>
    <includes id="routing__manager__host_8hpp" name="routing_manager_host.hpp" local="yes" imported="no">routing_manager_host.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">serviceinfo.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">event.hpp</includes>
    <includes id="eventgroupinfo_8hpp" name="eventgroupinfo.hpp" local="yes" imported="no">eventgroupinfo.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="endpoint__manager__base_8hpp" name="endpoint_manager_base.hpp" local="yes" imported="no">../../endpoints/include/endpoint_manager_base.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_base</class>
    <class kind="struct">vsomeip_v3::routing_manager_base::subscription_data_t</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_host.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__manager__host_8hpp.html</filename>
    <class kind="class">vsomeip_v3::routing_manager_host</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__manager__impl_8hpp.html</filename>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">routing_manager_base.hpp</includes>
    <includes id="routing__manager__stub__host_8hpp" name="routing_manager_stub_host.hpp" local="yes" imported="no">routing_manager_stub_host.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <includes id="netlink__connector_8hpp" name="netlink_connector.hpp" local="yes" imported="no">../../endpoints/include/netlink_connector.hpp</includes>
    <includes id="service__discovery__host_8hpp" name="service_discovery_host.hpp" local="yes" imported="no">../../service_discovery/include/service_discovery_host.hpp</includes>
    <includes id="endpoint__manager__impl_8hpp" name="endpoint_manager_impl.hpp" local="yes" imported="no">../../endpoints/include/endpoint_manager_impl.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_proxy.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__manager__proxy_8hpp.html</filename>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">routing_manager_base.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_proxy</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_stub.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__manager__stub_8hpp.html</filename>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../../endpoints/include/endpoint_host.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../include/routing_host.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_stub</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_stub_host.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>routing__manager__stub__host_8hpp.html</filename>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_stub_host</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serviceinfo.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>serviceinfo_8hpp.html</filename>
    <class kind="class">vsomeip_v3::serviceinfo</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/include/</path>
    <filename>types_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::msg_statistic_t</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; serviceinfo &gt; &gt; &gt;</type>
      <name>services_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>add7f39a626cd3b3fccf8f246529b6869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; eventgroup_t, std::shared_ptr&lt; eventgroupinfo &gt; &gt; &gt; &gt;</type>
      <name>eventgroups_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1df98b4f5a1c523993232e38326a6289</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>remote_subscription_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ade71c41d9e426efbac70fb3c21526197</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>pending_remote_offer_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab27bd7168daa9731d59e54c8a916238d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>registration_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a682d6c3fff9c7a46de81c5d234cf5179</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179ad17455cfcb88a53f1603fb817e09c2d6">REGISTER</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179ae0d28f8aa6e4d8744f37b7c358649374">DEREGISTER</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179a71f612d19c691b481cd9c9b1ca67cba7">DEREGISTER_ON_ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>remote_subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a39ec9877abaeb38f64db02fb301e189a</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa66e4694eb60b73ae43dda48a14466e0c">SUBSCRIPTION_PENDING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa70b53341292194e1dc93d6ccfacfe765">SUBSCRIPTION_ACKED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aab2fd439b480e15252e6d51af337f9892">SUBSCRIPTION_NACKED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa934bfa695a08c4a28d19053dcc33902b">SUBSCRIPTION_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aad6dfa4f648f641337fcb2f9291c94c22">SUBSCRIPTION_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>event.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/src/</path>
    <filename>event_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="routing__manager_8hpp" name="routing_manager.hpp" local="yes" imported="no">../include/routing_manager.hpp</includes>
    <includes id="message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>eventgroupinfo.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/src/</path>
    <filename>eventgroupinfo_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="eventgroupinfo_8hpp" name="eventgroupinfo.hpp" local="yes" imported="no">../include/eventgroupinfo.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../include/remote_subscription.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>remote_subscription.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/src/</path>
    <filename>remote__subscription_8cpp.html</filename>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../include/remote_subscription.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_base.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/src/</path>
    <filename>routing__manager__base_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">../include/routing_manager_base.hpp</includes>
    <includes id="local__client__endpoint__impl_8hpp" name="local_client_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/local_client_endpoint_impl.hpp</includes>
    <includes id="local__server__endpoint__impl_8hpp" name="local_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/local_server_endpoint_impl.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/src/</path>
    <filename>routing__manager__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="eventgroupinfo_8hpp" name="eventgroupinfo.hpp" local="yes" imported="no">../include/eventgroupinfo.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../include/remote_subscription.hpp</includes>
    <includes id="routing__manager__host_8hpp" name="routing_manager_host.hpp" local="yes" imported="no">../include/routing_manager_host.hpp</includes>
    <includes id="routing__manager__impl_8hpp" name="routing_manager_impl.hpp" local="yes" imported="no">../include/routing_manager_impl.hpp</includes>
    <includes id="routing__manager__stub_8hpp" name="routing_manager_stub.hpp" local="yes" imported="no">../include/routing_manager_stub.hpp</includes>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">../include/serviceinfo.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="local__client__endpoint__impl_8hpp" name="local_client_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/local_client_endpoint_impl.hpp</includes>
    <includes id="tcp__client__endpoint__impl_8hpp" name="tcp_client_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/tcp_client_endpoint_impl.hpp</includes>
    <includes id="tcp__server__endpoint__impl_8hpp" name="tcp_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/tcp_server_endpoint_impl.hpp</includes>
    <includes id="udp__client__endpoint__impl_8hpp" name="udp_client_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/udp_client_endpoint_impl.hpp</includes>
    <includes id="udp__server__endpoint__impl_8hpp" name="udp_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/udp_server_endpoint_impl.hpp</includes>
    <includes id="virtual__server__endpoint__impl_8hpp" name="virtual_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/virtual_server_endpoint_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../../service_discovery/include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../service_discovery/include/defines.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">../../service_discovery/include/runtime.hpp</includes>
    <includes id="service__discovery_8hpp" name="service_discovery.hpp" local="yes" imported="no">../../service_discovery/include/service_discovery.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../../plugin/include/plugin_manager_impl.hpp</includes>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../e2e_protection/include/buffer/buffer.hpp</includes>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../e2e_protection/include/e2exf/config.hpp</includes>
    <includes id="e2e__provider_8hpp" name="e2e_provider.hpp" local="yes" imported="no">../../e2e_protection/include/e2e/profile/e2e_provider.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_VERSION</name>
      <anchorfile>routing__manager__impl_8cpp.html</anchorfile>
      <anchor>acfa3c0c8d94c84270643f0220c1d73e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>routing_manager_proxy.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/src/</path>
    <filename>routing__manager__proxy_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="routing__manager__host_8hpp" name="routing_manager_host.hpp" local="yes" imported="no">../include/routing_manager_host.hpp</includes>
    <includes id="routing__manager__proxy_8hpp" name="routing_manager_proxy.hpp" local="yes" imported="no">../include/routing_manager_proxy.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <includes id="security__impl_8hpp" name="security_impl.hpp" local="yes" imported="no">../../security/include/security_impl.hpp</includes>
    <includes id="local__client__endpoint__impl_8hpp" name="local_client_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/local_client_endpoint_impl.hpp</includes>
    <includes id="local__server__endpoint__impl_8hpp" name="local_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/local_server_endpoint_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">../../service_discovery/include/runtime.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_stub.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/src/</path>
    <filename>routing__manager__stub_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing__manager__stub_8hpp" name="routing_manager_stub.hpp" local="yes" imported="no">../include/routing_manager_stub.hpp</includes>
    <includes id="routing__manager__stub__host_8hpp" name="routing_manager_stub_host.hpp" local="yes" imported="no">../include/routing_manager_stub_host.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../include/remote_subscription.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="local__server__endpoint__impl_8hpp" name="local_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/local_server_endpoint_impl.hpp</includes>
    <includes id="endpoint__manager__impl_8hpp" name="endpoint_manager_impl.hpp" local="yes" imported="no">../../endpoints/include/endpoint_manager_impl.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serviceinfo.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/routing/src/</path>
    <filename>serviceinfo_8cpp.html</filename>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">../include/serviceinfo.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>policy.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/include/</path>
    <filename>policy_8hpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <class kind="struct">vsomeip_v3::policy</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>void</type>
      <name>get_bounds</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85130498b085e6e14a750c392732154a</anchor>
      <arglist>(const boost::icl::discrete_interval&lt; T_ &gt; &amp;_interval, T_ &amp;_lower, T_ &amp;_upper)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>policy_manager_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/include/</path>
    <filename>policy__manager__impl_8hpp.html</filename>
    <includes id="policy__manager_8hpp" name="policy_manager.hpp" local="no" imported="no">vsomeip/internal/policy_manager.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../include/policy.hpp</includes>
    <includes id="configuration__element_8hpp" name="configuration_element.hpp" local="yes" imported="no">../../configuration/include/configuration_element.hpp</includes>
    <class kind="class">vsomeip_v3::policy_manager_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>security.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/include/</path>
    <filename>security_8hpp.html</filename>
    <class kind="class">vsomeip_v3::security</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>security_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/include/</path>
    <filename>security__impl_8hpp.html</filename>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../include/policy.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../include/security.hpp</includes>
    <class kind="class">vsomeip_v3::security_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>policy.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/src/</path>
    <filename>policy_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../include/policy.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>policy_manager.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/src/</path>
    <filename>policy__manager_8cpp.html</filename>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../include/policy_manager_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>policy_manager_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/src/</path>
    <filename>policy__manager__impl_8cpp.html</filename>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../include/policy.hpp</includes>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../include/policy_manager_impl.hpp</includes>
    <includes id="security__impl_8hpp" name="security_impl.hpp" local="yes" imported="no">../include/security_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>security.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/src/</path>
    <filename>security_8cpp.html</filename>
    <includes id="security__impl_8hpp" name="security_impl.hpp" local="yes" imported="no">../include/security_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>security_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/security/src/</path>
    <filename>security__impl_8cpp.html</filename>
    <includes id="policy__manager_8hpp" name="policy_manager.hpp" local="no" imported="no">vsomeip/internal/policy_manager.hpp</includes>
    <includes id="security__impl_8hpp" name="security_impl.hpp" local="yes" imported="no">../include/security_impl.hpp</includes>
    <includes id="configuration__element_8hpp" name="configuration_element.hpp" local="yes" imported="no">../../configuration/include/configuration_element.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>void</type>
      <name>read_data</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac59b4dc82db4f7c7721e988f91e63d24</anchor>
      <arglist>(const std::string &amp;_in, T_ &amp;_out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_option_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>configuration__option__impl_8hpp.html</filename>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::configuration_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>constants.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2constants_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <namespace>vsomeip_v3::sd::protocol</namespace>
    <member kind="variable">
      <type>const service_t</type>
      <name>service</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>aa2a4b491728e2388739c38955d93a663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const instance_t</type>
      <name>instance</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a108c41316ccf8a6f58781b4fbfbb72f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>method</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a9672260623da6a9ec36666d77624c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>client</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a4301fedba81c7bbcc971714312d3191c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const protocol_version_t</type>
      <name>protocol_version</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ac12cd8e7d5bd267aba48e6f9927c7e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const interface_version_t</type>
      <name>interface_version</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a671093c1f6fc5fbf7f149bff14e13af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>message_type</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>aec38071e3274c6a1e8b9decd67c9b7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const return_code_e</type>
      <name>return_code</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab83b958bde23b3ff10be09b4aa7b4e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>reserved_byte</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>a03dc9d80fe666e04fb8afb9a19607321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>reserved_word</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>ab671b814e4ac2ca632a40263faf4ad22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32_t</type>
      <name>reserved_long</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>ab7095f65a99ed25abd9d78ee8d9fbb1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>tcp</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>a807c6ff750c63e9e420eee7c6da2e7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>udp</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>af1cf186cad7101f9b40c3cbfbbf80666</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constants.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2constants_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../../compat/vsomeip/enumeration_types.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <namespace>vsomeip</namespace>
    <member kind="variable">
      <type>const major_version_t</type>
      <name>DEFAULT_MAJOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2f2b7b5616e47a6991e02235acd3e3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const minor_version_t</type>
      <name>DEFAULT_MINOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a914f2b51da8df58d43b8aa5e162fe31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ttl_t</type>
      <name>DEFAULT_TTL</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a44b7287ec4b2276c13cc32b429ffd4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>DEFAULT_MULTICAST</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1dfd55967348536b962d3259a31f94cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>DEFAULT_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5c6c490cc1583fe38af30b0cf4c1a967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>ILLEGAL_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae1e873b4fbfd2b49b73bddf0b936b3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>NO_TRACE_FILTER_EXPRESSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a39f544082ffed0ea0506ca12b0fcc035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const service_t</type>
      <name>ANY_SERVICE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adce6ed20385f8cd186b9f82086351651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const instance_t</type>
      <name>ANY_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a97cec69887056455ee978cc3a50dec15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>ANY_METHOD</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa81c85715d8713f0b977d2c4e6c670cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const major_version_t</type>
      <name>ANY_MAJOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a80aa773571156d6c8d6315fdb1131ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const minor_version_t</type>
      <name>ANY_MINOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9be62aeb5875b257d33a34ab638a1938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const eventgroup_t</type>
      <name>DEFAULT_EVENTGROUP</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae3a9af84a72838c170f304b45604f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>ILLEGAL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a347481da1fbdeae875c987e8d18ed8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>MAGIC_COOKIE_CLIENT_MESSAGE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aab691e5d96de4055ec9fb78e614525a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>MAGIC_COOKIE_SERVICE_MESSAGE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab5f16721542eaf1020af95fd7abaa1f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const length_t</type>
      <name>MAGIC_COOKIE_SIZE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aea8ae408d12586b521d770b0814a17fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const request_t</type>
      <name>MAGIC_COOKIE_REQUEST</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9b91bbdc92d781ab839c8e3fb2977fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>MAGIC_COOKIE_NETWORK_BYTE_ORDER</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0874e45e3f37be1f69d40a861db73fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const protocol_version_t</type>
      <name>MAGIC_COOKIE_PROTOCOL_VERSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aabbfece5b1aad839016ea2339ac307a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const interface_version_t</type>
      <name>MAGIC_COOKIE_INTERFACE_VERSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4bf667b9e83075cf22762423e393dc41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>MAGIC_COOKIE_CLIENT_MESSAGE_TYPE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adf2818d9ee2613b716210f68cada1b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>MAGIC_COOKIE_SERVICE_MESSAGE_TYPE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c4ece5170ac1f26dc2c6eabc8feb28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const return_code_e</type>
      <name>MAGIC_COOKIE_RETURN_CODE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab0c5872098eb80f1918a1cc298db7778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>CLIENT_COOKIE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2443bc33f4987cc981c33c119adf2124</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>SERVICE_COOKIE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a23f1ccc0cd6072b6b69077dec6575e99</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const event_t</type>
      <name>ANY_EVENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8bee2b7ec8cfc271c4eb472a01b93286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>ANY_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1d4d4a1e58e40cafd2be7730c1733411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const pending_subscription_id_t</type>
      <name>DEFAULT_SUBSCRIPTION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac8aa72362edafefabb0db273a8449521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const pending_security_update_id_t</type>
      <name>DEFAULT_SECURITY_UPDATE_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1a787fe58d9718fedd3dd8c53d390192</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constants.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2constants_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>ANY_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a05de3fc19b0289d1872cfea55700a952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>INVALID_METHOD</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4b561e3efdc12f157f5a8fc45a8204dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>MAGIC_COOKIE_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab9b5b94b12d67d3aead148a533dd4f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>VSOMEIP_ALL</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab39336d9a0e528a506d19edc40473282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>entry_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>entry__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">enumeration_types.hpp</includes>
    <includes id="message__element__impl_8hpp" name="message_element_impl.hpp" local="yes" imported="no">message_element_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::entry_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_OPTION_RUN</name>
      <anchorfile>entry__impl_8hpp.html</anchorfile>
      <anchor>a811cd92a55d9096eaa1a4a5a06df7949</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>eventgroupentry_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>eventgroupentry__impl_8hpp.html</filename>
    <includes id="entry__impl_8hpp" name="entry_impl.hpp" local="yes" imported="no">entry_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">message_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::eventgroupentry_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ip_option_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>ip__option__impl_8hpp.html</filename>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::ip_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ipv4_option_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>ipv4__option__impl_8hpp.html</filename>
    <includes id="ip__option__impl_8hpp" name="ip_option_impl.hpp" local="yes" imported="no">ip_option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::ipv4_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ipv6_option_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>ipv6__option__impl_8hpp.html</filename>
    <includes id="ip__option__impl_8hpp" name="ip_option_impl.hpp" local="yes" imported="no">ip_option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::ipv6_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>load_balancing_option_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>load__balancing__option__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">primitive_types.hpp</includes>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::load_balancing_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>message_element_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>message__element__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::message_element_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>option_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>option__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">enumeration_types.hpp</includes>
    <includes id="message__element__impl_8hpp" name="message_element_impl.hpp" local="yes" imported="no">message_element_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>primitive_types.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2primitive__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>priority_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a03ec7ff05c35cc282087aab5f6acbabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>weight_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab41c3c76dfe5e70beb62aaa5084269bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>alive_counter_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ae83eb26fe7ea1fd2886097606bae3cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>crc_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a418896956300726222443ce4990e25c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>flags_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a665b7bf45c5002c16224ddfaa8fac84d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>primitive_types.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2primitive__types_8hpp.html</filename>
    <namespace>vsomeip</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>message_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aed4ab5253b17bc217e1d970d32e5b9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>service_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab439d8b69368f376c1671ddc31e515d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>method_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85a1d735ad9ad8dc0e10c57e66a3de2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>event_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad9c76ce8278d899bf04d836bfc3a7b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>instance_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a38ba3163c3baa90f9adbdaa5a1550a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>eventgroup_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adb3707afb830a56fc151afae8d3a4a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>major_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a60dd902439aa9e3353079bb19e173eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>minor_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a42ecfae92498c1706f42b98ccaa85a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>ttl_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2997ff0ab3ed962de2b3bac11eb0acb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>request_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a72d761400f7e540f2890eccf8a4b4869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>client_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa18c5d8fd10b3df25994711409acf8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>session_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>acabf6d89a5f8232b82031d7e03ca86d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>length_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac71906150d5a544c870a734956c1f867</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>protocol_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa1cb109c2e75eceab17deb467e0049aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>interface_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2134c346999fb510057bc8d16c8cbc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>byte_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85c0aa53badeca5d318f8e1351552072</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; byte_t, 4 &gt;</type>
      <name>ipv4_address_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1a9c53f8ef0a2477376d9bfa732dcff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; byte_t, 16 &gt;</type>
      <name>ipv6_address_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a14706387c9b65556d738a0f084b8aa58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>trace_channel_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad672b2d5348970784c9476e58417e348</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>trace_filter_type_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a673602d80ad64071cf219a3ededa2ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>pending_subscription_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa03b7aa63bdf2c81833a4a8ee17c8acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>pending_security_update_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a553b7cd6e0ddbb531d670ef9011e2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::uid_t</type>
      <name>uid_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a89e8b6dc52a19420d56b66ba69ae31d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::uid_t</type>
      <name>gid_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2f69df0d98384cc0c98e964ef1db6420</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>primitive_types.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2primitive__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>diagnosis_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5009758353b9c739033d01366ee1c9e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>protection_option_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>protection__option__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../include/primitive_types.hpp</includes>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">../include/option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::protection_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>remote_subscription_ack.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>remote__subscription__ack_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::remote_subscription_ack</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>request.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>request_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::request</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2runtime_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::runtime</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2runtime_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../compat/vsomeip/export.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::runtime</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2runtime_8hpp.html</filename>
    <class kind="class">vsomeip_v3::runtime</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>selective_option_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>selective__option__impl_8hpp.html</filename>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::selective_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>service_discovery.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>service__discovery_8hpp.html</filename>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">../../routing/include/serviceinfo.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="service__discovery__host_8hpp" name="service_discovery_host.hpp" local="yes" imported="no">../include/service_discovery_host.hpp</includes>
    <class kind="class">vsomeip_v3::sd::service_discovery</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>service_discovery_host.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>service__discovery__host_8hpp.html</filename>
    <includes id="implementation_2routing_2include_2function__types_8hpp" name="function_types.hpp" local="yes" imported="no">../../routing/include/function_types.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">../../routing/include/types.hpp</includes>
    <class kind="class">vsomeip_v3::sd::service_discovery_host</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>service_discovery_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>service__discovery__impl_8hpp.html</filename>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">../../routing/include/types.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../../routing/include/remote_subscription.hpp</includes>
    <includes id="service__discovery_8hpp" name="service_discovery.hpp" local="yes" imported="no">service_discovery.hpp</includes>
    <includes id="ip__option__impl_8hpp" name="ip_option_impl.hpp" local="yes" imported="no">ip_option_impl.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">ipv4_option_impl.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">ipv6_option_impl.hpp</includes>
    <includes id="service__discovery_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">deserializer.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">message_impl.hpp</includes>
    <class kind="struct">vsomeip_v3::sd::entry_data_t</class>
    <class kind="class">vsomeip_v3::sd::service_discovery_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; request &gt; &gt; &gt;</type>
      <name>requests_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a479bb43b7e65f780b2fdbe9f3b2615e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>serviceentry_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>serviceentry__impl_8hpp.html</filename>
    <includes id="entry__impl_8hpp" name="entry_impl.hpp" local="yes" imported="no">entry_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::serviceentry_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>subscription.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>subscription_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::subscription</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a44d6e76ec7a3229de97bd8b99723074e</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea3bdddbcca7a01b8a1e6ea1483b398e6c">ST_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea27185adbc4a022e762d4d07f1bae4a31">ST_NOT_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea9e3393acb9ba884e9ecfcf1acd696525">ST_RESUBSCRIBING</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea8dcdb2ca996e32272605de24f3b63990">ST_RESUBSCRIBING_NOT_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea0ce3a5f229eb18947e3d3973f173a613">ST_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_option_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>configuration__option__impl_8cpp.html</filename>
    <includes id="configuration__option__impl_8hpp" name="configuration_option_impl.hpp" local="yes" imported="no">../include/configuration_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>entry_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>entry__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="entry__impl_8hpp" name="entry_impl.hpp" local="yes" imported="no">../include/entry_impl.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>eventgroupentry_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>eventgroupentry__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="eventgroupentry__impl_8hpp" name="eventgroupentry_impl.hpp" local="yes" imported="no">../include/eventgroupentry_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">../include/ipv4_option_impl.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">../include/ipv6_option_impl.hpp</includes>
    <includes id="selective__option__impl_8hpp" name="selective_option_impl.hpp" local="yes" imported="no">../include/selective_option_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ip_option_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>ip__option__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="ip__option__impl_8hpp" name="ip_option_impl.hpp" local="yes" imported="no">../include/ip_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ipv4_option_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>ipv4__option__impl_8cpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">../include/ipv4_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ipv6_option_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>ipv6__option__impl_8cpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">../include/ipv6_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>load_balancing_option_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>load__balancing__option__impl_8cpp.html</filename>
    <includes id="load__balancing__option__impl_8hpp" name="load_balancing_option_impl.hpp" local="yes" imported="no">../include/load_balancing_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>message_element_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>message__element__impl_8cpp.html</filename>
    <includes id="message__element__impl_8hpp" name="message_element_impl.hpp" local="yes" imported="no">../include/message_element_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>option_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>option__impl_8cpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">../include/option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>protection_option_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>protection__option__impl_8cpp.html</filename>
    <includes id="protection__option__impl_8hpp" name="protection_option_impl.hpp" local="yes" imported="no">../include/protection_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>remote_subscription_ack.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>remote__subscription__ack_8cpp.html</filename>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="remote__subscription__ack_8hpp" name="remote_subscription_ack.hpp" local="yes" imported="no">../include/remote_subscription_ack.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../../routing/include/remote_subscription.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>request.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>request_8cpp.html</filename>
    <includes id="request_8hpp" name="request.hpp" local="yes" imported="no">../include/request.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>selective_option_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>selective__option__impl_8cpp.html</filename>
    <includes id="selective__option__impl_8hpp" name="selective_option_impl.hpp" local="yes" imported="no">../include/selective_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>service_discovery_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>service__discovery__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="service__discovery_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../include/enumeration_types.hpp</includes>
    <includes id="eventgroupentry__impl_8hpp" name="eventgroupentry_impl.hpp" local="yes" imported="no">../include/eventgroupentry_impl.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">../include/ipv4_option_impl.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">../include/ipv6_option_impl.hpp</includes>
    <includes id="selective__option__impl_8hpp" name="selective_option_impl.hpp" local="yes" imported="no">../include/selective_option_impl.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="remote__subscription__ack_8hpp" name="remote_subscription_ack.hpp" local="yes" imported="no">../include/remote_subscription_ack.hpp</includes>
    <includes id="request_8hpp" name="request.hpp" local="yes" imported="no">../include/request.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">../include/runtime.hpp</includes>
    <includes id="service__discovery__host_8hpp" name="service_discovery_host.hpp" local="yes" imported="no">../include/service_discovery_host.hpp</includes>
    <includes id="service__discovery__impl_8hpp" name="service_discovery_impl.hpp" local="yes" imported="no">../include/service_discovery_impl.hpp</includes>
    <includes id="serviceentry__impl_8hpp" name="serviceentry_impl.hpp" local="yes" imported="no">../include/serviceentry_impl.hpp</includes>
    <includes id="subscription_8hpp" name="subscription.hpp" local="yes" imported="no">../include/subscription.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="client__endpoint_8hpp" name="client_endpoint.hpp" local="yes" imported="no">../../endpoints/include/client_endpoint.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="tcp__server__endpoint__impl_8hpp" name="tcp_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/tcp_server_endpoint_impl.hpp</includes>
    <includes id="udp__server__endpoint__impl_8hpp" name="udp_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/udp_server_endpoint_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../../plugin/include/plugin_manager_impl.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../../routing/include/event.hpp</includes>
    <includes id="eventgroupinfo_8hpp" name="eventgroupinfo.hpp" local="yes" imported="no">../../routing/include/eventgroupinfo.hpp</includes>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">../../routing/include/serviceinfo.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>serviceentry_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>serviceentry__impl_8cpp.html</filename>
    <includes id="serviceentry__impl_8hpp" name="serviceentry_impl.hpp" local="yes" imported="no">../include/serviceentry_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>subscription.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/src/</path>
    <filename>subscription_8cpp.html</filename>
    <includes id="subscription_8hpp" name="subscription.hpp" local="yes" imported="no">../include/subscription.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>channel_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/tracing/include/</path>
    <filename>channel__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::trace::channel_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="typedef">
      <type>std::function&lt; bool(service_t, instance_t, method_t)&gt;</type>
      <name>filter_func_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a1fea2d7b56016b1dea4035038b1a70fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>connector_impl.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/tracing/include/</path>
    <filename>connector__impl_8hpp.html</filename>
    <includes id="implementation_2tracing_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">enumeration_types.hpp</includes>
    <includes id="header_8hpp" name="header.hpp" local="yes" imported="no">header.hpp</includes>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../endpoints/include/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::trace::connector_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
    <namespace>vsomeip_v3::trace</namespace>
  </compound>
  <compound kind="file">
    <name>defines.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2defines_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_SD_PAYLOAD</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a755934d52c8ba7fd2269ea1f2ec9878b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_UDP_SD_PAYLOAD</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a1cbb4c2e25720926fa1941eadf4a026e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_DATA_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a103de3bafc98dc901772dfc34f6a33cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_ENTRY_LENGTH_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a22524c22c99c6d0819801a1437126eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_ENTRY_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a5161c646823ef0f290dbf767ae9f0a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_IPV4_OPTION_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>abe76e355b6b27bbd5394e2ea0c9245ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_IPV6_OPTION_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a8c78e60fca197d9c812178ce56a30ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_LOAD_BALANCING_OPTION_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>abfd25e2989eedbd06d661bf782ea0e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_PROTECTION_OPTION_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>ad7aab416f8232b0dbf89a2af3356aed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_OPTION_LENGTH_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>ab34dab83d25bdf6bd1b7078321bf0fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_OPTION_HEADER_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>aef1430aac3e1b1d328623bd2979f3422</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_EMPTY_MESSAGE_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>aeba9e5c961b922f01e3787062fd7c917</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_SPACE_FOR_PAYLOAD</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>af733f5ee6b4031e8c026fe7bd8137415</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_IPV4_OPTION_LENGTH</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a944b2392f3f548f8705e8fdda02cb43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_IPV6_OPTION_LENGTH</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a3cca4895b767d873301e8b9aefdeadcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_SERVICE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a80497b1fa84c4aaa91dadb1894c2d013</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_INSTANCE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>aedfd03e332d224a69e6e32fbf25e9b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_METHOD</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a77bb6167323baf3bcfac4f7283927a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_CLIENT</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a60e0209326687bb848cc7722b0c7b3be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_ENABLED</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>abcea1475c46d55ee2d7a1d8fa3652026</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_PROTOCOL</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a3d88500c2ab9182e83fb5f14c076e715</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_MULTICAST</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a51ea5511f5f94feaa8f78379fe59b940</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_PORT</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a7f56e0fd30809cf364f6cbada963aff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_INITIAL_DELAY_MIN</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a08fdf549edcd5d5e16d4c7a92b0ce9d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_INITIAL_DELAY_MAX</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a5d3cb961831cccc27d0b48401232d768</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_REPETITIONS_BASE_DELAY</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>ac1ac18c92777ff8f0da632f211a5d63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_REPETITIONS_MAX</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a74c0de5c25d387df0f9b7b4cc894f5ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_TTL</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a0fa60e3249cccf0c625e3e58da94a0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_CYCLIC_OFFER_DELAY</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a4c4a48f28efe0bb41d9711649631052b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_REQUEST_RESPONSE_DELAY</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a917b5a5098c8fa2cf273ac6c3db6b244</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_OFFER_DEBOUNCE_TIME</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a96ccf00dce545be9b4b3956e6c63ef8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_FIND_DEBOUNCE_TIME</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a7983045f1a2af0e5ad19889a2e0dda81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/tracing/include/</path>
    <filename>implementation_2tracing_2include_2defines_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_NAME</name>
      <anchorfile>implementation_2tracing_2include_2defines_8hpp.html</anchorfile>
      <anchor>ad211989b1c81cf965cbc26f4733e0214</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TC_DEFAULT_FILTER_TYPE</name>
      <anchorfile>implementation_2tracing_2include_2defines_8hpp.html</anchorfile>
      <anchor>a638152a3cb849a542f94ee20557ec409</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TC_INSTANCE_POS_MIN</name>
      <anchorfile>implementation_2tracing_2include_2defines_8hpp.html</anchorfile>
      <anchor>a652324135c50b8d9cb386d0a6444f4b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TC_INSTANCE_POS_MAX</name>
      <anchorfile>implementation_2tracing_2include_2defines_8hpp.html</anchorfile>
      <anchor>a3270c60da29c5e16ab867fd4561c5380</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2defines_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PROTOCOL_VERSION</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a17d450a088a297c93ad31c859aee9334</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_LOCAL_MESSAGE_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>aee0b8b2dc5b95028cbc4de69dbe39401</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_MESSAGE_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ac3ec8a8d5671ec002c94e26e5d850ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_UDP_MESSAGE_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5ca4978e825bb01cbbcf6637532f504e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PACKET_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a115e45daca8530394cf712eb9838ab6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_HEADER_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a7e2b7ae5a5f388e5ef044f350305a22b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_MAGIC_COOKIE_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>aa3b9055e76e6fea791fea7d4a9735022</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_FULL_HEADER_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a362027429bbdebd340fc2484d01cf4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SERVICE_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5e0137c54b57a5758098b67876bbdbc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SERVICE_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a9797c9542c3219e9746555df786e348d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_METHOD_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a6ad3021af0942cdab317a3800e37eae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_METHOD_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a83f5d8d717b1e01476bb45436062648f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EVENT_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ab34242aed44ea02ce65da116d0652e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EVENT_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ac666a8de682461bbfe58a4414e8067b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LENGTH_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>af89e22d592873c426444449652912168</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LENGTH_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a3c67201245e7c12c34b354dce35e79c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a127bd7e22b756f55e91f93218a5ad225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ab738627828d6dfc56c4b7e82f4b2a376</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SESSION_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a25c138a6a4d985e84ac4acb5a6a04092</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SESSION_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5e01d31aa58995a71e313d0f98e269ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PROTOCOL_VERSION_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a098697135f02001a7d68a0b47a4e3175</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_INTERFACE_VERSION_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5d495968c90580521c10a309820d0bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MESSAGE_TYPE_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a12c681f79943dd35b8939a00575360bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RETURN_CODE_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a728481e9aa162a4af2336c52f0e1c63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PAYLOAD_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a0773530a91d64e13566c6326304bde16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2defines_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PROTOCOL_VERSION</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a17d450a088a297c93ad31c859aee9334</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_LOCAL_MESSAGE_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>aee0b8b2dc5b95028cbc4de69dbe39401</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_MESSAGE_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ac3ec8a8d5671ec002c94e26e5d850ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_UDP_MESSAGE_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5ca4978e825bb01cbbcf6637532f504e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PACKET_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a115e45daca8530394cf712eb9838ab6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_HEADER_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a7e2b7ae5a5f388e5ef044f350305a22b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_MAGIC_COOKIE_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>aa3b9055e76e6fea791fea7d4a9735022</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_FULL_HEADER_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a362027429bbdebd340fc2484d01cf4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SERVICE_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5e0137c54b57a5758098b67876bbdbc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SERVICE_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a9797c9542c3219e9746555df786e348d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_METHOD_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a6ad3021af0942cdab317a3800e37eae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_METHOD_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a83f5d8d717b1e01476bb45436062648f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EVENT_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ab34242aed44ea02ce65da116d0652e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EVENT_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ac666a8de682461bbfe58a4414e8067b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LENGTH_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>af89e22d592873c426444449652912168</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LENGTH_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a3c67201245e7c12c34b354dce35e79c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a127bd7e22b756f55e91f93218a5ad225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ab738627828d6dfc56c4b7e82f4b2a376</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SESSION_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a25c138a6a4d985e84ac4acb5a6a04092</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SESSION_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5e01d31aa58995a71e313d0f98e269ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PROTOCOL_VERSION_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a098697135f02001a7d68a0b47a4e3175</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_INTERFACE_VERSION_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5d495968c90580521c10a309820d0bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MESSAGE_TYPE_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a12c681f79943dd35b8939a00575360bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RETURN_CODE_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a728481e9aa162a4af2336c52f0e1c63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PAYLOAD_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a0773530a91d64e13566c6326304bde16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumeration_types.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2enumeration__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="enumeration">
      <type></type>
      <name>option_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a1b095ff9063385699acb46879d760a3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fad08e68ea80bc3bf47a03757579c11900">CONFIGURATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa9f72b3ee74e29c627de58a4d92767907">LOAD_BALANCING</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fae4fa5555709453166935ef887d97dad6">PROTECTION</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fad99bcd855e28a58a0ffb17fb7bc3672c">IP4_ENDPOINT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa656f2d9488fd473cd5c87fc0d0c671d3">IP6_ENDPOINT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa9aa4bece16c8028c887d528022ece58f">IP4_MULTICAST</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa3e52334a97f7b6951548b1f3a8a63512">IP6_MULTICAST</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa45582b83fead3a0cbc52efa59d6ba4c5">SELECTIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>entry_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a5ee6f34e50b9155a337f0eb07d706200</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a324f25871f90b3bd46a9a60e1957cfbb">FIND_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a6906e2a8c179777590bbed7d0316e21a">OFFER_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200ac517d1ab174237d369a8d8a10a3c98f3">STOP_OFFER_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a093a6e7f7885f91c09fa7f9478edd209">REQUEST_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200ae5b65dcf08a837c03fa789dba01dc7a4">FIND_EVENT_GROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a6e85554fa1249e1c5b86afde6b18700b">PUBLISH_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200addbf5099413ff5c80c0793834054340d">STOP_PUBLISH_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a99209c30c3e49367e4faaa8f895e92d6">SUBSCRIBE_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a59221d1438ac23e21204f54c26dc3a1d">STOP_SUBSCRIBE_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200accc382dc381a1b3f403b9e274a265275">SUBSCRIBE_EVENTGROUP_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a0efd8428d44a0d6dd6127a5b2280d85f">STOP_SUBSCRIBE_EVENTGROUP_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>layer_four_protocol_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab28b10cdfdc46bc21d39f6b67c41e66c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66cab136ef5f6a01d816991fe3cf7a6ac763">TCP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66caf5ef036b4d8b630721e51fe23489fbc9">UDP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66ca696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>enumeration_types.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/tracing/include/</path>
    <filename>implementation_2tracing_2include_2enumeration__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="enumeration">
      <type></type>
      <name>filter_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>aad08deaf2c9d2b4567b1d323d890acfd</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfda50546bf973283065b6ccf09faf7a580a">NEGATIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfdaab6c31432785221bae58327ef5f6ea58">POSITIVE</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>enumeration_types.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2enumeration__types_8hpp.html</filename>
    <namespace>vsomeip</namespace>
    <member kind="enumeration">
      <type></type>
      <name>state_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f8fdb462c53cc801ccac8ae7e7b7593</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a1975c1cd8d977e43ed9b80485ff57b9d">ST_REGISTERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a675f8e567ba66fa4a34dc5376b795160">ST_DEREGISTERED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>message_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a37066c88ad32c12b4e6d76c2876931f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9817569e059920f81acd724e0d27427e">MT_REQUEST</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aab4c0d0ec6de9cf94cc974ae8fc9e35a">MT_REQUEST_NO_RETURN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a466e1d89dfcaa5dd44fde3e415f2416d">MT_NOTIFICATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0addf6a7432258a718e2932fa965d97bbc">MT_REQUEST_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a1bf98da6ea8f237e6e51c7e92b246de7">MT_REQUEST_NO_RETURN_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ace5537f09d888102be41b223185ee2f5">MT_NOTIFICATION_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a82ea3980d0263c76e804be8e7bfaf4dc">MT_RESPONSE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aaec6a09cc5b81b91e3be5b9a5ccdc057">MT_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a0f38170a7d6c21f75d364050974268fb">MT_RESPONSE_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ab5fef10d37791909a02e03f233ef9af8">MT_ERROR_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9be143b64fe2fe12b2774d9f34b134b4">MT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>return_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adc9f5628547e5cfcb1cf28ea8c1a9d56</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aa02beabe6f35d74f47eb01520970b350">E_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aad29ea65c1fc33034264f0aae0263f8e">E_NOT_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a026654634a6cf33953ba2f9762d71d5e">E_UNKNOWN_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a54aafae2807f78ee9ff838e8d5af9e6f">E_UNKNOWN_METHOD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56ac496eb6230d3e219a91a9f6dcdf760e0">E_NOT_READY</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a306d4834481f8d0cd8f734bcaf37f80f">E_NOT_REACHABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a5d0b3a75947415de8cc770284a5b94b1">E_TIMEOUT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a48845fadec08cc492508d956b2462c2c">E_WRONG_PROTOCOL_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9b2df6640388ecaae9bc7a002a04b7a1">E_WRONG_INTERFACE_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a1ace601dd1b4b72c5c345d074e8e7303">E_MALFORMED_MESSAGE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9708220dea1582abffb909d98eaa432b">E_WRONG_MESSAGE_TYPE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a6a96cb414ac815468fbfaebd4f4e696e">E_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a86896851ba1e40f6f0734612d990e9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c450e26151d2ee7c85d9ab9a17234b8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ab08f40bf9292c76dd7ab541a0635c1dc">RS_RUNNING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a93b601bbf5c3713331e0dd0296d12715">RS_SUSPENDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8aa085350435b219591b40870198b11c45">RS_RESUMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a97d8d49b4053be702db57810be8aecc4">RS_SHUTDOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ae7f767ece082f4b742ba9f4ec5883692">RS_DIAGNOSIS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a006e557bf836a15785d2d5470b430978">RS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>offer_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a750cce5fdf91a2145560b4391141114c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca22cd38f75748c081219392589ee9f3d2">OT_LOCAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca54feb1c936683243491c3cd815c01b35">OT_REMOTE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114cab89549e23113d3e4072cebaf6abe2484">OT_ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_update_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad6d71f484ce98ac3a3a1f608b5077c5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba15d5ecaf87a1e61054aa9b30c2384195">SU_SUCCESS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba27edac640a41de171f851759ee6e3dbf">SU_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba5091c773435a96ef3eb98ef0cbdf6b0f">SU_UNKNOWN_USER_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba9e3357d764d9082a283270ab50f78291">SU_INVALID_FORMAT</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>enumeration_types.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2enumeration__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="enumeration">
      <type></type>
      <name>state_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f8fdb462c53cc801ccac8ae7e7b7593</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a1975c1cd8d977e43ed9b80485ff57b9d">ST_REGISTERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a675f8e567ba66fa4a34dc5376b795160">ST_DEREGISTERED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>message_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a37066c88ad32c12b4e6d76c2876931f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9817569e059920f81acd724e0d27427e">MT_REQUEST</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aab4c0d0ec6de9cf94cc974ae8fc9e35a">MT_REQUEST_NO_RETURN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a466e1d89dfcaa5dd44fde3e415f2416d">MT_NOTIFICATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0addf6a7432258a718e2932fa965d97bbc">MT_REQUEST_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a1bf98da6ea8f237e6e51c7e92b246de7">MT_REQUEST_NO_RETURN_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ace5537f09d888102be41b223185ee2f5">MT_NOTIFICATION_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a82ea3980d0263c76e804be8e7bfaf4dc">MT_RESPONSE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aaec6a09cc5b81b91e3be5b9a5ccdc057">MT_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a0f38170a7d6c21f75d364050974268fb">MT_RESPONSE_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ab5fef10d37791909a02e03f233ef9af8">MT_ERROR_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9be143b64fe2fe12b2774d9f34b134b4">MT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>return_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adc9f5628547e5cfcb1cf28ea8c1a9d56</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aa02beabe6f35d74f47eb01520970b350">E_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aad29ea65c1fc33034264f0aae0263f8e">E_NOT_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a026654634a6cf33953ba2f9762d71d5e">E_UNKNOWN_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a54aafae2807f78ee9ff838e8d5af9e6f">E_UNKNOWN_METHOD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56ac496eb6230d3e219a91a9f6dcdf760e0">E_NOT_READY</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a306d4834481f8d0cd8f734bcaf37f80f">E_NOT_REACHABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a5d0b3a75947415de8cc770284a5b94b1">E_TIMEOUT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a48845fadec08cc492508d956b2462c2c">E_WRONG_PROTOCOL_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9b2df6640388ecaae9bc7a002a04b7a1">E_WRONG_INTERFACE_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a1ace601dd1b4b72c5c345d074e8e7303">E_MALFORMED_MESSAGE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9708220dea1582abffb909d98eaa432b">E_WRONG_MESSAGE_TYPE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a6a96cb414ac815468fbfaebd4f4e696e">E_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c450e26151d2ee7c85d9ab9a17234b8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ab08f40bf9292c76dd7ab541a0635c1dc">RS_RUNNING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a93b601bbf5c3713331e0dd0296d12715">RS_SUSPENDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8aa085350435b219591b40870198b11c45">RS_RESUMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a97d8d49b4053be702db57810be8aecc4">RS_SHUTDOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ae7f767ece082f4b742ba9f4ec5883692">RS_DIAGNOSIS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a006e557bf836a15785d2d5470b430978">RS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>offer_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a750cce5fdf91a2145560b4391141114c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca22cd38f75748c081219392589ee9f3d2">OT_LOCAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca54feb1c936683243491c3cd815c01b35">OT_REMOTE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114cab89549e23113d3e4072cebaf6abe2484">OT_ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>event_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afffd745bcf53bf88a06b4a42da68e9e6</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a491ebf10d74cafbc4f92c6060e0659d8">ET_EVENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a4101e5665ca41d40d1c72e1b59a7ccd5">ET_SELECTIVE_EVENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6ad0c76974d395561dcd5addd17025caca">ET_FIELD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a622bf80e22546ba409b0ee1f1f765b06">ET_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_mode_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6f6cf174f2fb1215e15535d34a582b4f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fae6ea3fc38b5dd378da5fd9982d07a906">SM_OFF</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fa1e206a41b2e7227f48cf6d239412ab0c">SM_ON</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fa2f6bfcbc8033cafb45764771ea737c12">SM_AUDIT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_update_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad6d71f484ce98ac3a3a1f608b5077c5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba15d5ecaf87a1e61054aa9b30c2384195">SU_SUCCESS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba27edac640a41de171f851759ee6e3dbf">SU_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba5091c773435a96ef3eb98ef0cbdf6b0f">SU_UNKNOWN_USER_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba9e3357d764d9082a283270ab50f78291">SU_INVALID_FORMAT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>reliability_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a3d53b0e729d0788e14cdbcc3c9941d5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5ba26b55ae0f42b75bb199d8ae7bf071fe9">RT_RELIABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5baf6782e4fee43f2927a875e2e76912518">RT_UNRELIABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5ba8cdb04af539d2e16a915e7b27236ba59">RT_BOTH</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5bab3fa977816ea6fabb8b123bc67ee0bea">RT_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>header.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/tracing/include/</path>
    <filename>header_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::trace::header</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TRACE_HEADER_SIZE</name>
      <anchorfile>header_8hpp.html</anchorfile>
      <anchor>ad72d2b811cdc9a46326974214d08e08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>protocol_e</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a2ba767a205c2042308c808a2e5bb3bd4</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4af5ddaf0ca7929578b408c909429f68f2">local</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4a84864c1fe095359bc9c5ac068e24e781">udp</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4ae20bb202b1d5537b1415e3263a37ed78">tcp</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4aad921d60486366258809553a3db49a4a">unknown</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>channel_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/tracing/src/</path>
    <filename>channel__impl_8cpp.html</filename>
    <includes id="channel__impl_8hpp" name="channel_impl.hpp" local="yes" imported="no">../include/channel_impl.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="function">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>ab270b722efbcbf125d648925c83d40b0</anchor>
      <arglist>(0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>connector_impl.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/tracing/src/</path>
    <filename>connector__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="channel__impl_8hpp" name="channel_impl.hpp" local="yes" imported="no">../include/channel_impl.hpp</includes>
    <includes id="connector__impl_8hpp" name="connector_impl.hpp" local="yes" imported="no">../include/connector_impl.hpp</includes>
    <includes id="implementation_2tracing_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="implementation_2configuration_2include_2trace_8hpp" name="trace.hpp" local="yes" imported="no">../../configuration/include/trace.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="variable">
      <type>const char *</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_ID</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a18a8a00a132973615e29ff0e88c4f22c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>header.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/tracing/src/</path>
    <filename>header_8cpp.html</filename>
    <includes id="header_8hpp" name="header.hpp" local="yes" imported="no">../include/header.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="client__endpoint_8hpp" name="client_endpoint.hpp" local="yes" imported="no">../../endpoints/include/client_endpoint.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
  </compound>
  <compound kind="file">
    <name>byteorder.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/utility/include/</path>
    <filename>byteorder_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_BYTES_TO_WORD</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>ad5a0480874c83c2b9f395aec2f6824a0</anchor>
      <arglist>(x0, x1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_BYTES_TO_LONG</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a4104d06e2629ebd9d02cdc6d4d9fbc52</anchor>
      <arglist>(x0, x1, x2, x3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_WORDS_TO_LONG</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>af131bd4d889fef52301d81f7d1b1fa78</anchor>
      <arglist>(x0, x1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_WORD_BYTE0</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>acc56ae8955b8b47aac9b8578beef3b91</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_WORD_BYTE1</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a148441aa2d823cf3ee541d5775c1df38</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_BYTE0</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>aedafa327b6e204b7c01ae051f79a70c7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_BYTE1</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a56d0cdb91b418fa2354545ed708baadb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_BYTE2</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>ad5ba17d49c3ae9e4075f4af24592d077</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_BYTE3</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a4b7af8cb99db596f50d3ff6476891ed9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_WORD0</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a48a4797fb081eb55d4889013c888fad6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_WORD1</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a8589e2681a1de1178b6db835e3789cb8</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>criticalsection.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/utility/include/</path>
    <filename>criticalsection_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::mutex</type>
      <name>CriticalSection</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad47ec96defa1d7249fd613470a2eb4b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utility.hpp</name>
    <path>/home/kali/projects/vsomeip/implementation/utility/include/</path>
    <filename>utility_8hpp.html</filename>
    <includes id="criticalsection_8hpp" name="criticalsection.hpp" local="yes" imported="no">criticalsection.hpp</includes>
    <class kind="class">vsomeip_v3::utility</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>criticalsection.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/utility/src/</path>
    <filename>criticalsection_8cpp.html</filename>
    <includes id="criticalsection_8hpp" name="criticalsection.hpp" local="yes" imported="no">../include/criticalsection.hpp</includes>
  </compound>
  <compound kind="file">
    <name>utility.cpp</name>
    <path>/home/kali/projects/vsomeip/implementation/utility/src/</path>
    <filename>utility_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../include/utility.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>application.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2application_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../../compat/vsomeip/constants.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../../compat/vsomeip/enumeration_types.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2function__types_8hpp" name="function_types.hpp" local="yes" imported="no">../../compat/vsomeip/function_types.hpp</includes>
    <includes id="compat_2vsomeip_2handler_8hpp" name="handler.hpp" local="yes" imported="no">../../compat/vsomeip/handler.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::application</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>application.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2application_8hpp.html</filename>
    <class kind="class">vsomeip_v3::application</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2error_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <namespace>vsomeip</namespace>
    <member kind="enumeration">
      <type></type>
      <name>error_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5b9612ad3bac160f0cdd9cb06b74a4f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a29835fa6602c75b2998993c8785263d4">CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a1f67316ed5b6a9b991cd4c6868745609">PORT_CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1abd0d3fd98ec3b5b4e67789308ee94d65">CLIENT_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a7b9f807aa58e17dd8d55e86fbf270ce8">SERVER_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a461534fb2cc82e79c206b48674bd6017">SERVICE_PROPERTY_MISMATCH</enumvalue>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ERROR_INFO</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aceaf0adeb488b085418b2562b6ce9cba</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2error_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="enumeration">
      <type></type>
      <name>error_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5b9612ad3bac160f0cdd9cb06b74a4f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a29835fa6602c75b2998993c8785263d4">CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a1f67316ed5b6a9b991cd4c6868745609">PORT_CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1abd0d3fd98ec3b5b4e67789308ee94d65">CLIENT_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a7b9f807aa58e17dd8d55e86fbf270ce8">SERVER_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a461534fb2cc82e79c206b48674bd6017">SERVICE_PROPERTY_MISMATCH</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>export.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2export_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EXPORT</name>
      <anchorfile>compat_2vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a096aa179ae11e83e0eec48b6126ed45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT</name>
      <anchorfile>compat_2vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a12a39fac817a9206c4bc47db16a1339e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT_CONFIG</name>
      <anchorfile>compat_2vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a642d4c9ac8c9586117b0b9b210b7d29f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>export.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2export_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EXPORT</name>
      <anchorfile>vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a096aa179ae11e83e0eec48b6126ed45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT</name>
      <anchorfile>vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a12a39fac817a9206c4bc47db16a1339e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT_CONFIG</name>
      <anchorfile>vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a642d4c9ac8c9586117b0b9b210b7d29f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2handler_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="struct">vsomeip::ip_address_t</class>
    <namespace>vsomeip</namespace>
    <member kind="typedef">
      <type>std::function&lt; void(state_type_e) &gt;</type>
      <name>state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aaaa3f291807d88e94809eef7359c2ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; message &gt; &amp;) &gt;</type>
      <name>message_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8cce472e7560a3a6cdb00bcae22b01f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(service_t, instance_t, bool) &gt;</type>
      <name>availability_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a227b0afaf3bd28575d79864c78063392</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(client_t, bool) &gt;</type>
      <name>subscription_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aaebab325d7be5459c176561a1ba4f992</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const uint16_t) &gt;</type>
      <name>error_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae5269a22da27c8eb353162cf4b0e2326</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const service_t, const instance_t, const eventgroup_t, const event_t, const uint16_t) &gt;</type>
      <name>subscription_status_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a71ee64a10ba064c1b50b7b20fe0cbed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(client_t, bool, std::function&lt; void(const bool) &gt;)&gt;</type>
      <name>async_subscription_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>af85320a74494000612f648f506253e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::vector&lt; std::pair&lt; service_t, instance_t &gt; &gt; &amp;_services) &gt;</type>
      <name>offered_services_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a70467904551dec0e3330ffc8cb17e694</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void() &gt;</type>
      <name>watchdog_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae36ba755d2b18a3a8128c7c1ce3f7344</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const ip_address_t &amp;)&gt;</type>
      <name>offer_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a015433a2f8cf63087bacc83e53334d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const ip_address_t &amp;)&gt;</type>
      <name>reboot_notification_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a70cbd3764a3179a79bb8388442a9d522</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void()&gt;</type>
      <name>routing_ready_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0277434fda0f0114d91d02a987ec7076</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(routing_state_e)&gt;</type>
      <name>routing_state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aba8cd17d6364361b4c04a38e5aff0428</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(security_update_state_e)&gt;</type>
      <name>security_update_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a74c8367b8a280bfebf473bbc3cbe5627</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2handler_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::ip_address_t</class>
    <class kind="struct">vsomeip_v3::remote_info_t</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::function&lt; bool(const remote_info_t &amp;)&gt;</type>
      <name>sd_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0c6ab7603f9a47ff36234c1cf22c78aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>deserializable.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/internal/</path>
    <filename>compat_2vsomeip_2internal_2deserializable_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../compat/vsomeip/export.hpp</includes>
    <class kind="class">vsomeip::deserializable</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>deserializable.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/internal/</path>
    <filename>vsomeip_2internal_2deserializable_8hpp.html</filename>
    <class kind="class">vsomeip_v3::deserializable</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serializable.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/internal/</path>
    <filename>compat_2vsomeip_2internal_2serializable_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../compat/vsomeip/export.hpp</includes>
    <class kind="class">vsomeip::serializable</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>serializable.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/internal/</path>
    <filename>vsomeip_2internal_2serializable_8hpp.html</filename>
    <class kind="class">vsomeip_v3::serializable</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2message_8hpp.html</filename>
    <includes id="compat_2vsomeip_2message__base_8hpp" name="message_base.hpp" local="yes" imported="no">../../compat/vsomeip/message_base.hpp</includes>
    <class kind="class">vsomeip::message</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2message_8hpp.html</filename>
    <class kind="class">vsomeip_v3::message</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_base.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2message__base_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../../compat/vsomeip/enumeration_types.hpp</includes>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../compat/vsomeip/export.hpp</includes>
    <includes id="compat_2vsomeip_2internal_2deserializable_8hpp" name="deserializable.hpp" local="yes" imported="no">../../compat/vsomeip/internal/deserializable.hpp</includes>
    <includes id="compat_2vsomeip_2internal_2serializable_8hpp" name="serializable.hpp" local="yes" imported="no">../../compat/vsomeip/internal/serializable.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::message_base</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_base.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2message__base_8hpp.html</filename>
    <class kind="class">vsomeip_v3::message_base</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>payload.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2payload_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../compat/vsomeip/export.hpp</includes>
    <includes id="compat_2vsomeip_2internal_2deserializable_8hpp" name="deserializable.hpp" local="yes" imported="no">../../compat/vsomeip/internal/deserializable.hpp</includes>
    <includes id="compat_2vsomeip_2internal_2serializable_8hpp" name="serializable.hpp" local="yes" imported="no">../../compat/vsomeip/internal/serializable.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::payload</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>payload.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2payload_8hpp.html</filename>
    <class kind="class">vsomeip_v3::payload</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2plugin_8hpp.html</filename>
    <class kind="class">vsomeip::plugin</class>
    <class kind="class">vsomeip::plugin_impl</class>
    <namespace>vsomeip</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT_PLUGIN</name>
      <anchorfile>compat_2vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>af16e77982b62ded21679ed7c59633d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PLUGIN_INIT_SYMBOL</name>
      <anchorfile>compat_2vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>a8da24b9f43d2da2a76bbb6fe093dff4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PLUGIN</name>
      <anchorfile>compat_2vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>ab0f837409bed80730a79fe06fef49ec4</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; plugin &gt;(*</type>
      <name>create_plugin_func</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a453845ec84f23c9c4e4495dc2fab00a3</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>create_plugin_func(*</type>
      <name>plugin_init_func</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae39557b5d78d0c6fb0d46a522db80092</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>plugin_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a790c1b95fe9fcda1dc37ad588dedd691</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a624f0ad679551d9d1fbed30ded915e12">APPLICATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8375dcf403160aa383844b954bac3e89">PRE_CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a4c2ea315c4a55edb102dbdaa294148f2">CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8d0f84555f5bee6a3cd109b806e52902">SD_RUNTIME_PLUGIN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>plugin.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2plugin_8hpp.html</filename>
    <class kind="class">vsomeip_v3::plugin</class>
    <class kind="class">vsomeip_v3::plugin_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT_PLUGIN</name>
      <anchorfile>vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>af16e77982b62ded21679ed7c59633d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PLUGIN_INIT_SYMBOL</name>
      <anchorfile>vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>a8da24b9f43d2da2a76bbb6fe093dff4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PLUGIN</name>
      <anchorfile>vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>ab0f837409bed80730a79fe06fef49ec4</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>plugin_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a790c1b95fe9fcda1dc37ad588dedd691</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a624f0ad679551d9d1fbed30ded915e12">APPLICATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8375dcf403160aa383844b954bac3e89">PRE_CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a4c2ea315c4a55edb102dbdaa294148f2">CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8d0f84555f5bee6a3cd109b806e52902">SD_RUNTIME_PLUGIN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>application_plugin.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/plugins/</path>
    <filename>compat_2vsomeip_2plugins_2application__plugin_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../compat/vsomeip/export.hpp</includes>
    <class kind="class">vsomeip::application_plugin</class>
    <namespace>vsomeip</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_APPLICATION_PLUGIN_VERSION</name>
      <anchorfile>compat_2vsomeip_2plugins_2application__plugin_8hpp.html</anchorfile>
      <anchor>aef06458d789996a3da8d3f9a112bfb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>application_plugin_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afb31d94898ceb50558494a96efab3425</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a79d4c02fa345106ed33d9af9a3a5f1d1">STATE_INITIALIZED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a000fd23c9532e70b8bf9450833f8472d">STATE_STARTED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425ae72a91340271ff70343ead0b40cfc0a3">STATE_STOPPED</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>application_plugin.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/plugins/</path>
    <filename>vsomeip_2plugins_2application__plugin_8hpp.html</filename>
    <class kind="class">vsomeip_v3::application_plugin</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_APPLICATION_PLUGIN_VERSION</name>
      <anchorfile>vsomeip_2plugins_2application__plugin_8hpp.html</anchorfile>
      <anchor>aef06458d789996a3da8d3f9a112bfb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>application_plugin_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afb31d94898ceb50558494a96efab3425</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a79d4c02fa345106ed33d9af9a3a5f1d1">STATE_INITIALIZED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a000fd23c9532e70b8bf9450833f8472d">STATE_STARTED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425ae72a91340271ff70343ead0b40cfc0a3">STATE_STOPPED</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>pre_configuration_plugin.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/plugins/</path>
    <filename>compat_2vsomeip_2plugins_2pre__configuration__plugin_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../compat/vsomeip/export.hpp</includes>
    <class kind="class">vsomeip::pre_configuration_plugin</class>
    <namespace>vsomeip</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PRE_CONFIGURATION_PLUGIN_VERSION</name>
      <anchorfile>compat_2vsomeip_2plugins_2pre__configuration__plugin_8hpp.html</anchorfile>
      <anchor>ab586aba6ce3e46ebd1da26a2ef93716e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pre_configuration_plugin.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/plugins/</path>
    <filename>vsomeip_2plugins_2pre__configuration__plugin_8hpp.html</filename>
    <class kind="class">vsomeip_v3::pre_configuration_plugin</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PRE_CONFIGURATION_PLUGIN_VERSION</name>
      <anchorfile>vsomeip_2plugins_2pre__configuration__plugin_8hpp.html</anchorfile>
      <anchor>ab586aba6ce3e46ebd1da26a2ef93716e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vsomeip.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2vsomeip_8hpp.html</filename>
    <includes id="compat_2vsomeip_2application_8hpp" name="application.hpp" local="yes" imported="no">../../compat/vsomeip/application.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../../compat/vsomeip/constants.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../compat/vsomeip/defines.hpp</includes>
    <includes id="compat_2vsomeip_2message_8hpp" name="message.hpp" local="yes" imported="no">../../compat/vsomeip/message.hpp</includes>
    <includes id="compat_2vsomeip_2payload_8hpp" name="payload.hpp" local="yes" imported="no">../../compat/vsomeip/payload.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">../../compat/vsomeip/runtime.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2trace_8hpp" name="trace.hpp" local="yes" imported="no">../../compat/vsomeip/trace.hpp</includes>
  </compound>
  <compound kind="file">
    <name>vsomeip.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/</path>
    <filename>vsomeip_2vsomeip_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>logger.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/internal/</path>
    <filename>logger_8hpp.html</filename>
    <class kind="class">vsomeip_v3::logger::message</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::logger</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_FATAL</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>abc5934372b22c8045d3472167e120ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ERROR</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a18bce98f7ee6cc3026f40472a6502c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_WARNING</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>abc1ce0dda71532fdbc30a4844dda83c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_INFO</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a5ef24a765255ae199ce3c5e029035e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEBUG</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a661df4414e53f7ff78dcbe187a9e3d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TRACE</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a3db772adc918f6ebc59cef6e9adf556b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOG_DEFAULT_APPLICATION_ID</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a425a955c474354b0808b0cfdc399469e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOG_DEFAULT_APPLICATION_NAME</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a82d302e8da26b0d5afb1a78bcc441f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>level_e</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>af19b0f174f174e494d4cdeb6b9f140c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_FATAL</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>abe1620a06072715114c470105c372efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>abfddb3047122bbae740f88f47d4d39eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_WARNING</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a0b81cb93e1bd604c2e0d7cb74cd7b02c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_INFO</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a0b35e17a110c5323b007c1015f5a062b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_DEBUG</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a88acccf741c76e4f81b618cc5201b2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_VERBOSE</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a863ead09626fc9409830856e6cbecd51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>policy_manager.hpp</name>
    <path>/home/kali/projects/vsomeip/interface/vsomeip/internal/</path>
    <filename>policy__manager_8hpp.html</filename>
    <class kind="class">vsomeip_v3::policy_manager</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="class">
    <name>vsomeip::application</name>
    <filename>classvsomeip_1_1application.html</filename>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; major_version_t, minor_version_t &gt; &gt; &gt;</type>
      <name>available_t</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ad1ab5674b0bf63b07a10524f005d8097</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; ip_address_t, std::string &gt;</type>
      <name>offer_acceptance_map_type_t</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a16fbb8370d92f78da2ed192b99e78b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~application</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>aac62a81a528f8c1e915ed5882daed8ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ab03d6da512efd09ef503e085fbfadd1a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a90a0ed2e4c259af1703f69053d80e048</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_configuration</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>afcecd2562a59e4b52fd5db8f2993517d</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; _configuration)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>af3e793e3b7e305c722279adebafcb2ae</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a7d7d17763e65ba5235ce89ceddbc7926</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ad747e3973ff37206da3d64add948c462</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>aff5ea704dba08a9eb65ad08e1e3552c7</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a4aac7f522a9471050a2aaa6500a1c1be</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a218181bac39eb3c3efddb44ea5cb48a6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a1ac12fc590c19a541bc0922608b257b8</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a1c86b5e8983c87e655a36eadb8cec80e</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR, bool _use_exclusive_proxy=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>aedb066c408395ad4347a59d32b96b24d</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ab6f369a1e2f9a0e874ae0cce76317b7d</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a9ad8b4cd656a7d91f8a928681c97655d</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a869279b593b4b7fb4fab497233af026e</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major=DEFAULT_MAJOR, subscription_type_e _subscription_type=subscription_type_e::SU_RELIABLE_AND_UNRELIABLE, event_t _event=ANY_EVENT)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a8fd757a864dacb99a3469a1111693659</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a8eaa6f0b26ee15f815dd69d675dafe86</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a160deb2493f3267c5820e1dc786a8585</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message, bool _flush=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a20465ba007ae4a866f35269ea178ffe5</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a795c77e7f807048af460a8fdb91631db</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_state_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a90766c085b0a07337288b48d6a7091af</anchor>
      <arglist>(state_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_state_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a0c050cbd46593a99e2adc901718ff04f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_message_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a3de8b8ee3fd7b3224e67a08ba012adad</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, message_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_message_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a17134ae1d754fd4f74469eb9551ac286</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a5146910ea69e3c99a5a7a133c969115b</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_handler_t _handler, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_availability_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ad1b7d018383eb833a9db517d6f8eae5d</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ad09cb06f90776a0114302f52c2ba761d</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, subscription_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a0c13f4d5a15dc5787fd0fc9a18010a91</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_error_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>aea694043dbfad739015c5eadf5e8bb73</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, error_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_subscription_error_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a6ac56226b72aee23be6a605fad03e3c8</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clear_all_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a72089e5a8ecadb951a22eaa1c495632b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a3b2be0667c0921e840879312d4362623</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a695fd70699d0f93cde01d034dd6bdcb5</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field, std::chrono::milliseconds _cycle, bool _change_resets_cycle, const epsilon_change_func_t &amp;_epsilon_change_func)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a2fb8cc244b6ec082f06715d7506c2f5f</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a4a15aaf49661771b835b9edb45f65d45</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>are_available</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a78106b3a87d28b39bff559c4d5fa2d54</anchor>
      <arglist>(available_t &amp;_available, service_t _service=ANY_SERVICE, instance_t _instance=ANY_INSTANCE, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a852bc268f36b2dfd4e43f49d563d2261</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force, bool _flush) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>abb1964371299bfded086276ebabb8ca0</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force, bool _flush) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a1319fc1cb1b008bd6bbfa0176107c120</anchor>
      <arglist>(routing_state_e _routing_state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a5825ac5db1125885131d7d10122ccf32</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>afe7f26ba08e9ee4d06df8d2679eee18e</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a2a75e5188727542eeafd13c2dd000a7c</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler, bool _is_selective)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_offered_services_async</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a5cf75041f9c7b251c2ffd45839ddfd35</anchor>
      <arglist>(offer_type_e _offer_type, offered_services_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_watchdog_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a8641dc294bacae530e48a2589835cf0a</anchor>
      <arglist>(watchdog_handler_t _handler, std::chrono::seconds _interval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a085cd6a2056c79c09471ea37736ef854</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, async_subscription_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_offer_acceptance_required</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ac62a5f4b9fee80b8fe77286d2e1753da</anchor>
      <arglist>(ip_address_t _address, const std::string _path, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual offer_acceptance_map_type_t</type>
      <name>get_offer_acceptance_required</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a51f77cd2ea1b577f7500a24716a03c89</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_offer_acceptance_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a85eaa0f71db7638918c791004d66eee9</anchor>
      <arglist>(offer_acceptance_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a7ed8ea4153dd226aa74f358d36fabdfc</anchor>
      <arglist>(reboot_notification_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a751d73500d077e3143faff9ca9cbab1e</anchor>
      <arglist>(routing_ready_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a463b79ed15ff195bd2c4361139ccd37a</anchor>
      <arglist>(routing_state_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>update_service_configuration</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a07da14015cdd089060923d6dea4fa225</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool _offer)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a84a4bfb51748e4397afc058a63939f6a</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, std::shared_ptr&lt; policy &gt; _policy, std::shared_ptr&lt; payload &gt; _payload, security_update_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ae6f9c793f01edcc12e6abec1ff4c2eb6</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, security_update_handler_t _handler)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::application</name>
    <filename>classvsomeip__v3_1_1application.html</filename>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; major_version_t, minor_version_t &gt; &gt; &gt;</type>
      <name>available_t</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a4010c36a9d9a167b1a731886ab1c0ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; remote_info_t, std::string &gt;</type>
      <name>sd_acceptance_map_type_t</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aaba602c93c8737b7bf4ec8006735e978</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~application</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a34855aa4e6e7d88ff0f148660c929431</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a1f439d132a9564d460e6221c7dd175e7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ab4a5068c29679bb58aeb7ec9ff44462b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual diagnosis_t</type>
      <name>get_diagnosis</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a15dd8512307c1dcce4834bfd5844c44d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a053bb3b1ebdb142eae820b135c79e860</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ab60a53c3183073ace4076805cb68e3eb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a0745c5c704256bdc29a93c42d6c54c0a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>process</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a254cec915ac96aacc593431677815c69</anchor>
      <arglist>(int _number=VSOMEIP_ALL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual security_mode_e</type>
      <name>get_security_mode</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a4e5e96bb54fba8e255a6de904c988462</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a9aa3ede83c77bd2fd5f05d28c53946b3</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aa220a441110b042cd0a5f04413081e47</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>abe52c42940216c6ba11ce111eff52ec8</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type=event_type_e::ET_EVENT, std::chrono::milliseconds _cycle=std::chrono::milliseconds::zero(), bool _change_resets_cycle=false, bool _update_on_change=true, const epsilon_change_func_t &amp;_epsilon_change_func=nullptr, reliability_type_e _reliability=reliability_type_e::RT_UNKNOWN)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_event</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>add269b653d339e3bd76a79dc0d7e136c</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a7c0923a15d27d2d26e99942fc684583e</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aaca58eed126c023c5dc2e279b0ee1d0b</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_event</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a655f07b44bed30de8086c56114365221</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type=event_type_e::ET_EVENT, reliability_type_e _reliability=reliability_type_e::RT_UNKNOWN)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_event</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a1b569834ad049f4c2f88bdc468a9cdaf</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a11a3d15baeb8ecfc1bc99a2772baab8d</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major=DEFAULT_MAJOR, event_t _event=ANY_EVENT)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a62433249bcb229ad02cc275a64b19185</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a1c8f1613d9a46af2a0ba9e3244f70507</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>are_available</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aba67c7f2d69c5e1415a7dcc7c6823a3e</anchor>
      <arglist>(available_t &amp;_available, service_t _service=ANY_SERVICE, instance_t _instance=ANY_INSTANCE, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a4b5b65d25e928362362596710e478886</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>add9f2e3cd2a78eb6f1ede01b96274af9</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>af55b68dd95f3a47de61d5064f471b505</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a8ebe53466da4f9658eab1ff22f34444f</anchor>
      <arglist>(state_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a2b25c85186dd44745904d267cb1e9e04</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_message_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a0f3a2f62fcee8a6a1beba1295c94ac65</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, message_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_message_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a21618c7b697424a4f36d1f3f2574ad1f</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ab20a71c5af9da05d2076a7a04f855a4f</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_handler_t _handler, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>adf2acb46d1e54ce0d873810c34907110</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a90d692e74a4b52f12bcc5b74c35631a0</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, subscription_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ae65ce9d3c958d6756b9dde94b447c645</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, async_subscription_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a55fbd3c628fef81e6e72a2282a62c081</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clear_all_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a24b7c06da39416d888691334ab38c04e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a8a65b2d6143875566ab36b3a838c9b85</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>af3a2a18700955404c29e8ff6abd402e0</anchor>
      <arglist>(routing_state_e _routing_state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ab6cd4ad804134615d15d3e36558f5452</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a3ee13365fd9e30e81a683979fb73d5e2</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler, bool _is_selective=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_subscription_status_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a1cee1318798c97ef33ef3fe0e9767479</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_offered_services_async</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a94687a0e3edff699a398c4b22476c73c</anchor>
      <arglist>(offer_type_e _offer_type, offered_services_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_watchdog_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>adc4d171eea49168d1bb7d1c93d308084</anchor>
      <arglist>(watchdog_handler_t _handler, std::chrono::seconds _interval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ad52d38485d8b9b84fcfc46d2cafcd109</anchor>
      <arglist>(const remote_info_t &amp;_remote, const std::string &amp;_path, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a395191d4d94d5e22be8fce8e9afb1ebf</anchor>
      <arglist>(const sd_acceptance_map_type_t &amp;_remotes, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual sd_acceptance_map_type_t</type>
      <name>get_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a0e215b86e114151e9275c6bdec25e820</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>abaaeba5616b381f342d97fc39c5855c3</anchor>
      <arglist>(sd_acceptance_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a032a20bc85ca8f0b7055f6da3fdc49fa</anchor>
      <arglist>(reboot_notification_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>adff940c2a1d66026e2ad2ff8c3e3f1ee</anchor>
      <arglist>(routing_ready_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>abd75b1438ae85f2705267fc7889def9b</anchor>
      <arglist>(routing_state_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>update_service_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a67b59c477418479abebea2f64497e354</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool _offer)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a993c150fb1cf5a0d027e5fa3f8ad6c0b</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, std::shared_ptr&lt; policy &gt; _policy, std::shared_ptr&lt; payload &gt; _payload, security_update_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>af73a945f5750caa74500add3a98afc11</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, security_update_handler_t _handler)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::application_impl</name>
    <filename>classvsomeip_1_1application__impl.html</filename>
    <base>vsomeip_v3::application</base>
    <member kind="function">
      <type></type>
      <name>application_impl</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>af7fa043b92549fe8f61e042cee6cad1c</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~application_impl</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a7c32cfb6767560461a476a264f8e06c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>adb7e9751b5d76cf61e2053df193a0ea7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a68bb208ff12c11812c195bd00abc98f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_configuration</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a8abb94446e23373672e55d620880ae53</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; _configuration)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a0d47278a6304604e50b33b3f8c8b241d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a613d36eae6a766535602a804290475cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>acefe52617bb819a82ecb984c808adb7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a5f2738e8a7bc15cf74db5dd46c565136</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a65f497de3e2e971ae647298de135df19</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9d062bf1eeb3562de6736213d2fe7bea</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a37a41dd4fb686045ab11c95b329920c0</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>aefdba2150dff883d76ba91465e68ef11</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, bool _use_exclusive_proxy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ac07c098c495d5540c500d92d6e5035e2</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad3997c98fda3f1ead8a5bd64acf68056</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>afbee8455f12f74448e792c8f2018ed81</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>abe0e9794acc3ce4058729c17889e3dbf</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, subscription_type_e _subscription_type, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a21503dc68925017d8b8fb532b1b6d632</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a8e09d8cd1a2bf7ea631b8e71bfc687b6</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>aa7a5b4bde09a3f42182f173266f46bf5</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message, bool _flush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a013db003cf546a1d478d332e1fa046fc</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad5756141c4c214d376319ef0d88aa50b</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_state_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad0281a5483816bfee24e6bfddb72ba13</anchor>
      <arglist>(state_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_state_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a689db7170235377294d34fff5a7bc81f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_message_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>afc60b5012062bd7ed382c599dd5d3b76</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, message_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_message_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9bafc6a5d318d473e145c165b31cfff8</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a450eaeaaaf33f139728aa46558781b9a</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_handler_t _handler, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_availability_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>af4b1e4b9236e5a8520c8ac358a3f4818</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a90d21fdac264b40a3499eb057a40a7da</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, subscription_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a5d379ce7331beb83466d4335c240f5d5</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_subscription_error_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a93135ddd3eb3360cafa729ed8c13f335</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, error_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_subscription_error_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a3a02702239b6a506c09a2e40b70d3e5f</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_all_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a106c5bc08a45e3ec211670033a33668e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a88a6f2a494e12f251661b6b7fcb66f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a68ba760cfccd8b580bcd683aaeec4c76</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field, std::chrono::milliseconds _cycle, bool _change_resets_cycle, const epsilon_change_func_t &amp;_epsilon_change_func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ac3c8211f7c8ee5debcb7a56b95f52ea2</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>acff7f84a704a66370a9ad464a0d55945</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>are_available</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a352bd9a5b950cc55201705f52500b4b3</anchor>
      <arglist>(available_t &amp;_available, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a22c04d4142a9b76a64b1379572d40f18</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force, bool _flush) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a1d22a7ad412ac5af54b5bc9a7a3778dc</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force, bool _flush) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9701e63c90a7e5d0d84ffe7d01b736ce</anchor>
      <arglist>(routing_state_e _routing_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>aae8bcab2be1941c0a2e46efe25332b74</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ac974f38048cfa0d7238ba4239cd752e7</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a7cb483935be43d19b8e1dda8e818afed</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler, bool _is_selective)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_offered_services_async</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad638c4b7ab94cb96b478d805c904c0af</anchor>
      <arglist>(offer_type_e _offer_type, offered_services_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_watchdog_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9d3eaec8f7a466e9bddc60cea2677c14</anchor>
      <arglist>(watchdog_handler_t _handler, std::chrono::seconds _interval)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ab8ad9a7217d67ff3bbec8093b2f66a68</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, async_subscription_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_offer_acceptance_required</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a40793ba2988b5d7a03da1f0477454c8c</anchor>
      <arglist>(ip_address_t _address, const std::string _path, bool _enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual offer_acceptance_map_type_t</type>
      <name>get_offer_acceptance_required</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a8fbfd008cb1c32ea53a59ea33086288b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_offer_acceptance_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a925486067be0c63c35d6d6a40ad2d847</anchor>
      <arglist>(offer_acceptance_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ae6818806c6cfbd60b7783f03c996b149</anchor>
      <arglist>(reboot_notification_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9becdcfa7238e19d8c9bd98700dfc4ea</anchor>
      <arglist>(routing_ready_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>aea2d80a46bafc2fd1cf3c5f418756dba</anchor>
      <arglist>(routing_state_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>update_service_configuration</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a55b6fd6470b09e850c92d13bd356b6dd</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool _offer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>acd5b1450922828c2b5f36dcb206e1b67</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, std::shared_ptr&lt; policy &gt; _policy, std::shared_ptr&lt; payload &gt; _payload, security_update_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad59cda17dcff9061023ae3f3976a3ea8</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, security_update_handler_t _handler)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::application_impl</name>
    <filename>classvsomeip__v3_1_1application__impl.html</filename>
    <base>vsomeip_v3::application</base>
    <base>vsomeip_v3::routing_manager_host</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>application_impl</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a2ab313376d14e630bf15d929000d0436</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~application_impl</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab398af9566626493ee21e54b8804e36c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a871a131a16bbe4505ea4a9929edfb355</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a0fae7353fe2d472323141a0584aac052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a0541e3ee78a5dd8978ea8d34c0da2e36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>process</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a2c0a4b9d51a16f958a23c2718dd946ea</anchor>
      <arglist>(int _number)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT security_mode_e</type>
      <name>get_security_mode</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a9c2ba23f3c5e991d8d37f3b02ff29190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a5596383cc2fc0702add858ff3b63edd4</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a73ccd48801bf1e7f8b6d4cf89d5269e3</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a489cb0386fd1cb3793f8e0c3bde56f23</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, const epsilon_change_func_t &amp;_epsilon_change_func, reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>stop_offer_event</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a11cdfd50051128cff45f911fb61bde80</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>af0b5dcc6fb5e57f7cec707549965d9cb</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab926ce544449a8b1fd1e5c94aa976ee8</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>request_event</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aa7d5f6558d8fa4386860efa1bd7f32c6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type, reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>release_event</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a09abe57742878ef8d37f52d3a1ea3b32</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a3cb0b7fa00258c15d84fc5273824041e</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ac30c6405d916c94cc44806dbf495c075</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a16711b8b8f056b910f46e79c8dada94b</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a27e54ddb0579d2f42f2111a6a3e87deb</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a6ce9cd6719f5127e1c6cd5ec0fcadd3f</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>notify</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>afb97269cda7216511a45ba70653254e6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aba02a924bbe32614b7ff85630923a9e7</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a9a3e23613fa2796b3751a7b06969d109</anchor>
      <arglist>(state_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab978000beea22935b93606a1e64a3f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_message_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a27b22c451c1fcca592b03abbfb99a794</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, message_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_message_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a49da06aed82ffe5a380382a9501f160b</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a189ba1115dad410387a1969a39926ce4</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_handler_t _handler, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a556601ec642cdcf60f6b9bcd8fb6ff19</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>adaf2e727e2758a4d8e639aa5d48f0c6a</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, subscription_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a87d3215b7a4bdf9e1b41afb23bcce3bb</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad5494ddc3652f627beb808b222345ca5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>af1d8ccff7794080797042056181baa45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a75368393947aaf17b2f35ac091e1d1e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>afa2c0e8991c03abf0ead74634d76224b</anchor>
      <arglist>(const client_t &amp;_client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ac615e6fd8ab5a448ea8d5a837e60d023</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT diagnosis_t</type>
      <name>get_diagnosis</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a304bbf55a90750999f6eab70e7a76a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad8bd3f14e98751e7d424b7d6e040ea79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; configuration_public &gt;</type>
      <name>get_public_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a26291b4a5972f454dcc6f312a63ca9c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad122d14155516e6f6a212e0cdc305888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_state</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a80547c72efa06919a9edc5638f98e6f7</anchor>
      <arglist>(state_type_e _state)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_availability</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a3676b973ae8bf9734a454bf125b7979f</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _is_available, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a9b08037552ef71218687e8270d1b11cc</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; &amp;&amp;_message)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_subscription</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>af236c54cb3efa6d930b205c7edcf528e</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, client_t _client, uid_t _uid, gid_t _gid, bool _subscribed, std::function&lt; void(bool)&gt; _accepted_cb)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_subscription_status</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aed21b4bdf38ea74bbb3970be945207e5</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, uint16_t _error)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a204ad2306b4900e4574744c8cb40b3e1</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler, bool _is_selective)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_subscription_status_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>af11551502585c43d173a8104b8435c60</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT routing_manager *</type>
      <name>get_routing_manager</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aef05b83f0b5c360ef749a466dc208455</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>are_available</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ae72c43aa5e95fb803945ae6e445d2053</anchor>
      <arglist>(available_t &amp;_available, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>abc2f6e4da3b50ee827436b5650baca2f</anchor>
      <arglist>(routing_state_e _routing_state)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>clear_all_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a0e2c06652e0f0117c8bf517cd27e7ff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>get_offered_services_async</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ae4bc393e14f111cf867b428cb3a3e8da</anchor>
      <arglist>(offer_type_e _offer_type, offered_services_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad02b9f5257953aa09b8787e09169b6a4</anchor>
      <arglist>(std::vector&lt; std::pair&lt; service_t, instance_t &gt; &gt; &amp;_services)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_watchdog_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a8bd4b1073adc201deb837d788ef3962e</anchor>
      <arglist>(watchdog_handler_t _handler, std::chrono::seconds _interval)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a22a334c7810141e1c1494bcade575617</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, async_subscription_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aa0663119b8ed533d47ba6f60cdf1d6be</anchor>
      <arglist>(const remote_info_t &amp;_remote, const std::string &amp;_path, bool _enable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad6846c8285289c4034dc3215ced72c87</anchor>
      <arglist>(const sd_acceptance_map_type_t &amp;_remotes, bool _enable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT sd_acceptance_map_type_t</type>
      <name>get_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a1f69f6d13e35fed2d25ad00efb3fd956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ae218862bd2c8292d90b5f1cf109cafdc</anchor>
      <arglist>(sd_acceptance_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aa35b2b5a1842b7725ec3a828b9be5869</anchor>
      <arglist>(reboot_notification_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a19a610abcdff0ce6cefa5f4dd9133cc4</anchor>
      <arglist>(routing_ready_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad64aee4b609d6b7ec0b3f0aef9f5bacc</anchor>
      <arglist>(routing_state_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>update_service_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a799eaf017b47a550b52b7c6a2cf0dd13</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool _offer)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a80f0f90d4da517b15abc5ff337e3745c</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, std::shared_ptr&lt; policy &gt; _policy, std::shared_ptr&lt; payload &gt; _payload, security_update_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad0e3d886e3a77b12fd2ee14cea28b626</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, security_update_handler_t _handler)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::application_plugin</name>
    <filename>classvsomeip_1_1application__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~application_plugin</name>
      <anchorfile>classvsomeip_1_1application__plugin.html</anchorfile>
      <anchor>ab6a0e6e008e0e8b76166eed0652c946e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_application_state_change</name>
      <anchorfile>classvsomeip_1_1application__plugin.html</anchorfile>
      <anchor>ad921f9b71b32a0446ce12148f1d3d981</anchor>
      <arglist>(const std::string _application_name, const application_plugin_state_e _app_state)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::application_plugin</name>
    <filename>classvsomeip__v3_1_1application__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~application_plugin</name>
      <anchorfile>classvsomeip__v3_1_1application__plugin.html</anchorfile>
      <anchor>a0aac406ca6d31c43c928595172320bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_application_state_change</name>
      <anchorfile>classvsomeip__v3_1_1application__plugin.html</anchorfile>
      <anchor>ade664afd2f49a869ba694aa77e968d88</anchor>
      <arglist>(const std::string _application_name, const application_plugin_state_e _app_state)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</name>
    <filename>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext_1_1base__implementation__type.html</filename>
    <member kind="variable">
      <type>socket_type</type>
      <name>socket_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext_1_1base__implementation__type.html</anchorfile>
      <anchor>aee0c592f19baff67fe14904045094ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>socket_ops::state_type</type>
      <name>state_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext_1_1base__implementation__type.html</anchorfile>
      <anchor>a8281bdee30b287020a1780a70c8f08bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>reactor::per_descriptor_data</type>
      <name>reactor_data_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext_1_1base__implementation__type.html</anchorfile>
      <anchor>a4f3c13c891ca6399ec8a0f7f112c174f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</name>
    <filename>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local_1_1base__implementation__type.html</filename>
    <member kind="variable">
      <type>socket_type</type>
      <name>socket_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local_1_1base__implementation__type.html</anchorfile>
      <anchor>aa77b07dd80af13dde9ae979b836a88e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>socket_ops::state_type</type>
      <name>state_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local_1_1base__implementation__type.html</anchorfile>
      <anchor>ae33b9ddda69f4b997638aefa50d8c7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>reactor::per_descriptor_data</type>
      <name>reactor_data_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local_1_1base__implementation__type.html</anchorfile>
      <anchor>a946879561402070193b2bbfbd82cecd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::basic_datagram_socket_ext</name>
    <filename>classboost_1_1asio_1_1basic__datagram__socket__ext.html</filename>
    <templarg>typename Protocol</templarg>
    <templarg>typename DatagramSocketService</templarg>
    <base>basic_socket_ext&lt; Protocol BOOST_ASIO_SVC_TARG &gt;</base>
    <base>basic_socket_ext&lt; Protocol, Executor &gt;</base>
    <base>basic_socket_ext&lt; Protocol, Executor &gt;</base>
    <base>basic_socket_ext&lt; Protocol, Executor &gt;</base>
    <class kind="struct">boost::asio::basic_datagram_socket_ext::rebind_executor</class>
    <member kind="typedef">
      <type>DatagramSocketService::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad5b23892613b75552c522ecee6cea3e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DatagramSocketService::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aa73b99ba733265009a4dee37f92f60c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a53e0359fdfd6ef996ed3fb5834f8832a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a44e780e5e28df352e12cfc174bd7479f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; ProtocolBOOST_ASIO_SVC_TARG &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae78d2311eea885306fbcf355a97e378f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a53e0359fdfd6ef996ed3fb5834f8832a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a44e780e5e28df352e12cfc174bd7479f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4bdeb99d5a4f91eca5c91964094713e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4a7017131f253a507e283cf76e054b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a53e0359fdfd6ef996ed3fb5834f8832a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a44e780e5e28df352e12cfc174bd7479f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4bdeb99d5a4f91eca5c91964094713e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4a7017131f253a507e283cf76e054b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a53e0359fdfd6ef996ed3fb5834f8832a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a44e780e5e28df352e12cfc174bd7479f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4bdeb99d5a4f91eca5c91964094713e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4a7017131f253a507e283cf76e054b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a53e0359fdfd6ef996ed3fb5834f8832a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a44e780e5e28df352e12cfc174bd7479f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>acd38f7b6d6662f7525e56270f785d270</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae231f30e4c92bdd8ee5579d5d9c53468</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a31773a3a042f7aef2f58c9f3b828b49d</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a24872bd95603da877ff93b4a1f2040fa</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a37797e8f3a59f106a390ab68e9caeb80</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2a94bec8a1f2c0d13fbf4f4819e1ed96</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a17c8bc23c0a7dbe675b7e1275fadfef1</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a1c98d0ce897f15e6b6c5ef8d10d22d53</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad817699382b8c9bf47d19c3ae865fd0e</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aaf6894f2dcb159a01735ad1cb6fc7d34</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a19d26a5edc55640da5c58a5a4ed7a8d6</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a475bda4b64da77476a706297fcb6d4b9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a9b38730f9ce4f96a130a7afff4168b02</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2e53c752d773cecc6ddf551b5c6b6af1</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a6f79ae61d6991bbcd36ee9d1b69a9212</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8ee6ca7c5158691939d043a5b32ab1e2</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a487adba60bad3ddabae7b8653b5cc4f9</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aae47920dad9d2888d5eafc51f948d086</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>abb829743cd40e55b42f36a3fc656aee5</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aae47920dad9d2888d5eafc51f948d086</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae35998cb2df288d299ca58eda994c4fb</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a955b02626216169c854c06e44741013f</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a07816bd6567396fc9233fac01e9aa012</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8e6c24ecd2e709290bdae5414cce82d1</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>afc77825df88309611a1fd3d7cc4312d3</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ab034483b270b85ae7d276b621d2129b7</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad5079868ae5d9dcab62036b14d504d66</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aec6dd70bca26d9453645ba48006c373a</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad89d689f58ad5c677ce2359f9af9baaa</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>acf1cd83deafeea15d8f06446a1aaf061</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4806748bd3b541d0535755914dd41bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a37797e8f3a59f106a390ab68e9caeb80</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2a94bec8a1f2c0d13fbf4f4819e1ed96</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a17c8bc23c0a7dbe675b7e1275fadfef1</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a1c98d0ce897f15e6b6c5ef8d10d22d53</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad817699382b8c9bf47d19c3ae865fd0e</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aaf6894f2dcb159a01735ad1cb6fc7d34</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a19d26a5edc55640da5c58a5a4ed7a8d6</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a475bda4b64da77476a706297fcb6d4b9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a9b38730f9ce4f96a130a7afff4168b02</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2e53c752d773cecc6ddf551b5c6b6af1</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a6f79ae61d6991bbcd36ee9d1b69a9212</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8ee6ca7c5158691939d043a5b32ab1e2</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a487adba60bad3ddabae7b8653b5cc4f9</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8b99436be54590b3c4ba1d0d53536cef</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>abb829743cd40e55b42f36a3fc656aee5</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8b99436be54590b3c4ba1d0d53536cef</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae35998cb2df288d299ca58eda994c4fb</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a955b02626216169c854c06e44741013f</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a07816bd6567396fc9233fac01e9aa012</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8e6c24ecd2e709290bdae5414cce82d1</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>afc77825df88309611a1fd3d7cc4312d3</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ab034483b270b85ae7d276b621d2129b7</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8812da617f356a557dbbf8a6f9a2193d</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aeff0229fc1a33011b4bb48388faea097</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aa36a48802b46bd9c8ae44cba364a5b0f</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4f9bf23f2fa7fdae545df419b74715be</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8a85c1fec0916addd098b1ee85048bbd</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4869f61611b10bb1fad4f6940a2e6916</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a45a481cdd93faba638ac97f0bc73dc8d</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a06ce5f1a3d351c97ea76f9290e4dcebc</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4806748bd3b541d0535755914dd41bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a37797e8f3a59f106a390ab68e9caeb80</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2a94bec8a1f2c0d13fbf4f4819e1ed96</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a17c8bc23c0a7dbe675b7e1275fadfef1</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a1c98d0ce897f15e6b6c5ef8d10d22d53</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad817699382b8c9bf47d19c3ae865fd0e</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aaf6894f2dcb159a01735ad1cb6fc7d34</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a19d26a5edc55640da5c58a5a4ed7a8d6</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a475bda4b64da77476a706297fcb6d4b9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a9b38730f9ce4f96a130a7afff4168b02</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2e53c752d773cecc6ddf551b5c6b6af1</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a6f79ae61d6991bbcd36ee9d1b69a9212</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8ee6ca7c5158691939d043a5b32ab1e2</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a487adba60bad3ddabae7b8653b5cc4f9</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8b99436be54590b3c4ba1d0d53536cef</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>abb829743cd40e55b42f36a3fc656aee5</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8b99436be54590b3c4ba1d0d53536cef</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae35998cb2df288d299ca58eda994c4fb</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a955b02626216169c854c06e44741013f</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a07816bd6567396fc9233fac01e9aa012</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8e6c24ecd2e709290bdae5414cce82d1</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>afc77825df88309611a1fd3d7cc4312d3</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ab034483b270b85ae7d276b621d2129b7</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8812da617f356a557dbbf8a6f9a2193d</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aeff0229fc1a33011b4bb48388faea097</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aa36a48802b46bd9c8ae44cba364a5b0f</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4f9bf23f2fa7fdae545df419b74715be</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8a85c1fec0916addd098b1ee85048bbd</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4869f61611b10bb1fad4f6940a2e6916</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a45a481cdd93faba638ac97f0bc73dc8d</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a06ce5f1a3d351c97ea76f9290e4dcebc</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4806748bd3b541d0535755914dd41bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a37797e8f3a59f106a390ab68e9caeb80</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2a94bec8a1f2c0d13fbf4f4819e1ed96</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a17c8bc23c0a7dbe675b7e1275fadfef1</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a1c98d0ce897f15e6b6c5ef8d10d22d53</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad817699382b8c9bf47d19c3ae865fd0e</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aaf6894f2dcb159a01735ad1cb6fc7d34</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a19d26a5edc55640da5c58a5a4ed7a8d6</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a475bda4b64da77476a706297fcb6d4b9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a9b38730f9ce4f96a130a7afff4168b02</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2e53c752d773cecc6ddf551b5c6b6af1</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a6f79ae61d6991bbcd36ee9d1b69a9212</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8ee6ca7c5158691939d043a5b32ab1e2</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a487adba60bad3ddabae7b8653b5cc4f9</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8b99436be54590b3c4ba1d0d53536cef</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>abb829743cd40e55b42f36a3fc656aee5</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8b99436be54590b3c4ba1d0d53536cef</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae35998cb2df288d299ca58eda994c4fb</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a955b02626216169c854c06e44741013f</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a07816bd6567396fc9233fac01e9aa012</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8e6c24ecd2e709290bdae5414cce82d1</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>afc77825df88309611a1fd3d7cc4312d3</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ab034483b270b85ae7d276b621d2129b7</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8812da617f356a557dbbf8a6f9a2193d</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aeff0229fc1a33011b4bb48388faea097</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aa36a48802b46bd9c8ae44cba364a5b0f</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4f9bf23f2fa7fdae545df419b74715be</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8a85c1fec0916addd098b1ee85048bbd</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4869f61611b10bb1fad4f6940a2e6916</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a45a481cdd93faba638ac97f0bc73dc8d</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a06ce5f1a3d351c97ea76f9290e4dcebc</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a4806748bd3b541d0535755914dd41bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a37797e8f3a59f106a390ab68e9caeb80</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2a94bec8a1f2c0d13fbf4f4819e1ed96</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a17c8bc23c0a7dbe675b7e1275fadfef1</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a1c98d0ce897f15e6b6c5ef8d10d22d53</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad817699382b8c9bf47d19c3ae865fd0e</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aaf6894f2dcb159a01735ad1cb6fc7d34</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a19d26a5edc55640da5c58a5a4ed7a8d6</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a475bda4b64da77476a706297fcb6d4b9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a9b38730f9ce4f96a130a7afff4168b02</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2e53c752d773cecc6ddf551b5c6b6af1</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a6f79ae61d6991bbcd36ee9d1b69a9212</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8ee6ca7c5158691939d043a5b32ab1e2</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a487adba60bad3ddabae7b8653b5cc4f9</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8b99436be54590b3c4ba1d0d53536cef</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>abb829743cd40e55b42f36a3fc656aee5</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8b99436be54590b3c4ba1d0d53536cef</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae35998cb2df288d299ca58eda994c4fb</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a955b02626216169c854c06e44741013f</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a07816bd6567396fc9233fac01e9aa012</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8e6c24ecd2e709290bdae5414cce82d1</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>afc77825df88309611a1fd3d7cc4312d3</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ab034483b270b85ae7d276b621d2129b7</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aa880be43c0c1f1522094a992e59c6c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const endpoint_type &amp;</type>
      <name>destination</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a9f615ec611c35cdd2d50665100979d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const endpoint_type socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a41b19a12ef18d7d759f90735cd237fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>endpoint_type &amp;</type>
      <name>sender_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8000812211ac72946c3443141b339f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>endpoint_type socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aa880be43c0c1f1522094a992e59c6c47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::basic_socket_acceptor_ext</name>
    <filename>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</filename>
    <templarg>typename Protocol</templarg>
    <templarg>typename SocketAcceptorService</templarg>
    <member kind="typedef">
      <type>SocketAcceptorService::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad04382cacf461e76efac1a7d673cc76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SocketAcceptorService::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a43df59d248953f0b16f5fca24505a6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa981a25008a4188d7a7d739f59da25d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acd3c7037a84c9bcd7baba26290e89f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>io_context::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a486a9bc307102a43cbf082fa71366707</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BOOST_ASIO_SVC_T::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa8ea18ac972fae71c9715399a123bd4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa981a25008a4188d7a7d739f59da25d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acd3c7037a84c9bcd7baba26290e89f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab21111f4dcfddb46c5c86fc315fbf925</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext_local&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a733c82f2b0323e7af8c6d763c004c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa981a25008a4188d7a7d739f59da25d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acd3c7037a84c9bcd7baba26290e89f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab21111f4dcfddb46c5c86fc315fbf925</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext_local&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a733c82f2b0323e7af8c6d763c004c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa981a25008a4188d7a7d739f59da25d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acd3c7037a84c9bcd7baba26290e89f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab21111f4dcfddb46c5c86fc315fbf925</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext_local&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a733c82f2b0323e7af8c6d763c004c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa981a25008a4188d7a7d739f59da25d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acd3c7037a84c9bcd7baba26290e89f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa805032d1656512f8fc0f25a9d7e6d35</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a57dc702ce6429fc437646c667727226e</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aaf99da30d73066a355a1e7560316b956</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const endpoint_type &amp;endpoint, bool reuse_addr=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a809609268fcbf92871851ce19f8e2d44</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab142e435249bdcae56b561bdec875f43</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a20f7bbafac3db473d2c2da57e407f4ef</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a88c9aad77fa21a1b231d24c281333261</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a0e3e006f42308e677a5d1821b7ceeec7</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1d0d300b7ecc8ab9bd9b29b24bd0f22f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5a142914d48f8b7ef1e191dc8d483452</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1aac4424889919467eb5bace9d8f2044</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a933e6fc25acb4f5ca02834b78fbc09fc</anchor>
      <arglist>(int backlog=socket_base::max_connections)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9489af3f713fd7e5d594af6779a4af3e</anchor>
      <arglist>(int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a924d9b44c645b57697f40b4c063f219e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a272c7d21217c96e39306a82d9401dfca</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_type</type>
      <name>native</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a25946755f0d2d617588b5d6d089f76d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad2864277f65427dbc1d19ded4fe0e8f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a018c9f68c05ee49299f4ca483955ad45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac7d0f3da96ddef7a799289a7850a9065</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aadf8f0a9c934988a4b0dba3b2cb1aeaa</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1060d6b238f5a35640986b920426d1f1</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acff77329fbebaebac4a98fa7f23feb38</anchor>
      <arglist>(GettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a2a857a4e43e8a71307fadc5514d063ee</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa331523861641a715ef7bdab6454b804</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a31e9058f90f0ac865370cff8dc744750</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af9b0e0c7a6ee763be10ec7b44a6889dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a137f962b730aef3f47c636f8bca3379c</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9a188fad6330b4234aa02fe3e609987a</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4675acb94056817ab8da1ebe6105d46f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ada33c82ad89584a5a97029be6a22af06</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a166a669ce650b6ba28411c9b71f3f93d</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a6d05ca8ef916facb10b76b52c80791fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a07f6440e9f7a5da7cdcc547566c9ea32</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1b0fc793990da2fb3730dba3e5138808</anchor>
      <arglist>(basic_socket&lt; Protocol1, SocketService &gt; &amp;peer, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab83924c6ce80f155f386309808ef13d1</anchor>
      <arglist>(basic_socket&lt; Protocol1, SocketService &gt; &amp;peer, boost::system::error_code &amp;ec, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9581c11d08dae34e6c19a63eb7d79350</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket&lt; Protocol1</arglist>
    </member>
    <member kind="function">
      <type>SocketService</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a46ff255018d79ec438849e8a24477c6e</anchor>
      <arglist>(AcceptHandler) handler</arglist>
    </member>
    <member kind="function">
      <type>SocketService enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler</type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad73777cc80df59ec1ddce3b028ed1952</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket&lt; protocol_type</arglist>
    </member>
    <member kind="function">
      <type>SocketService enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler SocketService endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a2c79bb9cd44760b0e35950dc3077edce</anchor>
      <arglist>(AcceptHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a7abf5dbc39f5ec132c2d3b60340eba40</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>add419ad09e5a18e5048b99e40e05f753</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1d3682149662806694631e91c79782cd</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const endpoint_type &amp;endpoint, bool reuse_addr=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9bab2bdc3be361f8edaa7445f21540fa</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a12a00d8686341e828d71547ec0894610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_context &amp;</type>
      <name>get_io_context</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acef68597009367c51816997fb3ba2a46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_context &amp;</type>
      <name>get_io_service</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9ed4490315c18d0b4c3c7a130642806e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3c15f9bcbf7deeb69fd50d3b48fbdd35</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab142e435249bdcae56b561bdec875f43</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4ce58ed5d529198f01effb16ce05f5da</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a88c9aad77fa21a1b231d24c281333261</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4632b6979710806ee30d3b15521425d4</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1d0d300b7ecc8ab9bd9b29b24bd0f22f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5a142914d48f8b7ef1e191dc8d483452</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac4520532e9a7f7e2f7c21618ec52c01b</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a012a08372458fd4bf61e844af5944fdc</anchor>
      <arglist>(int backlog=socket_base::max_listen_connections)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a48c8d328fe0a863536a727b8ee41b771</anchor>
      <arglist>(int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a924d9b44c645b57697f40b4c063f219e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a12203065f562eec95ffeb4310f5cc421</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3927906884af37240d1d958a3fb00824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a34ec05bc4900babf3dbc9f53caba3ac8</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad2864277f65427dbc1d19ded4fe0e8f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a018c9f68c05ee49299f4ca483955ad45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad447bbfe164ada44092c4a104f2e292a</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aadf8f0a9c934988a4b0dba3b2cb1aeaa</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a118cce70eae82bf3f24a6239506b35dc</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acff77329fbebaebac4a98fa7f23feb38</anchor>
      <arglist>(GettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1a4754ea8880cd2e916d96adf2362567</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa331523861641a715ef7bdab6454b804</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3434cacf65370ecd6b39fefec9ddc727</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af9b0e0c7a6ee763be10ec7b44a6889dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a137f962b730aef3f47c636f8bca3379c</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a080ad0f13582103196c2a0481be1ebac</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4675acb94056817ab8da1ebe6105d46f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ada33c82ad89584a5a97029be6a22af06</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a99c9371791c77857ef4d0b79326e5ba6</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a6d05ca8ef916facb10b76b52c80791fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a07f6440e9f7a5da7cdcc547566c9ea32</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a939f5aced583b4243bb5a7e86c2a155d</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af2ca78fa272931c6555f471cd4026e75</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aef67345b39241e8030bb1c49edc9270b</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a7e317e16b5ce6fd7718eb1754b27dba1</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a63cfa3abcc81eb70244751c81c262323</anchor>
      <arglist>(basic_socket_ext_local&lt; Protocol1 &gt; &amp;peer, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab76dd9dc891e60e072ae742a96cbe399</anchor>
      <arglist>(basic_socket_ext_local&lt; Protocol1 &gt; &amp;peer, boost::system::error_code &amp;ec, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab3ce2d87b4429e28d2dcb4ce1f47b539</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket_ext_local&lt; Protocol1 &gt; &amp;peer</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab6a198131b4317470c298402336389df</anchor>
      <arglist>(AcceptHandler) handler</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a0f2ee957eaac2d3db5ce42c05dac1565</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5cba5894cf11210a73ec125d1ab9ad04</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab50b071120e5c24d1dd198bfff191a85</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab71771a5c1efd607905071939b0d85a2</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a51855a594902d7a9f3f2258caa2f541d</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint, bool reuse_addr=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aac1a4fdcce799bfd9533b9293c247783</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, bool reuse_addr=true, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3b53450b0799081291e0aebfaa58ad40</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a04a64a15d5ff9628a06fdb4a4087507b</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a12a00d8686341e828d71547ec0894610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3c15f9bcbf7deeb69fd50d3b48fbdd35</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab142e435249bdcae56b561bdec875f43</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4ce58ed5d529198f01effb16ce05f5da</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a88c9aad77fa21a1b231d24c281333261</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4632b6979710806ee30d3b15521425d4</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1d0d300b7ecc8ab9bd9b29b24bd0f22f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5a142914d48f8b7ef1e191dc8d483452</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac4520532e9a7f7e2f7c21618ec52c01b</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a012a08372458fd4bf61e844af5944fdc</anchor>
      <arglist>(int backlog=socket_base::max_listen_connections)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a48c8d328fe0a863536a727b8ee41b771</anchor>
      <arglist>(int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a924d9b44c645b57697f40b4c063f219e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a12203065f562eec95ffeb4310f5cc421</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3927906884af37240d1d958a3fb00824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a34ec05bc4900babf3dbc9f53caba3ac8</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad2864277f65427dbc1d19ded4fe0e8f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a018c9f68c05ee49299f4ca483955ad45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad447bbfe164ada44092c4a104f2e292a</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aadf8f0a9c934988a4b0dba3b2cb1aeaa</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a118cce70eae82bf3f24a6239506b35dc</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a36a75de2355b20a79364fd65e72639f8</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a678cd5c1a409aa15d4afbffbbb38b7b2</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa331523861641a715ef7bdab6454b804</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3434cacf65370ecd6b39fefec9ddc727</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af9b0e0c7a6ee763be10ec7b44a6889dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a137f962b730aef3f47c636f8bca3379c</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a080ad0f13582103196c2a0481be1ebac</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4675acb94056817ab8da1ebe6105d46f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ada33c82ad89584a5a97029be6a22af06</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a99c9371791c77857ef4d0b79326e5ba6</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a6d05ca8ef916facb10b76b52c80791fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a07f6440e9f7a5da7cdcc547566c9ea32</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a939f5aced583b4243bb5a7e86c2a155d</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af2ca78fa272931c6555f471cd4026e75</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aef67345b39241e8030bb1c49edc9270b</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a7e317e16b5ce6fd7718eb1754b27dba1</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac06cf169c01c2b89b2e230ea8c27266a</anchor>
      <arglist>(basic_socket_ext_local&lt; Protocol1, Executor1 &gt; &amp;peer, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a946bf763f550ae82e6761836002c6902</anchor>
      <arglist>(basic_socket_ext_local&lt; Protocol1, Executor1 &gt; &amp;peer, boost::system::error_code &amp;ec, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a8c3086ddefb25abb1937c256912847de</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket_ext_local&lt; Protocol1</arglist>
    </member>
    <member kind="function">
      <type>Executor1</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab73863acc71501eb8ad93c7b198cd043</anchor>
      <arglist>(AcceptHandler) handler</arglist>
    </member>
    <member kind="function">
      <type>Executor1 enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler</type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af0eb2b04cf8d9eb3a452e53176105a4a</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket_ext_local&lt; protocol_type</arglist>
    </member>
    <member kind="function">
      <type>Executor1 enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler Executor1 endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9471e3a3d9eba43e6055e77e6cc15531</anchor>
      <arglist>(AcceptHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a0f2ee957eaac2d3db5ce42c05dac1565</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5cba5894cf11210a73ec125d1ab9ad04</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab50b071120e5c24d1dd198bfff191a85</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab71771a5c1efd607905071939b0d85a2</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a51855a594902d7a9f3f2258caa2f541d</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint, bool reuse_addr=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aac1a4fdcce799bfd9533b9293c247783</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, bool reuse_addr=true, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3b53450b0799081291e0aebfaa58ad40</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a04a64a15d5ff9628a06fdb4a4087507b</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a12a00d8686341e828d71547ec0894610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3c15f9bcbf7deeb69fd50d3b48fbdd35</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab142e435249bdcae56b561bdec875f43</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4ce58ed5d529198f01effb16ce05f5da</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a88c9aad77fa21a1b231d24c281333261</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4632b6979710806ee30d3b15521425d4</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1d0d300b7ecc8ab9bd9b29b24bd0f22f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5a142914d48f8b7ef1e191dc8d483452</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac4520532e9a7f7e2f7c21618ec52c01b</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a012a08372458fd4bf61e844af5944fdc</anchor>
      <arglist>(int backlog=socket_base::max_listen_connections)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a48c8d328fe0a863536a727b8ee41b771</anchor>
      <arglist>(int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a924d9b44c645b57697f40b4c063f219e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a12203065f562eec95ffeb4310f5cc421</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3927906884af37240d1d958a3fb00824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a34ec05bc4900babf3dbc9f53caba3ac8</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad2864277f65427dbc1d19ded4fe0e8f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a018c9f68c05ee49299f4ca483955ad45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad447bbfe164ada44092c4a104f2e292a</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aadf8f0a9c934988a4b0dba3b2cb1aeaa</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a118cce70eae82bf3f24a6239506b35dc</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a36a75de2355b20a79364fd65e72639f8</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a678cd5c1a409aa15d4afbffbbb38b7b2</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa331523861641a715ef7bdab6454b804</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3434cacf65370ecd6b39fefec9ddc727</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af9b0e0c7a6ee763be10ec7b44a6889dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a137f962b730aef3f47c636f8bca3379c</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a080ad0f13582103196c2a0481be1ebac</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4675acb94056817ab8da1ebe6105d46f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ada33c82ad89584a5a97029be6a22af06</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a99c9371791c77857ef4d0b79326e5ba6</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a6d05ca8ef916facb10b76b52c80791fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a07f6440e9f7a5da7cdcc547566c9ea32</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a939f5aced583b4243bb5a7e86c2a155d</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af2ca78fa272931c6555f471cd4026e75</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aef67345b39241e8030bb1c49edc9270b</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a7e317e16b5ce6fd7718eb1754b27dba1</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac06cf169c01c2b89b2e230ea8c27266a</anchor>
      <arglist>(basic_socket_ext_local&lt; Protocol1, Executor1 &gt; &amp;peer, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a946bf763f550ae82e6761836002c6902</anchor>
      <arglist>(basic_socket_ext_local&lt; Protocol1, Executor1 &gt; &amp;peer, boost::system::error_code &amp;ec, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a8c3086ddefb25abb1937c256912847de</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket_ext_local&lt; Protocol1</arglist>
    </member>
    <member kind="function">
      <type>Executor1</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab73863acc71501eb8ad93c7b198cd043</anchor>
      <arglist>(AcceptHandler) handler</arglist>
    </member>
    <member kind="function">
      <type>Executor1 enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler</type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af0eb2b04cf8d9eb3a452e53176105a4a</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket_ext_local&lt; protocol_type</arglist>
    </member>
    <member kind="function">
      <type>Executor1 enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler Executor1 endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9471e3a3d9eba43e6055e77e6cc15531</anchor>
      <arglist>(AcceptHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a0f2ee957eaac2d3db5ce42c05dac1565</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5cba5894cf11210a73ec125d1ab9ad04</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab50b071120e5c24d1dd198bfff191a85</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab71771a5c1efd607905071939b0d85a2</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a51855a594902d7a9f3f2258caa2f541d</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint, bool reuse_addr=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aac1a4fdcce799bfd9533b9293c247783</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, bool reuse_addr=true, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3b53450b0799081291e0aebfaa58ad40</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a04a64a15d5ff9628a06fdb4a4087507b</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a12a00d8686341e828d71547ec0894610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3c15f9bcbf7deeb69fd50d3b48fbdd35</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab142e435249bdcae56b561bdec875f43</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4ce58ed5d529198f01effb16ce05f5da</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a88c9aad77fa21a1b231d24c281333261</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4632b6979710806ee30d3b15521425d4</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1d0d300b7ecc8ab9bd9b29b24bd0f22f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5a142914d48f8b7ef1e191dc8d483452</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac4520532e9a7f7e2f7c21618ec52c01b</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a012a08372458fd4bf61e844af5944fdc</anchor>
      <arglist>(int backlog=socket_base::max_listen_connections)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a48c8d328fe0a863536a727b8ee41b771</anchor>
      <arglist>(int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a924d9b44c645b57697f40b4c063f219e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a12203065f562eec95ffeb4310f5cc421</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3927906884af37240d1d958a3fb00824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a34ec05bc4900babf3dbc9f53caba3ac8</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad2864277f65427dbc1d19ded4fe0e8f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a018c9f68c05ee49299f4ca483955ad45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad447bbfe164ada44092c4a104f2e292a</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aadf8f0a9c934988a4b0dba3b2cb1aeaa</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a118cce70eae82bf3f24a6239506b35dc</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a36a75de2355b20a79364fd65e72639f8</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a678cd5c1a409aa15d4afbffbbb38b7b2</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa331523861641a715ef7bdab6454b804</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a3434cacf65370ecd6b39fefec9ddc727</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af9b0e0c7a6ee763be10ec7b44a6889dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a137f962b730aef3f47c636f8bca3379c</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a080ad0f13582103196c2a0481be1ebac</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4675acb94056817ab8da1ebe6105d46f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ada33c82ad89584a5a97029be6a22af06</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a99c9371791c77857ef4d0b79326e5ba6</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a6d05ca8ef916facb10b76b52c80791fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a07f6440e9f7a5da7cdcc547566c9ea32</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a939f5aced583b4243bb5a7e86c2a155d</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af2ca78fa272931c6555f471cd4026e75</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aef67345b39241e8030bb1c49edc9270b</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a7e317e16b5ce6fd7718eb1754b27dba1</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac06cf169c01c2b89b2e230ea8c27266a</anchor>
      <arglist>(basic_socket_ext_local&lt; Protocol1, Executor1 &gt; &amp;peer, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a946bf763f550ae82e6761836002c6902</anchor>
      <arglist>(basic_socket_ext_local&lt; Protocol1, Executor1 &gt; &amp;peer, boost::system::error_code &amp;ec, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a8c3086ddefb25abb1937c256912847de</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket_ext_local&lt; Protocol1</arglist>
    </member>
    <member kind="function">
      <type>Executor1</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab73863acc71501eb8ad93c7b198cd043</anchor>
      <arglist>(AcceptHandler) handler</arglist>
    </member>
    <member kind="function">
      <type>Executor1 enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler</type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af0eb2b04cf8d9eb3a452e53176105a4a</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket_ext_local&lt; protocol_type</arglist>
    </member>
    <member kind="function">
      <type>Executor1 enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler Executor1 endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9471e3a3d9eba43e6055e77e6cc15531</anchor>
      <arglist>(AcceptHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>SocketService &amp;</type>
      <name>peer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a367e6c40a50ec1cf4776c58fb8a7a2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SocketService enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler SocketService &amp;</type>
      <name>peer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acad73ba6ea2b7464851dea8427b73331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SocketService enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler SocketService endpoint_type &amp;</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a35f182dc7848fa7abd84b015b98a16b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Executor1 &amp;</type>
      <name>peer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a2393b9c608314d84b2422fc9cd81e568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Executor1 enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler Executor1 &amp;</type>
      <name>peer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a7f9fb14df9de5ebe1943a8efd83bcde3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Executor1 enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler Executor1 endpoint_type &amp;</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a68853783df70a6efe71e2e502ea799a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::basic_socket_ext</name>
    <filename>classboost_1_1asio_1_1basic__socket__ext.html</filename>
    <templarg>typename Protocol BOOST_ASIO_SVC_TPARAM</templarg>
    <class kind="struct">boost::asio::basic_socket_ext::rebind_executor</class>
    <member kind="typedef">
      <type>io_context::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a42d4321011c94952dcbc675ed7360870</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BOOST_ASIO_SVC_T::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a7745ea4769db54c740f43a0c6a17dec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5989efa6b723759fc9c2f1597d2dfa7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aab9a01a2659abf8a5acafa431763772d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol BOOST_ASIO_SVC_TARG &gt;</type>
      <name>lowest_layer_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a9a96cb52d5b515905dd6ef052134209e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a4c93e86433026ca37402a17ea580f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab0872e36afce4710f2709a2b5151e597</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5989efa6b723759fc9c2f1597d2dfa7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aab9a01a2659abf8a5acafa431763772d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor &gt;</type>
      <name>lowest_layer_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab335d2eeee25424657e91a7fb4f58ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a4c93e86433026ca37402a17ea580f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab0872e36afce4710f2709a2b5151e597</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5989efa6b723759fc9c2f1597d2dfa7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aab9a01a2659abf8a5acafa431763772d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor &gt;</type>
      <name>lowest_layer_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab335d2eeee25424657e91a7fb4f58ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a4c93e86433026ca37402a17ea580f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab0872e36afce4710f2709a2b5151e597</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5989efa6b723759fc9c2f1597d2dfa7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aab9a01a2659abf8a5acafa431763772d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor &gt;</type>
      <name>lowest_layer_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab335d2eeee25424657e91a7fb4f58ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>adeb1298a522bb63512a2b802b3e1907e</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a2b500569fe6f8405ad6201592072b898</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a819d7360312f50f77288f45d9f746ec5</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a9a5ab4ee51d3c93e8cc67cbd55fc8f55</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_context &amp;</type>
      <name>get_io_context</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afb81a8ec76021ed1c1e443bf373f628b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_context &amp;</type>
      <name>get_io_service</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af968f55f9111335061353ee3ba2c7f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a95ac2e0a04f3d9093085c831cd1b2e89</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a1f770d36ec3d719d3336670bdb2183e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac26ce5761a57a4179b98858b7853623c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a26576c8e6d36e76747d1b780b6196b37</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5b206ea012bc0a77a9c71d139699083f</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac6535d1b89c7b1c5492be594a72e22d8</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a3d8a2175a4afbdcbd5ded9041e1fb15d</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a69fb6eacd32dd56f928e3e90e6bb7b24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afdce8530339e4ec98dd5120510282204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af919511c29149305b1ab24e920458733</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a227b2204377ed42af6a9a6f4ca413a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aea481ad3c0b5ec252c560aa032a20a67</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a2255ad070b1a41ea9e98634a6b2c4df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a52a83976853db16f08ba074b926b3bcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a911721f6fec972f23a31190c4cec228c</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a1f99ae2d36c9827b09eb8e002240be70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad1608bd9a1e1b878fb54e7604247d3ea</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a130284ccf15b2dcc67b17bdbb23f9de1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a892c95c3645a159f94e133431317e416</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a25cf567fa998b998bd2982c079a4cdba</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6849b1ba5787b8a8c8558b193480a7e9</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a48b82003a1cae324ecedeff6faeee217</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0cdf6919cf1d64a43123ffd301872bfa</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a4995b5fb481520b3d7b312da5e04b2a9</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(const endpoint_type &amp;peer_endpoint</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a07690df72c82afeca1e1da0293bce840</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa8a7300fb93369d191e10c30e9910cb7</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aec41185f85b3ead8586d4158ab4784d1</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6ce9d93dad74f9d8c3754105616b8c61</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0abb98d4a8856876cad0eb2cf2420799</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac1b9c5f9b19f0f415e51cef3360953c8</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a40f422520c4bd3f9e41bfa576c5050dc</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5583879f72ebbabf7cba6db1d53e05b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab8cb97246819ca03b004303a36215a22</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af847fa0d78fc4c63edfe85e0da0fa416</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ae13f6bf25a6ecc6a12a1ece32c0c5155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6ab2d02c9fe5c70adc0cd64acee0c505</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a440a334c97758148d69593027ee086a0</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa16392c0e6de7bc65b64ad518e336af0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aae0331784d0776292184d63e87693784</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afe814bdd7411657702a1b53e833b456a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac098a6653e8f75b97ac5d43b13032db9</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a3b63df8c121779b9397f34ba04666a36</anchor>
      <arglist>(shutdown_type what)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab8299c1f15b32b3f43882eb00aa7ba57</anchor>
      <arglist>(shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0fe4c776eafd6ae48e36cc1a39f46f86</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa47272c53e40f0a466ec2901d078f054</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa57721ab2c488aec20ebf45e4c33bb4b</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>adace1cef903348394af07dbd8b3a58a7</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af688355eaa54b356b7ab8df9ba52368f</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad64332a2fed132f8536f361b8130f44f</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ada058fd47609108e17ee9907395acf56</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad09fd4866cf6478e742bd45f29d9257d</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a9fec3d3599818343f3890e238a8ca360</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0e636c02cf8c050c1814ea0061271547</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a57bbe46f4d81495748834603adcfc37c</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a01b33aa241e122e3df6a53783effe266</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a95ac2e0a04f3d9093085c831cd1b2e89</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a1f770d36ec3d719d3336670bdb2183e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac26ce5761a57a4179b98858b7853623c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a26576c8e6d36e76747d1b780b6196b37</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5b206ea012bc0a77a9c71d139699083f</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac6535d1b89c7b1c5492be594a72e22d8</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a3d8a2175a4afbdcbd5ded9041e1fb15d</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a69fb6eacd32dd56f928e3e90e6bb7b24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afdce8530339e4ec98dd5120510282204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af919511c29149305b1ab24e920458733</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a227b2204377ed42af6a9a6f4ca413a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aea481ad3c0b5ec252c560aa032a20a67</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a2255ad070b1a41ea9e98634a6b2c4df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a52a83976853db16f08ba074b926b3bcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a911721f6fec972f23a31190c4cec228c</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a1f99ae2d36c9827b09eb8e002240be70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad1608bd9a1e1b878fb54e7604247d3ea</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a130284ccf15b2dcc67b17bdbb23f9de1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a892c95c3645a159f94e133431317e416</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a25cf567fa998b998bd2982c079a4cdba</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6849b1ba5787b8a8c8558b193480a7e9</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a48b82003a1cae324ecedeff6faeee217</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0cdf6919cf1d64a43123ffd301872bfa</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a4995b5fb481520b3d7b312da5e04b2a9</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(const endpoint_type &amp;peer_endpoint</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a07690df72c82afeca1e1da0293bce840</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa8a7300fb93369d191e10c30e9910cb7</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aec41185f85b3ead8586d4158ab4784d1</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6ce9d93dad74f9d8c3754105616b8c61</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0abb98d4a8856876cad0eb2cf2420799</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac1b9c5f9b19f0f415e51cef3360953c8</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a40f422520c4bd3f9e41bfa576c5050dc</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5583879f72ebbabf7cba6db1d53e05b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab8cb97246819ca03b004303a36215a22</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af847fa0d78fc4c63edfe85e0da0fa416</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ae13f6bf25a6ecc6a12a1ece32c0c5155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6ab2d02c9fe5c70adc0cd64acee0c505</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a440a334c97758148d69593027ee086a0</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa16392c0e6de7bc65b64ad518e336af0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aae0331784d0776292184d63e87693784</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afe814bdd7411657702a1b53e833b456a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac098a6653e8f75b97ac5d43b13032db9</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a3b63df8c121779b9397f34ba04666a36</anchor>
      <arglist>(shutdown_type what)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab8299c1f15b32b3f43882eb00aa7ba57</anchor>
      <arglist>(shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0fe4c776eafd6ae48e36cc1a39f46f86</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa47272c53e40f0a466ec2901d078f054</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa57721ab2c488aec20ebf45e4c33bb4b</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>adace1cef903348394af07dbd8b3a58a7</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af688355eaa54b356b7ab8df9ba52368f</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad64332a2fed132f8536f361b8130f44f</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ada058fd47609108e17ee9907395acf56</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad09fd4866cf6478e742bd45f29d9257d</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a9fec3d3599818343f3890e238a8ca360</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0e636c02cf8c050c1814ea0061271547</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a57bbe46f4d81495748834603adcfc37c</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a01b33aa241e122e3df6a53783effe266</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a95ac2e0a04f3d9093085c831cd1b2e89</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a1f770d36ec3d719d3336670bdb2183e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac26ce5761a57a4179b98858b7853623c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a26576c8e6d36e76747d1b780b6196b37</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5b206ea012bc0a77a9c71d139699083f</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac6535d1b89c7b1c5492be594a72e22d8</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a3d8a2175a4afbdcbd5ded9041e1fb15d</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a69fb6eacd32dd56f928e3e90e6bb7b24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afdce8530339e4ec98dd5120510282204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af919511c29149305b1ab24e920458733</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a227b2204377ed42af6a9a6f4ca413a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aea481ad3c0b5ec252c560aa032a20a67</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a2255ad070b1a41ea9e98634a6b2c4df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a52a83976853db16f08ba074b926b3bcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a911721f6fec972f23a31190c4cec228c</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a1f99ae2d36c9827b09eb8e002240be70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad1608bd9a1e1b878fb54e7604247d3ea</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a130284ccf15b2dcc67b17bdbb23f9de1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a892c95c3645a159f94e133431317e416</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a25cf567fa998b998bd2982c079a4cdba</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6849b1ba5787b8a8c8558b193480a7e9</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a48b82003a1cae324ecedeff6faeee217</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0cdf6919cf1d64a43123ffd301872bfa</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a4995b5fb481520b3d7b312da5e04b2a9</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(const endpoint_type &amp;peer_endpoint</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a07690df72c82afeca1e1da0293bce840</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa8a7300fb93369d191e10c30e9910cb7</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aec41185f85b3ead8586d4158ab4784d1</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6ce9d93dad74f9d8c3754105616b8c61</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0abb98d4a8856876cad0eb2cf2420799</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac1b9c5f9b19f0f415e51cef3360953c8</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a40f422520c4bd3f9e41bfa576c5050dc</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5583879f72ebbabf7cba6db1d53e05b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab8cb97246819ca03b004303a36215a22</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af847fa0d78fc4c63edfe85e0da0fa416</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ae13f6bf25a6ecc6a12a1ece32c0c5155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6ab2d02c9fe5c70adc0cd64acee0c505</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a440a334c97758148d69593027ee086a0</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa16392c0e6de7bc65b64ad518e336af0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aae0331784d0776292184d63e87693784</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afe814bdd7411657702a1b53e833b456a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac098a6653e8f75b97ac5d43b13032db9</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a3b63df8c121779b9397f34ba04666a36</anchor>
      <arglist>(shutdown_type what)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab8299c1f15b32b3f43882eb00aa7ba57</anchor>
      <arglist>(shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0fe4c776eafd6ae48e36cc1a39f46f86</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa47272c53e40f0a466ec2901d078f054</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa57721ab2c488aec20ebf45e4c33bb4b</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>adace1cef903348394af07dbd8b3a58a7</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af688355eaa54b356b7ab8df9ba52368f</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad64332a2fed132f8536f361b8130f44f</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ada058fd47609108e17ee9907395acf56</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad09fd4866cf6478e742bd45f29d9257d</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a9fec3d3599818343f3890e238a8ca360</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0e636c02cf8c050c1814ea0061271547</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a57bbe46f4d81495748834603adcfc37c</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a01b33aa241e122e3df6a53783effe266</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a95ac2e0a04f3d9093085c831cd1b2e89</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a1f770d36ec3d719d3336670bdb2183e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac26ce5761a57a4179b98858b7853623c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a26576c8e6d36e76747d1b780b6196b37</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5b206ea012bc0a77a9c71d139699083f</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac6535d1b89c7b1c5492be594a72e22d8</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a3d8a2175a4afbdcbd5ded9041e1fb15d</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a69fb6eacd32dd56f928e3e90e6bb7b24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afdce8530339e4ec98dd5120510282204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af919511c29149305b1ab24e920458733</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a227b2204377ed42af6a9a6f4ca413a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aea481ad3c0b5ec252c560aa032a20a67</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a2255ad070b1a41ea9e98634a6b2c4df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a52a83976853db16f08ba074b926b3bcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a911721f6fec972f23a31190c4cec228c</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a1f99ae2d36c9827b09eb8e002240be70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ad1608bd9a1e1b878fb54e7604247d3ea</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a130284ccf15b2dcc67b17bdbb23f9de1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a892c95c3645a159f94e133431317e416</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a25cf567fa998b998bd2982c079a4cdba</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6849b1ba5787b8a8c8558b193480a7e9</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a48b82003a1cae324ecedeff6faeee217</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0cdf6919cf1d64a43123ffd301872bfa</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a4995b5fb481520b3d7b312da5e04b2a9</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(const endpoint_type &amp;peer_endpoint</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a07690df72c82afeca1e1da0293bce840</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa8a7300fb93369d191e10c30e9910cb7</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aec41185f85b3ead8586d4158ab4784d1</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6ce9d93dad74f9d8c3754105616b8c61</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0abb98d4a8856876cad0eb2cf2420799</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac1b9c5f9b19f0f415e51cef3360953c8</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a40f422520c4bd3f9e41bfa576c5050dc</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a5583879f72ebbabf7cba6db1d53e05b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab8cb97246819ca03b004303a36215a22</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>af847fa0d78fc4c63edfe85e0da0fa416</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ae13f6bf25a6ecc6a12a1ece32c0c5155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a6ab2d02c9fe5c70adc0cd64acee0c505</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a440a334c97758148d69593027ee086a0</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa16392c0e6de7bc65b64ad518e336af0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aae0331784d0776292184d63e87693784</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>afe814bdd7411657702a1b53e833b456a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ac098a6653e8f75b97ac5d43b13032db9</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a3b63df8c121779b9397f34ba04666a36</anchor>
      <arglist>(shutdown_type what)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>ab8299c1f15b32b3f43882eb00aa7ba57</anchor>
      <arglist>(shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a0fe4c776eafd6ae48e36cc1a39f46f86</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa47272c53e40f0a466ec2901d078f054</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>aa57721ab2c488aec20ebf45e4c33bb4b</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>adace1cef903348394af07dbd8b3a58a7</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>acb7f7e5308f6ea5f4da78aa573f97b7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>acb7f7e5308f6ea5f4da78aa573f97b7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>acb7f7e5308f6ea5f4da78aa573f97b7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~basic_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>acb7f7e5308f6ea5f4da78aa573f97b7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>detail::io_object_impl&lt; detail::reactive_socket_service_ext&lt; Protocol &gt;, Executor &gt;</type>
      <name>impl_</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext.html</anchorfile>
      <anchor>a85ac7721870f90e9de4f0fcd2b8e6c44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::basic_socket_ext_local</name>
    <filename>classboost_1_1asio_1_1basic__socket__ext__local.html</filename>
    <templarg>typename Protocol BOOST_ASIO_SVC_TPARAM</templarg>
    <class kind="struct">boost::asio::basic_socket_ext_local::rebind_executor</class>
    <member kind="typedef">
      <type>io_context::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a5b78aaa00c1ac33c9a4bc6d98666ef14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BOOST_ASIO_SVC_T::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a5c9ef13345ce33d0bae8f7a2bbab4583</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aefef9775e35a53f7d6c4405bdec91712</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abc45eb59680c1c7e8f3856d5a50b12d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext_local&lt; Protocol BOOST_ASIO_SVC_TARG &gt;</type>
      <name>lowest_layer_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a548f87cb2341e142b5035597ed9d278b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a014b099e16c6da99bb1c7284da8b0ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext_local&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abacc61088c519d5019460cd3f23bddb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aefef9775e35a53f7d6c4405bdec91712</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abc45eb59680c1c7e8f3856d5a50b12d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext_local&lt; Protocol, Executor &gt;</type>
      <name>lowest_layer_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8f39cdfd85906c544c0fb8dc127606da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a014b099e16c6da99bb1c7284da8b0ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext_local&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abacc61088c519d5019460cd3f23bddb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aefef9775e35a53f7d6c4405bdec91712</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abc45eb59680c1c7e8f3856d5a50b12d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext_local&lt; Protocol, Executor &gt;</type>
      <name>lowest_layer_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8f39cdfd85906c544c0fb8dc127606da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a014b099e16c6da99bb1c7284da8b0ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::reactive_socket_service_ext_local&lt; Protocol &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abacc61088c519d5019460cd3f23bddb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aefef9775e35a53f7d6c4405bdec91712</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abc45eb59680c1c7e8f3856d5a50b12d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext_local&lt; Protocol, Executor &gt;</type>
      <name>lowest_layer_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8f39cdfd85906c544c0fb8dc127606da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>affe0879248575b78bd678b902a4305c3</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a424f7a2a095505f900511ef9a4c613cc</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac16f8b843dc6033187e8b3a692001db7</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8dbf74f3d097912774ee5bca6d0736b6</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_context &amp;</type>
      <name>get_io_context</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>acf443f056738004dfdbd8b9f23b14871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_context &amp;</type>
      <name>get_io_service</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a80c279f850e42812c6a7cec897536b11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa673ac433f70141c1a7a075428a663ba</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a709c09672f1a328cba705ea7e1b01361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0df6e843393758b11ae4570f224f82bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>adc8ed3d33afa6b3b3ec3e0b0bd5350e7</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ab40762c7f51029f44ce71931f1ed2458</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a942fef7e713c9b54655098ab4bacf5eb</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a75e5f00ba99a6efdaf01146b82b9c5bf</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a5a3b96c0e465108c13353c79484c6443</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a4de284602bd07821dd092cb3f825432a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a4163535703f4773911a20cfaee8667db</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa5a962d293882b17da9354a46ce42e5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a588935779508b0b40e3f6a96bb7f86c2</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abba5586e290abfecc262f38d4fa06365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a19655cdb68728ae4746026861c68a92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a3ea50db9317b3d7d619e3922446eacd5</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac20c3bc5a08f6860b2f246c25d7e2339</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a9d6501c308394dd4c3697c3d042144a8</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a7c7464b873b6fc9f6dcc659809ae8587</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aea2d6eb962b507c4360e302608ccc39f</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a20769eafa212c5474b65fa72b02802c3</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a235591994c2d21a537e38aa01f110d63</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>af1275dcb68c2e22780c5961cd0961b27</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a23eba8793a8626347070624ad843bc20</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a09e484496cd7109331d69224ce2d386b</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(const endpoint_type &amp;peer_endpoint</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a75d85fbd85e1bae43b259bb314787edf</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa3d2a06c927a3e5318a94c5db3414c52</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a6a4ba65997b0e731be2532485db524aa</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a9c8acaa0e0d51968b502428a32da1de4</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a73f7d6c272aefdbc531bdde6921de3f6</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac2e4dc0830791b243d4ed6e01305d5ac</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>adbb26359d41c49515ed620b3b0607c85</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a41229674870d7dff87f3c9fef20cf3b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a2ce8dd387186bf33f75a543b993bcb62</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a95879b41e8e34075b3327e4470a5bd98</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a38b8eece1938966a01e1d33b6e131edc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0120a98607fb1d7a69d984b81b03bea6</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a60a335e4140aebea19184efa79763a2a</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0a6d05937727004595103dac285a9e02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a7bb869a266862e1a5a8f7795c6105b22</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a769e7f92e134d9c6543076172e7ffa6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a1cd6fab1f5e9c3bde017a4afd7b9b515</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>acf706b8233e50f4484b4e88b15e25b72</anchor>
      <arglist>(shutdown_type what)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac5a838cf7c9b047d5d5c24d93c6e198e</anchor>
      <arglist>(shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a749e65c52cdbbcebc6145b2c999a4fd3</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>af0b68c11bf65567c60bb42bbab88e663</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a84f098c94a86d0d53a180c296582dc48</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ad43949043f36bc9016c00558e2e870fa</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ad3aa97207f2563a9fcbd0be36d39fbd1</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a25e9dad6eefe1df26e8dfff27efacd40</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>addfaf7c8e7e3641570da3eec05094015</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8edc772c8b8ab5ae00cbc07c0bb3f47a</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0825dd39b893b1ba7adc0662fa48eb08</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a1b7c538991e67952eb6b9365c0dbf56c</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a48820432940e575d793e53f3033d006e</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8b504a8e6ee547014ab0d40c7d33da16</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa673ac433f70141c1a7a075428a663ba</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a709c09672f1a328cba705ea7e1b01361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0df6e843393758b11ae4570f224f82bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>adc8ed3d33afa6b3b3ec3e0b0bd5350e7</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ab40762c7f51029f44ce71931f1ed2458</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a942fef7e713c9b54655098ab4bacf5eb</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a75e5f00ba99a6efdaf01146b82b9c5bf</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a5a3b96c0e465108c13353c79484c6443</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a4de284602bd07821dd092cb3f825432a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a4163535703f4773911a20cfaee8667db</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa5a962d293882b17da9354a46ce42e5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a588935779508b0b40e3f6a96bb7f86c2</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abba5586e290abfecc262f38d4fa06365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a19655cdb68728ae4746026861c68a92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a3ea50db9317b3d7d619e3922446eacd5</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac20c3bc5a08f6860b2f246c25d7e2339</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a9d6501c308394dd4c3697c3d042144a8</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a7c7464b873b6fc9f6dcc659809ae8587</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aea2d6eb962b507c4360e302608ccc39f</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a20769eafa212c5474b65fa72b02802c3</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a235591994c2d21a537e38aa01f110d63</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>af1275dcb68c2e22780c5961cd0961b27</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a23eba8793a8626347070624ad843bc20</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a09e484496cd7109331d69224ce2d386b</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(const endpoint_type &amp;peer_endpoint</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a75d85fbd85e1bae43b259bb314787edf</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa3d2a06c927a3e5318a94c5db3414c52</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a6a4ba65997b0e731be2532485db524aa</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a9c8acaa0e0d51968b502428a32da1de4</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a73f7d6c272aefdbc531bdde6921de3f6</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac2e4dc0830791b243d4ed6e01305d5ac</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>adbb26359d41c49515ed620b3b0607c85</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a41229674870d7dff87f3c9fef20cf3b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a2ce8dd387186bf33f75a543b993bcb62</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a95879b41e8e34075b3327e4470a5bd98</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a38b8eece1938966a01e1d33b6e131edc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0120a98607fb1d7a69d984b81b03bea6</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a60a335e4140aebea19184efa79763a2a</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0a6d05937727004595103dac285a9e02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a7bb869a266862e1a5a8f7795c6105b22</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a769e7f92e134d9c6543076172e7ffa6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a1cd6fab1f5e9c3bde017a4afd7b9b515</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>acf706b8233e50f4484b4e88b15e25b72</anchor>
      <arglist>(shutdown_type what)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac5a838cf7c9b047d5d5c24d93c6e198e</anchor>
      <arglist>(shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a749e65c52cdbbcebc6145b2c999a4fd3</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>af0b68c11bf65567c60bb42bbab88e663</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a84f098c94a86d0d53a180c296582dc48</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ad43949043f36bc9016c00558e2e870fa</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ad3aa97207f2563a9fcbd0be36d39fbd1</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a25e9dad6eefe1df26e8dfff27efacd40</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>addfaf7c8e7e3641570da3eec05094015</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8edc772c8b8ab5ae00cbc07c0bb3f47a</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0825dd39b893b1ba7adc0662fa48eb08</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a1b7c538991e67952eb6b9365c0dbf56c</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a48820432940e575d793e53f3033d006e</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8b504a8e6ee547014ab0d40c7d33da16</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa673ac433f70141c1a7a075428a663ba</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a709c09672f1a328cba705ea7e1b01361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0df6e843393758b11ae4570f224f82bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>adc8ed3d33afa6b3b3ec3e0b0bd5350e7</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ab40762c7f51029f44ce71931f1ed2458</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a942fef7e713c9b54655098ab4bacf5eb</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a75e5f00ba99a6efdaf01146b82b9c5bf</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a5a3b96c0e465108c13353c79484c6443</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a4de284602bd07821dd092cb3f825432a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a4163535703f4773911a20cfaee8667db</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa5a962d293882b17da9354a46ce42e5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a588935779508b0b40e3f6a96bb7f86c2</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abba5586e290abfecc262f38d4fa06365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a19655cdb68728ae4746026861c68a92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a3ea50db9317b3d7d619e3922446eacd5</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac20c3bc5a08f6860b2f246c25d7e2339</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a9d6501c308394dd4c3697c3d042144a8</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a7c7464b873b6fc9f6dcc659809ae8587</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aea2d6eb962b507c4360e302608ccc39f</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a20769eafa212c5474b65fa72b02802c3</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a235591994c2d21a537e38aa01f110d63</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>af1275dcb68c2e22780c5961cd0961b27</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a23eba8793a8626347070624ad843bc20</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a09e484496cd7109331d69224ce2d386b</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(const endpoint_type &amp;peer_endpoint</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a75d85fbd85e1bae43b259bb314787edf</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa3d2a06c927a3e5318a94c5db3414c52</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a6a4ba65997b0e731be2532485db524aa</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a9c8acaa0e0d51968b502428a32da1de4</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a73f7d6c272aefdbc531bdde6921de3f6</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac2e4dc0830791b243d4ed6e01305d5ac</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>adbb26359d41c49515ed620b3b0607c85</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a41229674870d7dff87f3c9fef20cf3b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a2ce8dd387186bf33f75a543b993bcb62</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a95879b41e8e34075b3327e4470a5bd98</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a38b8eece1938966a01e1d33b6e131edc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0120a98607fb1d7a69d984b81b03bea6</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a60a335e4140aebea19184efa79763a2a</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0a6d05937727004595103dac285a9e02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a7bb869a266862e1a5a8f7795c6105b22</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a769e7f92e134d9c6543076172e7ffa6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a1cd6fab1f5e9c3bde017a4afd7b9b515</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>acf706b8233e50f4484b4e88b15e25b72</anchor>
      <arglist>(shutdown_type what)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac5a838cf7c9b047d5d5c24d93c6e198e</anchor>
      <arglist>(shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a749e65c52cdbbcebc6145b2c999a4fd3</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>af0b68c11bf65567c60bb42bbab88e663</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a84f098c94a86d0d53a180c296582dc48</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ad43949043f36bc9016c00558e2e870fa</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ad3aa97207f2563a9fcbd0be36d39fbd1</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a25e9dad6eefe1df26e8dfff27efacd40</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>addfaf7c8e7e3641570da3eec05094015</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8edc772c8b8ab5ae00cbc07c0bb3f47a</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0825dd39b893b1ba7adc0662fa48eb08</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a1b7c538991e67952eb6b9365c0dbf56c</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a48820432940e575d793e53f3033d006e</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a8b504a8e6ee547014ab0d40c7d33da16</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa673ac433f70141c1a7a075428a663ba</anchor>
      <arglist>() BOOST_ASIO_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a709c09672f1a328cba705ea7e1b01361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lowest_layer_type &amp;</type>
      <name>lowest_layer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0df6e843393758b11ae4570f224f82bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>adc8ed3d33afa6b3b3ec3e0b0bd5350e7</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ab40762c7f51029f44ce71931f1ed2458</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a942fef7e713c9b54655098ab4bacf5eb</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a75e5f00ba99a6efdaf01146b82b9c5bf</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a5a3b96c0e465108c13353c79484c6443</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a4de284602bd07821dd092cb3f825432a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a4163535703f4773911a20cfaee8667db</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa5a962d293882b17da9354a46ce42e5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a588935779508b0b40e3f6a96bb7f86c2</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>abba5586e290abfecc262f38d4fa06365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a19655cdb68728ae4746026861c68a92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a3ea50db9317b3d7d619e3922446eacd5</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac20c3bc5a08f6860b2f246c25d7e2339</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a9d6501c308394dd4c3697c3d042144a8</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a7c7464b873b6fc9f6dcc659809ae8587</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aea2d6eb962b507c4360e302608ccc39f</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a20769eafa212c5474b65fa72b02802c3</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a235591994c2d21a537e38aa01f110d63</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>af1275dcb68c2e22780c5961cd0961b27</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a23eba8793a8626347070624ad843bc20</anchor>
      <arglist>(const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a09e484496cd7109331d69224ce2d386b</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(const endpoint_type &amp;peer_endpoint</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a75d85fbd85e1bae43b259bb314787edf</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>aa3d2a06c927a3e5318a94c5db3414c52</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a6a4ba65997b0e731be2532485db524aa</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a9c8acaa0e0d51968b502428a32da1de4</anchor>
      <arglist>(GettableSocketOption &amp;option) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a73f7d6c272aefdbc531bdde6921de3f6</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac2e4dc0830791b243d4ed6e01305d5ac</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>adbb26359d41c49515ed620b3b0607c85</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a41229674870d7dff87f3c9fef20cf3b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a2ce8dd387186bf33f75a543b993bcb62</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a95879b41e8e34075b3327e4470a5bd98</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a38b8eece1938966a01e1d33b6e131edc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0120a98607fb1d7a69d984b81b03bea6</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a60a335e4140aebea19184efa79763a2a</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a0a6d05937727004595103dac285a9e02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a7bb869a266862e1a5a8f7795c6105b22</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a769e7f92e134d9c6543076172e7ffa6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a1cd6fab1f5e9c3bde017a4afd7b9b515</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>acf706b8233e50f4484b4e88b15e25b72</anchor>
      <arglist>(shutdown_type what)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac5a838cf7c9b047d5d5c24d93c6e198e</anchor>
      <arglist>(shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a749e65c52cdbbcebc6145b2c999a4fd3</anchor>
      <arglist>(wait_type w)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_SYNC_OP_VOID</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>af0b68c11bf65567c60bb42bbab88e663</anchor>
      <arglist>(wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a84f098c94a86d0d53a180c296582dc48</anchor>
      <arglist>(WaitHandler, void(boost::system::error_code)) async_wait(wait_type w</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ad43949043f36bc9016c00558e2e870fa</anchor>
      <arglist>(WaitHandler) handler)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac52a1ed49949fa5d74aaed5d361cd529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac52a1ed49949fa5d74aaed5d361cd529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac52a1ed49949fa5d74aaed5d361cd529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~basic_socket_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>ac52a1ed49949fa5d74aaed5d361cd529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>detail::io_object_impl&lt; detail::reactive_socket_service_ext_local&lt; Protocol &gt;, Executor &gt;</type>
      <name>impl_</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__ext__local.html</anchorfile>
      <anchor>a317ef45c35d17b081ffd075a1d600c5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::basic_stream_socket_ext</name>
    <filename>classboost_1_1asio_1_1basic__stream__socket__ext.html</filename>
    <templarg>typename Protocol</templarg>
    <templarg>typename StreamSocketService</templarg>
    <base>basic_socket_ext_local&lt; Protocol BOOST_ASIO_SVC_TARG &gt;</base>
    <base>basic_socket_ext_local&lt; Protocol, Executor &gt;</base>
    <base>basic_socket_ext_local&lt; Protocol, Executor &gt;</base>
    <base>basic_socket_ext_local&lt; Protocol, Executor &gt;</base>
    <class kind="struct">boost::asio::basic_stream_socket_ext::rebind_executor</class>
    <member kind="typedef">
      <type>StreamSocketService::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aee7da23a7c17404aad623ac3acf3c373</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StreamSocketService::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a56f931e3229c55cb1feed34b537c108a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>acb7fee6298b0eade8b661f45794fa62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a68e251836a02ad2cdcac324fc103f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext_local&lt; ProtocolBOOST_ASIO_SVC_TARG &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a8dd8d5a576186074ad0f6288b82fef73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>acb7fee6298b0eade8b661f45794fa62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a68e251836a02ad2cdcac324fc103f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ac2198253150d16284f67b07fdd3f1ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket&lt; Protocol, Executor &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ada789a129f7934ec413b02c75f8e71b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>acb7fee6298b0eade8b661f45794fa62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a68e251836a02ad2cdcac324fc103f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ac2198253150d16284f67b07fdd3f1ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket&lt; Protocol, Executor &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ada789a129f7934ec413b02c75f8e71b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>acb7fee6298b0eade8b661f45794fa62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a68e251836a02ad2cdcac324fc103f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Executor</type>
      <name>executor_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ac2198253150d16284f67b07fdd3f1ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket&lt; Protocol, Executor &gt;::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ada789a129f7934ec413b02c75f8e71b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>acb7fee6298b0eade8b661f45794fa62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a68e251836a02ad2cdcac324fc103f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aab7ff27b654600418909e28b7bd9adce</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aba244c925a13b661af07a95ef50b4db1</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a53059bdf86c59cbc9ceda7c4e4de6183</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2bd07fedc5ac52d78027f91661128b41</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a153a0cda8324e969765a34dd0ea3594f</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aee487957fc34583b492d194c78587f60</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ad1cd742db01eddf2d45a1f73442456e0</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af729ec8dae0a9ab341d0f5e439556926</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a692e285afa4cd525fb8afbd07a1d81c3</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa2ff016b0efc3b44736f6608414ab682</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a07d920930d6af623a7275290e5b19c9a</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13ce2010ba883cdcde74846a6eab856</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a187811b15e72abc965f8eca1dfb99bc3</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af3b867868fae198e755a2bbab224efc9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13f5deed9b79e8c22a637cae5501398</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_write_some(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2e17d7e961c60c6120a38cbca9989236</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2501887c3118dd7c40a86845483176e5</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>adb0ff89e20e828f91821c26c4c138ed1</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_read_some(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a3e21f937d39b9a20ad5b27212eaa037b</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aaa0ee02f0006df81c8bc60355c9fa3b3</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a74d9b5cf2af4a1e917fa3c352c9a1bcb</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a0eecde03af33c007f86a107b78b17762</anchor>
      <arglist>(boost::asio::io_context &amp;io_context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae70be1fecd5b7dd70657729dd9b40e9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a153a0cda8324e969765a34dd0ea3594f</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aee487957fc34583b492d194c78587f60</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ad1cd742db01eddf2d45a1f73442456e0</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af729ec8dae0a9ab341d0f5e439556926</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a692e285afa4cd525fb8afbd07a1d81c3</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa2ff016b0efc3b44736f6608414ab682</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a07d920930d6af623a7275290e5b19c9a</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13ce2010ba883cdcde74846a6eab856</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a187811b15e72abc965f8eca1dfb99bc3</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af3b867868fae198e755a2bbab224efc9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13f5deed9b79e8c22a637cae5501398</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_write_some(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2e17d7e961c60c6120a38cbca9989236</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2501887c3118dd7c40a86845483176e5</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>adb0ff89e20e828f91821c26c4c138ed1</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_read_some(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a822ca0cabb9ec82035e6cbb28152a555</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9b33fce5adf73224cb95cce79aeea603</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a438af9b7e73fa7d14bb3495b17d854ea</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae7a2555b39cfac1318e3581bc2e3ac12</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1a543e2d0374ac68133b0297dd079651</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa629382961e419fe1186cd18d56a4388</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a99cb0ada0b9cea0abf3ee0e86be8a25e</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a7e604185f58cb4e492d3e019a1f00f9c</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae70be1fecd5b7dd70657729dd9b40e9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a153a0cda8324e969765a34dd0ea3594f</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aee487957fc34583b492d194c78587f60</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ad1cd742db01eddf2d45a1f73442456e0</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af729ec8dae0a9ab341d0f5e439556926</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a692e285afa4cd525fb8afbd07a1d81c3</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa2ff016b0efc3b44736f6608414ab682</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a07d920930d6af623a7275290e5b19c9a</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13ce2010ba883cdcde74846a6eab856</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a187811b15e72abc965f8eca1dfb99bc3</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af3b867868fae198e755a2bbab224efc9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a86de8cb3875a3a238a91812c84c33483</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_write_some(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2e17d7e961c60c6120a38cbca9989236</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2501887c3118dd7c40a86845483176e5</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>adb0ff89e20e828f91821c26c4c138ed1</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_read_some(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a822ca0cabb9ec82035e6cbb28152a555</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9b33fce5adf73224cb95cce79aeea603</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a438af9b7e73fa7d14bb3495b17d854ea</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae7a2555b39cfac1318e3581bc2e3ac12</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1a543e2d0374ac68133b0297dd079651</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa629382961e419fe1186cd18d56a4388</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a99cb0ada0b9cea0abf3ee0e86be8a25e</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a7e604185f58cb4e492d3e019a1f00f9c</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae70be1fecd5b7dd70657729dd9b40e9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a153a0cda8324e969765a34dd0ea3594f</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aee487957fc34583b492d194c78587f60</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ad1cd742db01eddf2d45a1f73442456e0</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af729ec8dae0a9ab341d0f5e439556926</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a692e285afa4cd525fb8afbd07a1d81c3</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa2ff016b0efc3b44736f6608414ab682</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a07d920930d6af623a7275290e5b19c9a</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13ce2010ba883cdcde74846a6eab856</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a187811b15e72abc965f8eca1dfb99bc3</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af3b867868fae198e755a2bbab224efc9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a86de8cb3875a3a238a91812c84c33483</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_write_some(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2e17d7e961c60c6120a38cbca9989236</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2501887c3118dd7c40a86845483176e5</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>adb0ff89e20e828f91821c26c4c138ed1</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_read_some(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a822ca0cabb9ec82035e6cbb28152a555</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9b33fce5adf73224cb95cce79aeea603</anchor>
      <arglist>(ExecutionContext &amp;context, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a438af9b7e73fa7d14bb3495b17d854ea</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae7a2555b39cfac1318e3581bc2e3ac12</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1a543e2d0374ac68133b0297dd079651</anchor>
      <arglist>(const executor_type &amp;ex, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa629382961e419fe1186cd18d56a4388</anchor>
      <arglist>(ExecutionContext &amp;context, const endpoint_type &amp;endpoint, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a99cb0ada0b9cea0abf3ee0e86be8a25e</anchor>
      <arglist>(const executor_type &amp;ex, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a7e604185f58cb4e492d3e019a1f00f9c</anchor>
      <arglist>(ExecutionContext &amp;context, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, typename enable_if&lt; is_convertible&lt; ExecutionContext &amp;, execution_context &amp; &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae70be1fecd5b7dd70657729dd9b40e9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a153a0cda8324e969765a34dd0ea3594f</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aee487957fc34583b492d194c78587f60</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ad1cd742db01eddf2d45a1f73442456e0</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af729ec8dae0a9ab341d0f5e439556926</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a692e285afa4cd525fb8afbd07a1d81c3</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa2ff016b0efc3b44736f6608414ab682</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a07d920930d6af623a7275290e5b19c9a</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13ce2010ba883cdcde74846a6eab856</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a187811b15e72abc965f8eca1dfb99bc3</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af3b867868fae198e755a2bbab224efc9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a86de8cb3875a3a238a91812c84c33483</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_write_some(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2e17d7e961c60c6120a38cbca9989236</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2501887c3118dd7c40a86845483176e5</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>adb0ff89e20e828f91821c26c4c138ed1</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_read_some(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aca859db8169d63e2b573c9c9af069c54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::buffer_view</name>
    <filename>classvsomeip__v3_1_1buffer__view.html</filename>
    <member kind="function">
      <type></type>
      <name>buffer_view</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>a4bd1a558e4df788cc80a6dd1e19278b2</anchor>
      <arglist>(const uint8_t *_data_ptr, size_t _data_length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>buffer_view</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>ac4c1e8585ea0c62298f2cfdd1d68c283</anchor>
      <arglist>(const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>buffer_view</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>aa2b2f363f736845285ba95c1b6502b15</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, size_t _length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>buffer_view</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>a6831d83e60f755dd8991c89225e43a06</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, size_t _begin, size_t _end)</arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>begin</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>a8ef56b4a7e5a2ac59f2a86e035da6dc6</anchor>
      <arglist>(void) const</arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>end</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>a9159184f62c9c24e8777d00ee4a65121</anchor>
      <arglist>(void) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::trace::channel</name>
    <filename>classvsomeip_1_1trace_1_1channel.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~channel</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>ab8e8f4cea6eaca1252506d9ba15839fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_id</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>ac2729cef669d075fc7c15442f3bc14a6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_name</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>a23b93d7ea9f165f3dab3bd1567377d0c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>aef4a57bb16111979b0312f95aa745e5c</anchor>
      <arglist>(const match_t &amp;_match, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>aff444185eeef104a9ab2b080c1138cdf</anchor>
      <arglist>(const std::vector&lt; match_t &gt; &amp;_matches, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>aa8a753e1a51301a5f4196198ed78f994</anchor>
      <arglist>(const match_t &amp;_from, const match_t &amp;_to, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_filter</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>a5e39302ea0e6d36c1767ed44ada65b4f</anchor>
      <arglist>(filter_id_t _id)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::trace::channel</name>
    <filename>classvsomeip__v3_1_1trace_1_1channel.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>a4ae1b016a4c8d4c86b197dd9c653717e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>af3a52c3f158c84cdd9c317390036228b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>a88ba5f6b4360d7036ae632ad7e303645</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>aedace9810ef122df3217a20b5cc4b128</anchor>
      <arglist>(const match_t &amp;_match, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>ab214865ec1e27d1d4b6dafae717c941f</anchor>
      <arglist>(const std::vector&lt; match_t &gt; &amp;_matches, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>aa95df2f3740d208d44927f9413345e85</anchor>
      <arglist>(const match_t &amp;_from, const match_t &amp;_to, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>ab53d6d7c46def428fc4bb68704f94fc3</anchor>
      <arglist>(filter_id_t _id)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::trace::channel_impl</name>
    <filename>classvsomeip__v3_1_1trace_1_1channel__impl.html</filename>
    <base>vsomeip_v3::trace::channel</base>
    <member kind="function">
      <type></type>
      <name>channel_impl</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>abd63f0768c27d98a3b30c4842785009f</anchor>
      <arglist>(const std::string &amp;_id, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a4c06dbedf8b675afe8122dbfa0f110d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a9a09601b1c4daa12fd54c49577d636ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>acb5dafc5954a49887f3ac46d60d4ee1e</anchor>
      <arglist>(const match_t &amp;_match, bool _is_positive)</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a7aeb67de0ec1a342e5438ecdaa0687d3</anchor>
      <arglist>(const std::vector&lt; match_t &gt; &amp;_matches, bool _is_positive)</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>aa33b029853d5df57a57d533f764ffd18</anchor>
      <arglist>(const match_t &amp;_from, const match_t &amp;_to, bool _is_positive)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a32f9c19997bb524478555a42292d7cd3</anchor>
      <arglist>(filter_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>ae4a3f8b8f8dca6eefa2e99a095f57375</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_interface::checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::profile_interface</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1checker.html</anchorfile>
      <anchor>a941135b82ffacfae34dc6fc948b0de18</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, check_status_t &amp;_generic_check_status)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::client</name>
    <filename>structvsomeip__v3_1_1cfg_1_1client.html</filename>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>a2867e5dee5f46ee9a740079532550dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>adb41fea73bda7b0f0dadf3f03c205d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>a2b607c2af24524b421a585435e9e0e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; bool, std::set&lt; uint16_t &gt; &gt;</type>
      <name>ports_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>aaf6ae8dcd8c35ecaa090b2a884eb49dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; bool, std::pair&lt; uint16_t, uint16_t &gt; &gt;</type>
      <name>remote_ports_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>ae8ee94b601c5e6d01eaec0ab846f7cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; bool, std::pair&lt; uint16_t, uint16_t &gt; &gt;</type>
      <name>client_ports_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>a431738ddcd16ce3575acd8a6b09c0ec7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::client_endpoint</name>
    <filename>classvsomeip__v3_1_1client__endpoint.html</filename>
    <base virtualness="virtual">vsomeip_v3::endpoint</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~client_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint.html</anchorfile>
      <anchor>ada1a38b54fb716c74c14fe26f1dec583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint.html</anchorfile>
      <anchor>a7d1ea9318e0eba1b0c52337f5f8b6d6c</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint.html</anchorfile>
      <anchor>a08e24fcf505b16efa2c134b30e556c8f</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1client__endpoint__impl.html</filename>
    <templarg>typename Protocol</templarg>
    <base>vsomeip_v3::endpoint_impl</base>
    <base>vsomeip_v3::client_endpoint</base>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afe07366090669e0b7eb41f6d7041e9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::socket</type>
      <name>socket_type</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ae4c2c740a15ee539fd8a50cb8962951d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a9a5347752075e0a77e836671dc498c79</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, const endpoint_type &amp;_remote, boost::asio::io_service &amp;_io, std::uint32_t _max_message_size, configuration::endpoint_queue_limit_t _queue_limit, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afe4a6c5b2ad898fd1ff6fe1f3135691a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>abe905c666e9e27c0464ab3beac9b436e</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a5c75d77dadba75856fc66f0ac80c7239</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_cmd_header, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a813d7ec09c8d57343f6a762df40e6933</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>aed633291b40445ffeb6bcf16b381095e</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>flush</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a4ecd652296d4f2b997b211542bf54662</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_stop</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afaf0868997e40943f3ac5decf1f305da</anchor>
      <arglist>(endpoint::prepare_stop_handler_t _handler, service_t _service)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a3bb25c03977f36eec5ce6a196e852a78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a30951f1bb0c9c689b96ceae0651e1114</anchor>
      <arglist>(bool _force=false)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_client</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a94359a3f9ef1583aadf32e15da1ff2fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>abc98c535917cb85a3583116a00d69f70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established_or_connected</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a0562b056d275516c41ebd257c57a7b12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_established</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ab283e3305217b996e41bf24b040c6c9d</anchor>
      <arglist>(bool _established)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_connected</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afe68a95d291524fa94d4f9cd9ef8c74c</anchor>
      <arglist>(bool _connected)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a3d994ff9b3a373131739b486a07e31f3</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a7b810c1753960336e9d132b710033cd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a6d96a111e6fa3433f7a3c08a47ff70e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ad3e60b55d6d924e330a09022cfffaee0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>abc1497883fbcb544b31d2cb368622338</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afe8e423fbcd1146856bec08b5cb6cce5</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_connect_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af8569f12bcd8caab86e8704b7a4bc8dd</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>send_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>adb4e3f6539124db3e8b54b8fcac44c2e</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_sent_msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af4acd8073a0bbb5ab3e5a765a09684a3</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>connect</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af37181b0c7632dd062cb047515a0dce5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ab739db62dba3f4e4e92c2152761acab3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a4f407de09339bd3269fd64fd69694001</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>cei_state_e</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a8ca167817855d60a7f49c42363a701c4</anchor>
      <arglist></arglist>
      <enumvalue file="classvsomeip__v3_1_1client__endpoint__impl.html" anchor="a8ca167817855d60a7f49c42363a701c4a110ccf2f5d2ff4eda1fd1a494293467d">CLOSED</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1client__endpoint__impl.html" anchor="a8ca167817855d60a7f49c42363a701c4a9a14f95e151eec641316e7c784ce832d">CONNECTING</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1client__endpoint__impl.html" anchor="a8ca167817855d60a7f49c42363a701c4aa5afd6edd5336d91316964e493936858">CONNECTED</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1client__endpoint__impl.html" anchor="a8ca167817855d60a7f49c42363a701c4a7640f170af693e00a6c91df543aa2b76">ESTABLISHED</enumvalue>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ad83ba3cae1c1be58f04e3cb2f6a69d75</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a192c54a10b8cfe5e1dcce48427f93fae</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shutdown_and_close_socket</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a683debfe0ef0430868ba6e1c3897ef0a</anchor>
      <arglist>(bool _recreate_socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shutdown_and_close_socket_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a37c700677c0e9ec823abf4a68ef173e0</anchor>
      <arglist>(bool _recreate_socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>start_connect_timer</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af178417a272a137a85e551a121b717e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>endpoint_impl&lt; Protocol &gt;::cms_ret_e</type>
      <name>check_message_size</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a543b8e0270a4cea04724e3bacbad6322</anchor>
      <arglist>(const std::uint8_t *const _data, std::uint32_t _size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>check_queue_limit</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a77b26292fe139c965b412a68b9d68e50</anchor>
      <arglist>(const uint8_t *_data, std::uint32_t _size) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>queue_train</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a3584cc1cda577cb31ed2dd6a859ffed4</anchor>
      <arglist>(bool _queue_size_zero_on_entry)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>socket_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ae128efe82bb2a98593cd4ee288df057b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; socket_type &gt;</type>
      <name>socket_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a7dfe4be363bb047881392ddb00e9367f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const endpoint_type</type>
      <name>remote_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a59cf1c933392237b1259a15a01112614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::steady_timer</type>
      <name>flush_timer_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a494ececbd245385c1ef13aa940555932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>connect_timer_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>acbce7076116d57e478506fccec381f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::steady_timer</type>
      <name>connect_timer_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af327fd147f7788989ca0cfddff76a350</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; uint32_t &gt;</type>
      <name>connect_timeout_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a5c34b98d132e253ebff2cf8f337eee4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; cei_state_e &gt;</type>
      <name>state_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a8eff0b9dd87e89886aeb4693496609d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; std::uint32_t &gt;</type>
      <name>reconnect_counter_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ad7bc06edf6e67c2c59706ff38a7e9aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>train</type>
      <name>train_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a67f53d290bc03724f2059568824dc078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::deque&lt; message_buffer_ptr_t &gt;</type>
      <name>queue_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ab818493c41a5ae06f0dc1e6d80492a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>queue_size_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a7ecb12f0bae76b4886294c7f904533c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mutex_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a36b8c60d0fe9ce1c9dfcefa9d7a8f472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>was_not_connected_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af0ea039f83a4e60ffb208f6bc6f74c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; std::uint16_t &gt;</type>
      <name>local_port_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ad261204360747684c50317c27ef7c98d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::io_service::strand</type>
      <name>strand_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a356df17323066a4269140717753875b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::configuration</name>
    <filename>classvsomeip__v3_1_1configuration.html</filename>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>ttl_factor_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a3033159a5f557da3faf04bdbf7886565</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, ttl_factor_t &gt; &gt;</type>
      <name>ttl_map_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5cbb4357e69b391f7b8b1e1ceb923db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>endpoint_queue_limit_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a63a29ceb8e52a9bca815b8baefde328b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::uint16_t, std::uint16_t &gt;</type>
      <name>port_range_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a798071502142d2642eeaa3eb5b31e949</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; boost::asio::ip::address, std::pair&lt; std::string, std::map&lt; bool, std::pair&lt; boost::icl::interval_set&lt; std::uint16_t &gt;, boost::icl::interval_set&lt; std::uint16_t &gt; &gt; &gt; &gt; &gt;</type>
      <name>sd_acceptance_rules_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a66b1c39286e52313ab59c495ea78e492</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a6aafd2a8dd1d2aee0f9c516fc11a3f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>load</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a0f8286811ba3d32332fef1ffbe4cf938</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remote_offer_info_add</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a2ae1f02869c2f01b56edf938599834e8</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remote_offer_info_remove</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ab690c5ac55b6ae8288f2e9cc272fb116</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool *_still_offered_remote)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_network</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a4c4d624d85438a614e3706cd341ff09b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const boost::asio::ip::address &amp;</type>
      <name>get_unicast_address</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a9aeb25af3a2e13cd8de72e90cf7c82d7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const boost::asio::ip::address &amp;</type>
      <name>get_netmask</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a06386ecca69f505c838a0e63852c88d6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_device</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a16ac89bda4471ccb91deec901b204dec</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual diagnosis_t</type>
      <name>get_diagnosis_address</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a92f4e4767408b2ec1608557b44cf8369</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual diagnosis_t</type>
      <name>get_diagnosis_mask</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a67f0c7ae687a8b80a8b64dcc99416aff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_v4</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af80a0aee2a3cf05fefcc4def0d66954e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_v6</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ac91a0ea81a82842d83d7fb3208705bbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_console_log</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a4ac8904262e7920f1f09d0610b128203</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_file_log</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5505fac146bcc57665188e9e487c49f6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_dlt_log</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a216fc542a60dfbfdf6c38d56ae22f52e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_logfile</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a1dcb002f143409b6992ec2d71ef6a091</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual logger::level_e</type>
      <name>get_loglevel</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af7fc7d97574ad6de955ffc4a620a69d5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_routing_host</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5e59ce900a2bc4f0559e1b6afc74b64b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_unicast_address</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a8eb8747f446c873d039024f0f30244a0</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>get_reliable_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a64290045e6eca9648e162782d72c57e1</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_enabled_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a427e302fbe428c9d800ecb89dea5cd88</anchor>
      <arglist>(std::string _address, uint16_t _port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>get_unreliable_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af7d9b26141837555aceead143511682f</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual major_version_t</type>
      <name>get_major_version</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad51f189337fd1b4f1872bf20c0127818</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual minor_version_t</type>
      <name>get_minor_version</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a837dfa85099f0c3f6231a923d7c8a075</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ac7ee7ddff862d8e3c207a736aeecbd18</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_configured_timing_requests</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a3626d2149e79418559f3b3eb7d157591</anchor>
      <arglist>(service_t _service, std::string _ip_target, std::uint16_t _port_target, method_t _method, std::chrono::nanoseconds *_debounce_time, std::chrono::nanoseconds *_max_retention_time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_configured_timing_responses</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a3b01b29cb1c87f925c5ec32d7bf2d33a</anchor>
      <arglist>(service_t _service, std::string _ip_service, std::uint16_t _port_service, method_t _method, std::chrono::nanoseconds *_debounce_time, std::chrono::nanoseconds *_max_retention_time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_someip</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad2b44ec29daa07b6ea6c86a6c87f71a9</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_client_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abf55a007a68d08efdeb589ca87357921</anchor>
      <arglist>(service_t _service, instance_t _instance, uint16_t _remote_port, bool _reliable, std::map&lt; bool, std::set&lt; uint16_t &gt; &gt; &amp;_used_client_ports, uint16_t &amp;_client_port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; std::pair&lt; service_t, instance_t &gt; &gt;</type>
      <name>get_remote_services</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a6001794e3d11fa355f8d378442e8ebd4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_multicast</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abfa6a8546f6968ac7a87d6f57e1407ed</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, std::string &amp;_address, uint16_t &amp;_port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint8_t</type>
      <name>get_threshold</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aef6fcbbc1e67e2a229b184e538292302</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a061d6d00c81f4956dea9c6290c9dda24</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_configured_client_id</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a58ca0cf6d283baa2984baefd855815e0</anchor>
      <arglist>(client_t _id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_max_dispatchers</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ab129a0a0d175275028489fbd49898725</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_max_dispatch_time</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>afd8e13d47788f0936fb08b4afa9f3a9f</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_io_thread_count</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a33820af9a5c0e1391b78542d33d575cc</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>get_io_thread_nice_level</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a86bdd26d5891723827718d46435e1412</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_request_debouncing</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a524f0314525f76871a69c9e0c2c7def2</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_message_size_local</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad17a470a0db94717c702a2f8699a1da2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_message_size_reliable</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5602e8beb848d3f57315ae50dd5e8c88</anchor>
      <arglist>(const std::string &amp;_address, std::uint16_t _port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_message_size_unreliable</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a895338386a164d278425467aff14b542</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_buffer_shrink_threshold</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a242d52f11d30e7a2b9fe57fe3b8f9910</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supports_selective_broadcasts</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a92c9f54aaac21ad184ac8a1940520bb8</anchor>
      <arglist>(boost::asio::ip::address _address) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_offered_remote</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a86394b96e2b5d05ec16e422ad6bef5c3</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_local_service</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad2973d77734bf42aaa4e5d6c9d6a1e66</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual reliability_type_e</type>
      <name>get_event_reliability</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a34ffaa6c30b798a4f806648af2741069</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual reliability_type_e</type>
      <name>get_service_reliability</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a07a5d00e250e0056082e1294baf9eb8b</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_sd_enabled</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad06e7522256e98ac5444f0451dd6f7c1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_sd_multicast</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa55d1ef29b5a7ced45dfa9e95258d275</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>get_sd_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad46b4d36cb12be0d56e42160ac12a10d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_sd_protocol</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aac4090649bf6b99b6f93c7d5fbd203eb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_sd_initial_delay_min</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7c6327291ed02626d03dd252567f68bc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_sd_initial_delay_max</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>adee125806be9e5661121189af6d78d5c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int32_t</type>
      <name>get_sd_repetitions_base_delay</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a54ca96e756c8fe80e4aa862f8da9109c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint8_t</type>
      <name>get_sd_repetitions_max</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a2cee0d51d256e49af49d409d6bf15452</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ttl_t</type>
      <name>get_sd_ttl</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aea1eed231acb9a11504deac4e7dd33f1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int32_t</type>
      <name>get_sd_cyclic_offer_delay</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5a70480fa9274de5bdfdfbd9541661fa</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int32_t</type>
      <name>get_sd_request_response_delay</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a8032363f8e8d96245f2e01923d469165</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_sd_offer_debounce_time</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aeb20e5774f6f713b4d8a14a2a5d90b25</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; cfg::trace &gt;</type>
      <name>get_trace</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a07af1891c71bd3feac29b764fa6268c2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_watchdog_enabled</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a75fbb09159c686b1baedafd1f989d130</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_watchdog_timeout</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abbb07ccd699297ea09d8ab7cc29d2d6b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_allowed_missing_pongs</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a022dc04284d7634f883c5aee1d73dc46</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_permissions_uds</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a8dc4f536f892575644165bd23103f837</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_permissions_shm</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a98a8d4baae85f9050f1b242940b81f8f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>log_version</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa4606492b286ffefdd2d16666c616f49</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_log_version_interval</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ac4ae5035ddb904f1bb368e753fea53c9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::map&lt; plugin_type_e, std::set&lt; std::string &gt; &gt;</type>
      <name>get_plugins</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a380aaa5b05fe5dfa80eab2ea627c0e86</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_configuration_path</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af68b419ba58def0e81d73cf263bcbf71</anchor>
      <arglist>(const std::string &amp;_path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::map&lt; e2exf::data_identifier_t, std::shared_ptr&lt; cfg::e2e &gt; &gt;</type>
      <name>get_e2e_configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa24541681cfd8fd08cd17bd901cb79d5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_e2e_enabled</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a3df11784b9e8455399df77b63cc7b84f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>log_memory</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aae3fd085349d1dfe4efc28345d4fb9a9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_log_memory_interval</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af0d3b86d58d00714f32e1e87067d5ed8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>log_status</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abd2d6fe96e568082d6a31bc89684c226</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_log_status_interval</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a03c48446c645cd58607dc9a40c562780</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ttl_map_t</type>
      <name>get_ttl_factor_offers</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7fa9b86aac86465d3c4c20808e4a6a39</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ttl_map_t</type>
      <name>get_ttl_factor_subscribes</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aedde20d8a3962d0bf0c4bebe7cf843ab</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; cfg::debounce &gt;</type>
      <name>get_debounce</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa651a22be4e561d1f2539545ca8c2685</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual endpoint_queue_limit_t</type>
      <name>get_endpoint_queue_limit</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a6c9e66c7826efd011b23062ab4a456e3</anchor>
      <arglist>(const std::string &amp;_address, std::uint16_t _port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual endpoint_queue_limit_t</type>
      <name>get_endpoint_queue_limit_local</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af9568ca8f0960607f1030b6ce971dbeb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_tcp_restart_aborts</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a4862b3a9f5057d47610c6669d8a145ad</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_tcp_connect_time</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ade3bea2ed2f84614923f05961a69823b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_protected_device</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a20455adf212fcec6b56dffe23ca2029f</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_protected_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abffc976445ccf9020cd9bac13f240623</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_secure_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a22a479b028768e68addd76e365ab83e4</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_rule</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa5d6fadb65bcc2f31487f111dc0ef2f2</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, port_range_t _port_range, port_type_e _type, const std::string &amp;_path, bool _reliable, bool _enable, bool _default)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_rules</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a31886fa971686ac83592463293d8c6a0</anchor>
      <arglist>(const sd_acceptance_rules_t &amp;_rules, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual sd_acceptance_rules_t</type>
      <name>get_sd_acceptance_rules</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa4bcf4e5669be84356823957797ca80a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_rules_active</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ae07da8ff88ee8c2d6c4307b67493af35</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_secure_service</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7095d3222f1ea7c4ea06a65c70aaca0f</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_udp_receive_buffer_size</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a907370fc0e1533528c4923614d73edd4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check_routing_credentials</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5e28eb9ea8b816e51d41e51728c1a27a</anchor>
      <arglist>(client_t _client, uint32_t _uid, uint32_t _gid) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>tp_segment_messages_client_to_service</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5cbf79f917d38d3ad1f785e6826c7e4f</anchor>
      <arglist>(service_t _service, std::string _ip_target, std::uint16_t _port_target, method_t _method) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>tp_segment_messages_service_to_client</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a4b222f9d3058385b35545fcbd2274cee</anchor>
      <arglist>(service_t _service, std::string _ip_service, std::uint16_t _port_service, method_t _method) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_shutdown_timeout</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a58dd48942ff7e4dd6d4791d9ac3bbe83</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>log_statistics</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5f7952d70ec2563f6405b9d957e02b25</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_statistics_interval</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7221693b920e45df84fe960d7e49ed5a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_statistics_min_freq</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af62a63dc454e8e0e556363aa9abd95e0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_statistics_max_messages</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>afabba418465e2ed9871e03a5918afba2</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::configuration_element</name>
    <filename>structvsomeip__v3_1_1configuration__element.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1configuration__element.html</anchorfile>
      <anchor>ad2c6da8fef898d4ec3f334f2052fdc4a</anchor>
      <arglist>(const configuration_element &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>structvsomeip__v3_1_1configuration__element.html</anchorfile>
      <anchor>ad0bf3dbf09325dc8f42857edf093dd74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::property_tree::ptree</type>
      <name>tree_</name>
      <anchorfile>structvsomeip__v3_1_1configuration__element.html</anchorfile>
      <anchor>ac1fea147b3f0f4428e7cf135cac0777a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::cfg::configuration_impl</name>
    <filename>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</filename>
    <base>vsomeip_v3::configuration</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>configuration_impl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a85aeb30b580cfd4a2cb76a3174ffca72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>configuration_impl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a11ed778f170eeaa5efcda1c526ef9e0b</anchor>
      <arglist>(const configuration_impl &amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~configuration_impl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa2e10639e268d0b2c2f88cdb0e57f964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>load</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a57b29959dabb7d851411a0ecc53341d1</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>remote_offer_info_add</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9bb5b3e824034a8d1657b88e9eeea5bc</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>remote_offer_info_remove</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6e4d830a497c8a324976051e4dde76be</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool *_still_offered_remote)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_network</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a489f9c8a5122d5abb4d2a2606f8ac9a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_configuration_path</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae55fd277aebbf600101e2497508d11ab</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const boost::asio::ip::address &amp;</type>
      <name>get_unicast_address</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a5513c832b011c56f79e2b4264a51fc4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const boost::asio::ip::address &amp;</type>
      <name>get_netmask</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0ddb74c35f663cb1b756c7bb28d63586</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_device</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a127a7be569d985f775258a4c41fd074b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT unsigned short</type>
      <name>get_diagnosis_address</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a76e4bd69f2a05f68fd82ab0a91391905</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint16_t</type>
      <name>get_diagnosis_mask</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a219b028c715f4f143c44156c47ba399b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_v4</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa9e7e9ab7ba4ae5c330245a99dd5fcde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_v6</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab2cb064f01cfd6b46b6bee21921e5cf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_console_log</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1b75d1b78684645ae2b3028a44597023</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_file_log</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4b184b71843cd51f8e0ef9d0abd2ba16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_dlt_log</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0831df478e4bc449910d5638c4568b2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_logfile</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a8f5c8a402cd49559e055049db210803d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT vsomeip_v3::logger::level_e</type>
      <name>get_loglevel</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a012fa6330a6df9c5884332d88a7a60b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::string</type>
      <name>get_unicast_address</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4d8fa18c35b67d22cb8688bc36b7f8bc</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_reliable_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a845701e7567e25a1c4cedc83676f6028</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_enabled_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3ac28f9ba1c4eed98cfe47b4edb1aa4a</anchor>
      <arglist>(std::string _address, uint16_t _port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_unreliable_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af0f721cd502a479daa22a05c00697d5d</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT major_version_t</type>
      <name>get_major_version</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a32ae6e170f8d7777a24a2b8baba50942</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT minor_version_t</type>
      <name>get_minor_version</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>acd8bbb515db267593ae89c7181df0fe8</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4ee3faebec936ffe821235d2a77b4a6d</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>get_configured_timing_requests</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab893711561232b1fabd62740e426caa3</anchor>
      <arglist>(service_t _service, std::string _ip_target, std::uint16_t _port_target, method_t _method, std::chrono::nanoseconds *_debounce_time, std::chrono::nanoseconds *_max_retention_time) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>get_configured_timing_responses</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>afcd00034c00b1aba479e9467dc505307</anchor>
      <arglist>(service_t _service, std::string _ip_service, std::uint16_t _port_service, method_t _method, std::chrono::nanoseconds *_debounce_time, std::chrono::nanoseconds *_max_retention_time) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_someip</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aeb5d5962d6a8c068e2716b1673c4add8</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>get_client_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a26932b8c5a5edb75d0f4c62bf91e2530</anchor>
      <arglist>(service_t _service, instance_t _instance, uint16_t _remote_port, bool _reliable, std::map&lt; bool, std::set&lt; uint16_t &gt; &gt; &amp;_used_client_ports, uint16_t &amp;_client_port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_routing_host</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a5f22bf938ac44b2e58dc970e83214f69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT client_t</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac0354ceb82b6ab73d0f72df9dfc88631</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_configured_client_id</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a37ddfe44e0417ef407939dbc4504366d</anchor>
      <arglist>(client_t _id) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_max_dispatchers</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a81e8e1e5c9b724f76f527d42be4ceb35</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_max_dispatch_time</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae725d53c86204239ef893f7f8d6236ae</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_io_thread_count</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af9cba277873453a767c1203e1aeb2aa3</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int</type>
      <name>get_io_thread_nice_level</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>acdc4c557490d6e1d63d71b918ac79828</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_request_debouncing</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a958a0ba6879c1821d03531ecbe49a3ef</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_session_handling</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae57ffdf92cd97a177adb6b7b47f919c7</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::pair&lt; service_t, instance_t &gt; &gt;</type>
      <name>get_remote_services</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac675cc773a1cf1cb91a1bddb5d895a7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>get_multicast</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abd189d6a6e34292eb12495cff6ea66ab</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, std::string &amp;_address, uint16_t &amp;_port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_threshold</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6f3a70041aa70308f08b15d14a7d1836</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_message_size_local</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abbf6ba95554cae2683cd1b8dcd23b46e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_message_size_reliable</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa00667c0f9e3863a279d0a17d5d93461</anchor>
      <arglist>(const std::string &amp;_address, std::uint16_t _port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_message_size_unreliable</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9c77d176e9e58a70157f40b8b44233d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_buffer_shrink_threshold</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7bde99effbe11291efdca3f35aacf07d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>supports_selective_broadcasts</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3466a78b405f4f0eb85044183a1a18bd</anchor>
      <arglist>(boost::asio::ip::address _address) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_offered_remote</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae6bf5a9d2d6cbc18b70dea36c92fa709</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>log_version</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9a4384b8a5eedaafe04e28611ad22c11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_log_version_interval</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ad2f173086c7a0b9878b9f7ae658e14b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_local_service</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae25a73d8c1975e9a61072fe921c00ed2</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT reliability_type_e</type>
      <name>get_event_reliability</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af43231b517d0b4483603470947de6f92</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT reliability_type_e</type>
      <name>get_service_reliability</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a26fc9217de0be88f5e09fe0f48682f9a</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_sd_enabled</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae73d7bfee5ff2653c47bbb0b0219c189</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_sd_multicast</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a054f041025f492cf9cb6b46806571a74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_sd_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>afe6369fde28a169e0963c7017149aad8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_sd_protocol</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9130af08be8540e587739e2cd7af35b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_sd_initial_delay_min</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a235000e420309ae4f99ce9793cbd610e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_sd_initial_delay_max</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3b81ae006c03df0c3261c5330252d4d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int32_t</type>
      <name>get_sd_repetitions_base_delay</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0aca04653508c4664bc4c084e1aed800</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_sd_repetitions_max</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6f393e19a50cc0f124651ddf4025f7d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_sd_ttl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9f2207ee555dd1f9b16a29c33cfee856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int32_t</type>
      <name>get_sd_cyclic_offer_delay</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3bafa38f85977d87150536234477bc8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int32_t</type>
      <name>get_sd_request_response_delay</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a14a583427ba469a1ad8bb0caba208715</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_sd_offer_debounce_time</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af4eb790a9f000d71f29675cd48bc3259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; cfg::trace &gt;</type>
      <name>get_trace</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a82c56771ae1c57cfee87160deead5040</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_watchdog_enabled</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a228603585a86320d9f6897b1ccbd996c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_watchdog_timeout</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a57b62d0188a4cba9c7a5be70a7069f88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_allowed_missing_pongs</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2fe9e54d1a6b437e53f273daa9293a1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_permissions_uds</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a13ec3c372574863f87942bacbc12c9f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_permissions_shm</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1286d2beb74f564ee0dfa75e053b96cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>check_routing_credentials</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6affd36916a34241771af23ff352cab3</anchor>
      <arglist>(client_t _client, uint32_t _uid, uint32_t _gid) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::map&lt; plugin_type_e, std::set&lt; std::string &gt; &gt;</type>
      <name>get_plugins</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1439b32e62620687cb1806139fcef07a</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::map&lt; e2exf::data_identifier_t, std::shared_ptr&lt; cfg::e2e &gt; &gt;</type>
      <name>get_e2e_configuration</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae9bf595cb8ea7c8da4d1afef20f2e480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_e2e_enabled</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4e2f103cc7812aa7e51ee427234d4e39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>log_memory</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2444b2617c3ff6e9f660d69940f8115a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_log_memory_interval</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9a7b9c9190253ea28e606a2604a6d7cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>log_status</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aac74591702ff7e55e0196c8e102bef42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_log_status_interval</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a91663d00563098c7907f6009d6b7e4cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_map_t</type>
      <name>get_ttl_factor_offers</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2887adf1cca41cec9a71f7cc4e333594</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_map_t</type>
      <name>get_ttl_factor_subscribes</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa3e43ef072441b7504820092c7e10ff8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; debounce &gt;</type>
      <name>get_debounce</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a73554b7f7ab824cfdc675f528dc49568</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT endpoint_queue_limit_t</type>
      <name>get_endpoint_queue_limit</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a48c92a586376b224b918f1178625f34f</anchor>
      <arglist>(const std::string &amp;_address, std::uint16_t _port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT endpoint_queue_limit_t</type>
      <name>get_endpoint_queue_limit_local</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a505e7f70bcfde83a4955bf2d20029ad0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_tcp_restart_aborts</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac9310145d2e6f22d3eae5084ebe12736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_tcp_connect_time</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac751ff829588877817c96bd3b16155a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_protected_device</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a87dfd34934e32615204fb1e9bc0c9a02</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_protected_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a80bec9bf76e3e185e8ac8edd13890336</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_secure_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a24635822f6e28a2fff671e5e967a79a7</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_rule</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a5bbfa0221818261e643f384bcb062470</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, port_range_t _port_range, port_type_e _type, const std::string &amp;_path, bool _reliable, bool _enable, bool _default)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_rules</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae719d35be39c11f967ac73f8b9efa226</anchor>
      <arglist>(const sd_acceptance_rules_t &amp;_rules, bool _enable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT sd_acceptance_rules_t</type>
      <name>get_sd_acceptance_rules</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2fcf7aaca51d3b08453a417bc5306d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_rules_active</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aec2ebcb7f074da04349dc7f03dad9a62</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, bool _enable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_secure_service</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aea26c342eb89339bda937f8145771a07</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_udp_receive_buffer_size</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aff85ea92be51f94ff39fa14e09d28f45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_overlay</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae9c4f179ad003b6f2a7bbea0ab1a0270</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>load_overlay</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a62b61f1a981e0bf2ead4c5711184f54f</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>tp_segment_messages_client_to_service</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab23f3a344c6f7f093064e5e45e33d0dc</anchor>
      <arglist>(service_t _service, std::string _ip_target, std::uint16_t _port_target, method_t _method) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>tp_segment_messages_service_to_client</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4b934738b5662103a19af4685ee4a75d</anchor>
      <arglist>(service_t _service, std::string _ip_service, std::uint16_t _port_service, method_t _method) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_shutdown_timeout</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa04b202af7fac1a699bce2b66134a405</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>log_statistics</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa1dfde4d35030e4294aa3a9d3ac8e259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_statistics_interval</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9ca447d85eb069e0e5fc01646db9493d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_statistics_min_freq</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a76f322f2427056a13d5883bdd7dc6e52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_statistics_max_messages</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af27ecb49ed07bdd42ada8e72235afa0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>element_type_e</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NETWORK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcac86e15aa1869cce4090f24e83d8c378d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_UNICAST</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca24136ea689f8d11c5815a3977fbab6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DEVICE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca53bcc542ca549e0d251dc875f3c83454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DIAGNOSIS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcae12c6c39a9e9857193964a64f0e29405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DIAGNOSIS_MASK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaa7092c818f451bbe1cd4a9a95f8e8d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_CONSOLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca1d4f66b1e4f8ce03ff6b292c1ba6067e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_FILE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca15d97df96061932e57e9817742b38942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_DLT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcabea5dcfe9eef03725e9632700ef6c260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_LEVEL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca627bd1d110d1025fb5f009cc1294d8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ROUTING</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca8e423c8683a3f4fd82558fb763082d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3f20fc04698022da34f415276b17ee02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_PROTOCOL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcac8d2a4e1ec0f55542ac2360973881fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_MULTICAST</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca7b447f42bcf9f7613375651b1e9062d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_PORT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca24dbbed3bc7d96af115f300da2c88024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_INITIAL_DELAY_MIN</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab0540a506b470a18b49fa84c12e517de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_INITIAL_DELAY_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab5719040e0d269bc559fdc1fcd5f68c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REPETITION_BASE_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca48962b1c2a965ad72b8a48fffb78c4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REPETITION_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0b0acbfeb8a2292a3418b78e186ce634</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3419184d74467a471d6cb2b00778f10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_CYCLIC_OFFER_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca5ad76871784999e175384d575ab34ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REQUEST_RESPONSE_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca76afe1009d7840302dcadea3c1020067</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab0d341826a97e92ef5ed076706ebdd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_TIMEOUT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca22defb3610e2a84f4381af71200a7802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_ALLOWED_MISSING_PONGS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca21eb1c99a68a33236f48f47dde87ad97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TRACING_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6b3d44ff53006cffe689de913aaac0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TRACING_SD_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6c269b4de3dbdc3dd6b725de070867bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_OFFER_DEBOUNCE_TIME</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3166a416cfbac76e410baf453ffda938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL_FACTOR_OFFERS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0de0d5aba7f3fb6ada98777dce97545e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL_FACTOR_SUBSCRIPTIONS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca86e0a77bdb6a55a7da13364026610a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMITS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca699c71ab6ff02b98d5d90a090e357dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMIT_EXTERNAL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca25aa4671b22878fbdef9764033a9426d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMIT_LOCAL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca018809ffd829960d58d98185684478ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TCP_RESTART_ABORTS_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6df3268ac5f9e0b14e639e271878cd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TCP_CONNECT_TIME_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca8dd96871c6c12982b95dfe6eaf16f467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SD_ACCEPTANCE_REQUIRED</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaeaf6ebfe1b381f23b9fc1fa60d39ec9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NETMASK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaf05be1974d072f093f11523933fe3596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_UDP_RECEIVE_BUFFER_SIZE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6e347c1dc1e7e18922bbf03cc0d5a37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NPDU_DEFAULT_TIMINGS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0b2eb88a21e2d3e9c7e4f0515235c788</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PLUGIN_NAME</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca84421c815ca34e5e407cf69bc5e73447</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PLUGIN_TYPE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaf89d6489a4ca49919ba19fd53925c011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ROUTING_CREDENTIALS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca592863b31f6e7fee1520c2092040d71d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SHUTDOWN_TIMEOUT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca49259b13cd2409a317a9ae3988d21817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0a5d0a819e9289e0ab3a227f987ee34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NETWORK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcac86e15aa1869cce4090f24e83d8c378d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_UNICAST</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca24136ea689f8d11c5815a3977fbab6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DEVICE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca53bcc542ca549e0d251dc875f3c83454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DIAGNOSIS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcae12c6c39a9e9857193964a64f0e29405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DIAGNOSIS_MASK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaa7092c818f451bbe1cd4a9a95f8e8d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_CONSOLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca1d4f66b1e4f8ce03ff6b292c1ba6067e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_FILE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca15d97df96061932e57e9817742b38942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_DLT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcabea5dcfe9eef03725e9632700ef6c260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_LEVEL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca627bd1d110d1025fb5f009cc1294d8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ROUTING</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca8e423c8683a3f4fd82558fb763082d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3f20fc04698022da34f415276b17ee02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_PROTOCOL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcac8d2a4e1ec0f55542ac2360973881fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_MULTICAST</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca7b447f42bcf9f7613375651b1e9062d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_PORT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca24dbbed3bc7d96af115f300da2c88024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_INITIAL_DELAY_MIN</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab0540a506b470a18b49fa84c12e517de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_INITIAL_DELAY_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab5719040e0d269bc559fdc1fcd5f68c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REPETITION_BASE_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca48962b1c2a965ad72b8a48fffb78c4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REPETITION_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0b0acbfeb8a2292a3418b78e186ce634</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3419184d74467a471d6cb2b00778f10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_CYCLIC_OFFER_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca5ad76871784999e175384d575ab34ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REQUEST_RESPONSE_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca76afe1009d7840302dcadea3c1020067</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab0d341826a97e92ef5ed076706ebdd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_TIMEOUT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca22defb3610e2a84f4381af71200a7802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_ALLOWED_MISSING_PONGS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca21eb1c99a68a33236f48f47dde87ad97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TRACING_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6b3d44ff53006cffe689de913aaac0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TRACING_SD_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6c269b4de3dbdc3dd6b725de070867bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_OFFER_DEBOUNCE_TIME</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3166a416cfbac76e410baf453ffda938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL_FACTOR_OFFERS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0de0d5aba7f3fb6ada98777dce97545e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL_FACTOR_SUBSCRIPTIONS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca86e0a77bdb6a55a7da13364026610a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMITS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca699c71ab6ff02b98d5d90a090e357dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMIT_EXTERNAL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca25aa4671b22878fbdef9764033a9426d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMIT_LOCAL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca018809ffd829960d58d98185684478ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TCP_RESTART_ABORTS_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6df3268ac5f9e0b14e639e271878cd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TCP_CONNECT_TIME_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca8dd96871c6c12982b95dfe6eaf16f467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SD_ACCEPTANCE_REQUIRED</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaeaf6ebfe1b381f23b9fc1fa60d39ec9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NETMASK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaf05be1974d072f093f11523933fe3596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_UDP_RECEIVE_BUFFER_SIZE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6e347c1dc1e7e18922bbf03cc0d5a37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NPDU_DEFAULT_TIMINGS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0b2eb88a21e2d3e9c7e4f0515235c788</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PLUGIN_NAME</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca84421c815ca34e5e407cf69bc5e73447</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PLUGIN_TYPE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaf89d6489a4ca49919ba19fd53925c011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ROUTING_CREDENTIALS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca592863b31f6e7fee1520c2092040d71d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SHUTDOWN_TIMEOUT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca49259b13cd2409a317a9ae3988d21817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0a5d0a819e9289e0ab3a227f987ee34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::ip::address</type>
      <name>unicast_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a64c8a42a308e45f456c91b0befc90b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::ip::address</type>
      <name>netmask_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a8489fd317c177c2093d8e6ccca5a338e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>device_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae2b6f11f8c64c6aa07671ce441aae6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>diagnosis_t</type>
      <name>diagnosis_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abad90e8c4d3407d748fc774fc1b0ee5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>diagnosis_t</type>
      <name>diagnosis_mask_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a36294c8644804f242592b546d185c1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_console_log_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abacfe86f407869fd311e5823edfca1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_file_log_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3566888288fdb3fc9e778b7f04368e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_dlt_log_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a26cbb89261148ecf78c034e42a796f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>logfile_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>add1198c14d7a31d6f4b49e55bfc307cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vsomeip_v3::logger::level_e</type>
      <name>loglevel_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac227562fea53ea046950a8775180b59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::tuple&lt; client_t, std::size_t, std::size_t, std::size_t, std::size_t, std::map&lt; plugin_type_e, std::set&lt; std::string &gt; &gt;, int, std::string &gt; &gt;</type>
      <name>applications_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a150bd8964aa5d0e0bd49158ce7b879c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; client_t &gt;</type>
      <name>client_identifiers_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a8c6adb0e10a9ead32738a8871d169909</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>services_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a932d228f64d40633c13681c11bac1e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; service &gt; &gt; &gt;</type>
      <name>services_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab26f2fbf4caefeb1fe0869de1534c488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; std::uint16_t, std::map&lt; service_t, std::shared_ptr&lt; service &gt; &gt; &gt; &gt;</type>
      <name>services_by_ip_port_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab9e4206564a9faaad59c92e3447e912d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; client &gt; &gt;</type>
      <name>clients_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>afee35401d4dea40ed9a4ff3867386c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>routing_host_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a10d8be8e1269e31bb34a4c0dd874e60b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_sd_enabled_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3a62b0307f72aa8a5f35cdba44b07663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sd_protocol_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a499f5b389b6e1234af9e77ccacf36e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sd_multicast_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3b2bdc81774aec837ff863727446b554</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>sd_port_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a16ac5fb6d701b3ad470692dcd4aa4d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>sd_initial_delay_min_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abcf699efaffc4fbca871673a91f2c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>sd_initial_delay_max_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a66386359c86002c853919e72b260ede6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>sd_repetitions_base_delay_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a909d2be63c86dfd0017f64b0bbda07d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>sd_repetitions_max_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aea43d31a989cc3192d0c9da62819ab73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ttl_t</type>
      <name>sd_ttl_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae88db2912b55130ec83ad1119349b0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>sd_cyclic_offer_delay_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ad7c28f01e38c185eb77bea7908a01444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>sd_request_response_delay_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6a9739fb719569b2a6dde21f0f961841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>sd_offer_debounce_time_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2f19234eeac2df5c65efe159cad20f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::set&lt; uint16_t &gt; &gt;</type>
      <name>magic_cookies_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ad7d20a08794fd964f854933e9877f2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; std::uint16_t, std::uint32_t &gt; &gt;</type>
      <name>message_sizes_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af1bd5d3ba41eb39aae6891d6b6419b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_configured_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1724ac640bc78dbf2b3b5c42c74b659e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_local_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a80e4f5f0202734c78b47b2e458f1968b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_reliable_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>acfd4ddeebeef0b0952d31c1ca60ab2c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_unreliable_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a148c096c88440ea1e6fa4e0c969555e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>buffer_shrink_threshold_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7ff15ec3b9f62f9fd2ebcc03e275a127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; trace &gt;</type>
      <name>trace_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a84f04e150851bfecf8fa1750fdf9be56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; std::string &gt;</type>
      <name>supported_selective_addresses</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2a228daa556c288a8832b20d646e68d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; watchdog &gt;</type>
      <name>watchdog_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abd78d988655443374580003f5b13a395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; service_instance_range &gt;</type>
      <name>internal_service_ranges_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac10116aa12108734669411715a5c760c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>log_version_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a89ba903de43113d0ee9f9c90617068df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>log_version_interval_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a98858cc57e8306718a24985101788b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_configured_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6ff64fd1f23f49a7b0586041e7bfb541</anchor>
      <arglist>[ET_MAX]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>permissions_shm_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ad6dc5258600263603fe03c6a07dac94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>permissions_uds_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a278d58f4930314f382e82911025a683f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>network_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6a5da36615686d5bdfcb28f7587c7dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>configuration_path_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7dec840bb18255fe21fc53953eb5ce30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>e2e_enabled_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae2430fd06d32df4a7b965f850487d8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; e2exf::data_identifier_t, std::shared_ptr&lt; cfg::e2e &gt; &gt;</type>
      <name>e2e_configuration_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3802bdeed1bbde855c4206c14cbd685d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>log_memory_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac31ea81bd9492d0ca378703e3b25b045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>log_memory_interval_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af4b3e15d94db6755d0db828e4cb6fc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>log_status_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a879c16d49b3e42a5266662699be4ace5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>log_status_interval_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a169d30882e0638c270b1af6508b0c5b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ttl_map_t</type>
      <name>ttl_factors_offers_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6deb22af23f6fefeedb504c309624532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ttl_map_t</type>
      <name>ttl_factors_subscriptions_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a87938fac5ce5f742365f813fd8302a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; event_t, std::shared_ptr&lt; debounce &gt; &gt; &gt; &gt;</type>
      <name>debounces_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aecd9d5fa4b40e0987419b92a3e3ce6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; std::uint16_t, endpoint_queue_limit_t &gt; &gt;</type>
      <name>endpoint_queue_limits_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a555f91ca9246ff8095e738b573e2bff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>endpoint_queue_limit_t</type>
      <name>endpoint_queue_limit_external_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae33e12aa080c3f1db8bdff1c5f46d1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>endpoint_queue_limit_t</type>
      <name>endpoint_queue_limit_local_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9680b5f0aef33cf538eed18a015e3952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>tcp_restart_aborts_max_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>afe421a55a6f40dc1baacee6b4eb21527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>tcp_connect_time_max_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abe4b3d3f8877a4008d3b6dbc5a89aa26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>sd_acceptance_required_ips_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a75e53e1f838b73ffed95c14d96658972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sd_acceptance_rules_t</type>
      <name>sd_acceptance_rules_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a70557c77188262b1d608240d14ee72e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; boost::asio::ip::address &gt;</type>
      <name>sd_acceptance_rules_active_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a96eb4be39319fb02220959a2330cef56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_issued_methods_warning_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a00d8d538ea2f8b01830035891f41e82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_issued_clients_warning_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae0c3b10b95ea4121e1789b82ccb3fe88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>udp_receive_buffer_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6dba335aa895e5deaeae59d7c7851d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::nanoseconds</type>
      <name>npdu_default_debounce_requ_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a50aa464e132b2f01a0c2a33c8043c0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::nanoseconds</type>
      <name>npdu_default_debounce_resp_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac069c84e6a54afc16a859a729a06928f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::nanoseconds</type>
      <name>npdu_default_max_retention_requ_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1819ce581bf04d461cdee1d1b0365d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::nanoseconds</type>
      <name>npdu_default_max_retention_resp_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a41f6735e285ff68f50e7deeea5bad75b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>shutdown_timeout_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1bb63d337c0fc5b3ae265a6f896b78c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>secure_services_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9f6564fafd5f1911d75804a890e076ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::set&lt; instance_t &gt; &gt;</type>
      <name>secure_services_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7c220e35abcf4ad3de801b12d115ed88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>log_statistics_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1be777bd21367242e41ac1a1eda4f2ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>statistics_interval_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a19c475ef4ba239a50c875fa86c8b319c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>statistics_min_freq_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9abab02d51b37a7cb1973d9a381cac20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>statistics_max_messages_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0bf14433b0c231cb6a1d9f32415e38ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::configuration_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>configuration_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a6ce064cfc01492753d98d8ffbb9b70cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~configuration_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>ac3465a455eeb4ecd14fb682bbe27484c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a27144bdf4e0ac8dcdf7d92390a335519</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_item</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a95da906f26b8f151149c338cc1382c55</anchor>
      <arglist>(const std::string &amp;_key, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_item</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a5cf9e9d0a2dab7ad28fe8ede116197a0</anchor>
      <arglist>(const std::string &amp;_key)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_keys</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a6c68972a8557902114464641e695b199</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_values</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>ad35e5a5749f88c063e6447f56d484e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_value</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a6ea85b55fd1bdc8ddf3c97ec46471c64</anchor>
      <arglist>(const std::string &amp;_key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a7b7169d93ae6c601931f777a6e6f54c6</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a3674a6effcc2c491fc05fe29a9962263</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::configuration_plugin</name>
    <filename>classvsomeip__v3_1_1configuration__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~configuration_plugin</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin.html</anchorfile>
      <anchor>a0778910d0e5482ab669679e84178aa0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin.html</anchorfile>
      <anchor>a79f597e783d616ce1d576df5edff4b36</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::configuration_plugin_impl</name>
    <filename>classvsomeip__v3_1_1configuration__plugin__impl.html</filename>
    <base>vsomeip_v3::configuration_plugin</base>
    <base>plugin_impl&lt; configuration_plugin_impl &gt;</base>
    <member kind="function">
      <type></type>
      <name>configuration_plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin__impl.html</anchorfile>
      <anchor>aa88c4a94858aa621b36be20611d3b205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~configuration_plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin__impl.html</anchorfile>
      <anchor>a1e2efb30f8cdc4c9b8ba6e1d56e7e714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin__impl.html</anchorfile>
      <anchor>a5fc45c3e1d654de0f9f2e4eaeeec9786</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::trace::connector</name>
    <filename>classvsomeip_1_1trace_1_1connector.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~connector</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>aff436b838a3007f4f0909df5e2a449cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; channel &gt;</type>
      <name>add_channel</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>a64fbeea70eee04350e4a5620fb1304ca</anchor>
      <arglist>(const std::string &amp;_id, const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remove_channel</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>a0681ee5345d8fc68f4636a1d94e19277</anchor>
      <arglist>(const std::string &amp;_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; channel &gt;</type>
      <name>get_channel</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>af0a5e541a907ba4321b1fa84f6759c3c</anchor>
      <arglist>(const std::string &amp;_id=VSOMEIP_TC_DEFAULT_CHANNEL_ID) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; connector &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>abdac8d4708fe5b812378452ea77484de</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::trace::connector</name>
    <filename>classvsomeip__v3_1_1trace_1_1connector.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~connector</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>a0b70a8379de503e47f8d570860d72012</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; channel &gt;</type>
      <name>add_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>a49400f39087bacf65b3918d1bf2644ce</anchor>
      <arglist>(const std::string &amp;_id, const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remove_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>afb4cb3c35a995c26ded9393bd88f2e79</anchor>
      <arglist>(const std::string &amp;_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; channel &gt;</type>
      <name>get_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>a3670fb0a7068ba5519277b7033e42712</anchor>
      <arglist>(const std::string &amp;_id=VSOMEIP_TC_DEFAULT_CHANNEL_ID) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; connector &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>ab760b984efa2d1816c64d847381f4916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::trace::connector_impl</name>
    <filename>classvsomeip__v3_1_1trace_1_1connector__impl.html</filename>
    <base>vsomeip_v3::trace::connector</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>connector_impl</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>aa22d4116204e81ca965fbccfbecbf865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~connector_impl</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a18c34cebaa812c1e0f09d1c6f691c53d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>configure</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a39497bf7ed6c5d1839f83be7d32767e5</anchor>
      <arglist>(const std::shared_ptr&lt; cfg::trace &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>reset</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a129bbaf1384f33490de770997bfecada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_enabled</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a8fe95188cb9965805725ac4d9631c27e</anchor>
      <arglist>(const bool _enabled)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_enabled</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>aa5c59f35acc12448fb064fec902c8c1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_enabled</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>ab1a27ad5eae1afe3ae10324bdbae27f3</anchor>
      <arglist>(const bool _sd_enabled)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_sd_enabled</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a506e6e7d1a4b7e511b741084ac05acb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_sd_message</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a04f150ea6e24fe9208b4582303fb1d71</anchor>
      <arglist>(const byte_t *_data, uint16_t _data_size) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; channel &gt;</type>
      <name>add_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>ab6b93cd4de2dc740e818e07c9722ff9d</anchor>
      <arglist>(const std::string &amp;_id, const std::string &amp;_description)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>remove_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a3b04de96f3ccc186becd79ac38573bf2</anchor>
      <arglist>(const std::string &amp;_id)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; channel &gt;</type>
      <name>get_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>afe01daa65418c98ebbf9358cf24edbbc</anchor>
      <arglist>(const std::string &amp;_id) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>trace</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a3407de3f6f665c1ce4343e90055c4fec</anchor>
      <arglist>(const byte_t *_header, uint16_t _header_size, const byte_t *_data, uint16_t _data_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; connector_impl &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a53882996071d90f5f1131e5725c903d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::credentials</name>
    <filename>classvsomeip__v3_1_1credentials.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>activate_credentials</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>a473429e5f7fcd01572550639f2d70dc1</anchor>
      <arglist>(const int _fd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deactivate_credentials</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>a575ff11128042805a8838ed93977e3a2</anchor>
      <arglist>(const int _fd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static client_t</type>
      <name>receive_credentials</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>abacbde12e71cbf92afc106bc11fa7c4e</anchor>
      <arglist>(const int _fd, uid_t &amp;_uid, gid_t &amp;_gid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>send_credentials</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>a6a29b6d67c7a0c7e41ddf52ef17764f3</anchor>
      <arglist>(const int _fd, client_t _client)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::datagram_socket_service_ext</name>
    <filename>classboost_1_1asio_1_1datagram__socket__service__ext.html</filename>
    <templarg>typename Protocol</templarg>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>abd4e2434a9e9ad6483f290fe5587b1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a3fe254d7b7b74b4e5950414d5d8ea632</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::implementation_type</type>
      <name>implementation_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a2d4ec5163f092862bcbf59f7a33c9405</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a936c3bd89e7c9b9ec8d5c328594d756a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a525f27974b67d888796e278fc58e4851</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>datagram_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a251789f76de2702883aef5844da98692</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>acf797737e7f2a31e46cff5b379c9c7f8</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a2582cf081ae667c39826d16db4a887a2</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a2a664b93f9dd80da6d0f287d50a50f2f</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>abe069eff765900cf56e60d56a6a51665</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ac4156f667ea1c628c266a9e23caaaae2</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>afab16db99c42afa858ef2585b921c9da</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_type</type>
      <name>native</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a65a4116a78d8cd7a5f65e66b2c9ab310</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a3de7f13f0f937a60c1401ab93e046332</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>adaeb84004a1d9664bcdf7fe7ac33cccd</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a0e1b398c4cc1d6eb1707323de653a9c1</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>abe2f8e273801fee8e4b5354fa50370cd</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>aac60f5a25ef14173229c776c0f4c34ec</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>add953f4f2c04fbe838263fee7b20ef4c</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a80772ba1df143c23c09e0505c0a18384</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>afbd55ead80a5a846689e8e7cfff70407</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a1db88c748e97c1515b800465d42547dd</anchor>
      <arglist>(implementation_type &amp;impl, const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a58832ec941b46ed719b206ce02c36c93</anchor>
      <arglist>(const implementation_type &amp;impl, GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a3ab4012367f9026c22bcc022c5f9a033</anchor>
      <arglist>(implementation_type &amp;impl, IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>afdbd007bbc3b38664f09c2c44110870f</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ad8fb2a9d97efd72d528b1f703ad9c957</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>add207e7c2b18aad5263822edb677d15b</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a4c48f626a8f7a9945e876f6d986528ff</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ad2f596973f260df06d833f37eda14c26</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a56fa21251f750fc3f9e53c9c8c4cf1c2</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a50a6692bf92b8ac633e991128f11a285</anchor>
      <arglist>(implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>af59d85591c6de2bb91a40b28818135ef</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a27771042e9ee627232dc98a0811d643b</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const ConstBufferSequence socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>af9836f79d536679128ad560585950850</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a5f91f23d0c5e8dd57559f4d22e5b9ccf</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>aaa660284f9c9c65af7ffe669422833e8</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const ConstBufferSequence const endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ae1f55cc1a1f4832ad1548ec7f629e1a6</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a441975e7aeccb2ba8533ffc74e9b404c</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a9f8178562dd8dcaf509990e9d9a7c147</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t)) async_receive(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const MutableBufferSequence socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a7e4fbb4a60fa841607200694094f3364</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a0a1de59af0b64ee1357850b6d4ba18dd</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a7d407ae5403cb5ae6573ad5cac526320</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const MutableBufferSequence endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a20de356f88d589545c46c48b2dedc22d</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>const endpoint_type &amp;</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a29d2722f998a084ba8d7b7f41bfa63a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence &amp;</type>
      <name>buffers</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a604f5aa62a06cec8fe7593e7e43ecef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a4ffbe2ffb0fd01eb45ca477be1afa069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence const endpoint_type &amp;</type>
      <name>destination</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ad8b472be1a9e909cf46c5415a6467a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence const endpoint_type socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ab9571ccf5955def14f7cae6892f35e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence &amp;</type>
      <name>buffers</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ad1a82df6fd6319347ce3969828896bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>aaf18b0e72276f09ac33e03518491e67d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence endpoint_type &amp;</type>
      <name>sender_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>aae300bff9a2fd543d63aab05578d2b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence endpoint_type socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ac972690141e3315501ccfcdfba74489a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::debounce</name>
    <filename>structvsomeip__v3_1_1cfg_1_1debounce.html</filename>
    <member kind="function">
      <type></type>
      <name>debounce</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1debounce.html</anchorfile>
      <anchor>aa5f1bab9cb53f4f12e448a78d447085f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>on_change_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1debounce.html</anchorfile>
      <anchor>a2186c25b4b804a0d68fc1c0522ac798c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>on_change_resets_interval_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1debounce.html</anchorfile>
      <anchor>a5ea5ff423dd6c608e398100c3a91350e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::size_t, byte_t &gt;</type>
      <name>ignore_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1debounce.html</anchorfile>
      <anchor>a1319a818c519442940269ec3a1de42cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>interval_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1debounce.html</anchorfile>
      <anchor>a1a7710340f81081e138dafb5d8716f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::steady_clock::time_point</type>
      <name>last_forwarded_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1debounce.html</anchorfile>
      <anchor>ae37ce5b92e6461550fb8b4ead7fcfa17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::deserializable</name>
    <filename>classvsomeip_1_1deserializable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~deserializable</name>
      <anchorfile>classvsomeip_1_1deserializable.html</anchorfile>
      <anchor>a304778061e6163548a0186fa988a79fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip_1_1deserializable.html</anchorfile>
      <anchor>aa1c08103667ed6f4fc0d016bb7f2294c</anchor>
      <arglist>(deserializer *_from)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::deserializable</name>
    <filename>classvsomeip__v3_1_1deserializable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~deserializable</name>
      <anchorfile>classvsomeip__v3_1_1deserializable.html</anchorfile>
      <anchor>a68052abb91eb2f199587244db8501f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializable.html</anchorfile>
      <anchor>a88a8c906c515179d67e7d4165595b3c8</anchor>
      <arglist>(deserializer *_from)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::deserializer</name>
    <filename>classvsomeip__v3_1_1deserializer.html</filename>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>af0d1adf3e801317b2c9b62c823492002</anchor>
      <arglist>(std::uint32_t _buffer_shrink_threshold)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a20fbb46a3415a30a5ebda8517582c34d</anchor>
      <arglist>(byte_t *_data, std::size_t _length, std::uint32_t _buffer_shrink_threshold)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>aa3f409e11e9d78144f21165e673030d5</anchor>
      <arglist>(const deserializer &amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~deserializer</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a1e0b6a46e77f0993f2598476429daff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>afc712ea1564260d6fc9463a1330c3120</anchor>
      <arglist>(const byte_t *_data, std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>append_data</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a400065e0a7a76abd558cfe60b2175db6</anchor>
      <arglist>(const byte_t *_data, std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>drop_data</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a0c7dc97c874feb1eecbb4c5f2a43d557</anchor>
      <arglist>(std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_available</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a56d0e984fc23ccb42d8c7b54be133ed7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_remaining</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a2aff0dc69899b033e48d4a0a6c3bfbc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_remaining</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a3d83131eb26fa2f812b41048f23c821d</anchor>
      <arglist>(std::size_t _remaining)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_impl *</type>
      <name>deserialize_message</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>aa358f2e5e22b509034d9018aba455140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>ae03767b8a68bdbcc648f86571bf6edbe</anchor>
      <arglist>(uint8_t &amp;_value)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>aa6eb64261a7832d3c4f1c9117008d9e1</anchor>
      <arglist>(uint16_t &amp;_value)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a2ef63ce443cc3f7197a5fc99d8a31d8b</anchor>
      <arglist>(uint32_t &amp;_value, bool _omit_last_byte=false)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>ad3ab742891c472ddf2b2249799d15826</anchor>
      <arglist>(uint8_t *_data, std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a6b589fb36db94b75ca27db909bac5005</anchor>
      <arglist>(std::string &amp;_target, std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>ad68cdff113bc749606bf4f637c90e08e</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;_value)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>look_ahead</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a8350f2f7d2cf39ddbf4f42bd730b5d25</anchor>
      <arglist>(std::size_t _index, uint8_t &amp;_value) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>look_ahead</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>af68ff15aa6191e96a9ed6346603ebf0f</anchor>
      <arglist>(std::size_t _index, uint16_t &amp;_value) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>look_ahead</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>ace2a86fe7ba2fde22d65bcca8842d318</anchor>
      <arglist>(std::size_t _index, uint32_t &amp;_value) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>reset</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a4dd9affe4a2213ccfa0b316bc313137a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; byte_t &gt;</type>
      <name>data_</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a27236a02b3e885a8f049c4f2b8f44662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; byte_t &gt;::iterator</type>
      <name>position_</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>aeba7a76e4794fc6506661449991be9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>remaining_</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a08fa472e45f0a2e0fe21117182289e45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::deserializer</name>
    <filename>classvsomeip__v3_1_1sd_1_1deserializer.html</filename>
    <base>vsomeip_v3::deserializer</base>
    <member kind="function">
      <type></type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>a08556730647bda0cbf2048c955c72d88</anchor>
      <arglist>(std::uint32_t _shrink_buffer_threshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>a343d37c980ff9209be1b49fdfb4340fc</anchor>
      <arglist>(uint8_t *_data, std::size_t _length, std::uint32_t _shrink_buffer_threshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>add8d3774757b2d1854759826ccb1092c</anchor>
      <arglist>(const deserializer &amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~deserializer</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>a63ce5668e06c95aa0f762341f31f4f1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>message_impl *</type>
      <name>deserialize_sd_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>abab805d7ae1f05b262fb18256d31dd00</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::e2e</name>
    <filename>structvsomeip__v3_1_1cfg_1_1e2e.html</filename>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>custom_parameters_t</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>ae37481a5fe0171866bb4d34638fbf184</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>e2e</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>a13601c7e551950db7e471359bc980ef5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>e2e</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>a1146f556f10e8d5fcf8fb9f880ce20ec</anchor>
      <arglist>(std::string _variant, std::string _profile, service_t _service_id, event_t _event_id, custom_parameters_t &amp;&amp;_custom_parameters)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>variant</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>af11a9f593b41308126091f23389a1078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>profile</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>adea70496bebfd80ec4161a2986f5304e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_id</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>a00b0fd2bdc678ac4583d505d89754514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>event_t</type>
      <name>event_id</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>ab804ab09f3cc7597e8f370e238813361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>custom_parameters_t</type>
      <name>custom_parameters</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>a61f332fc249e9cbb088bf9c9c9457d55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e_crc</name>
    <filename>classvsomeip__v3_1_1e2e__crc.html</filename>
    <member kind="function" static="yes">
      <type>static uint8_t</type>
      <name>calculate_profile_01</name>
      <anchorfile>classvsomeip__v3_1_1e2e__crc.html</anchorfile>
      <anchor>aa1ddbef798a4d2cbbc65e46c4b4079be</anchor>
      <arglist>(buffer_view _buffer_view, const uint8_t _start_value=0x00U)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>calculate_profile_04</name>
      <anchorfile>classvsomeip__v3_1_1e2e__crc.html</anchorfile>
      <anchor>a263c8c32fbc2c5830d97f5ab0ecf0966</anchor>
      <arglist>(buffer_view _buffer_view, const uint32_t _start_value=0x00000000U)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>calculate_profile_custom</name>
      <anchorfile>classvsomeip__v3_1_1e2e__crc.html</anchorfile>
      <anchor>a801a043e43398a424186cf22bc8b1cdd</anchor>
      <arglist>(buffer_view _buffer_view)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::e2e_provider</name>
    <filename>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>add_configuration</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>ab950549e6cd4ba13a1de3f50171c156b</anchor>
      <arglist>(std::shared_ptr&lt; cfg::e2e &gt; config)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_protected</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>a3810d71c7678fe4126d181ff4f9974cc</anchor>
      <arglist>(e2exf::data_identifier_t id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_checked</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>a74fc02ab37d0e0985936816066376efc</anchor>
      <arglist>(e2exf::data_identifier_t id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_protection_base</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>a0e9e9bebe966b5d12fc7dc765399460f</anchor>
      <arglist>(e2exf::data_identifier_t _id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>a52957d94d5d6d18362b206f3a8d70c16</anchor>
      <arglist>(e2exf::data_identifier_t id, e2e_buffer &amp;_buffer, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>ac185d0ec78bcd7fe22cb08015a7c29c7</anchor>
      <arglist>(e2exf::data_identifier_t id, const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::e2e_provider_impl</name>
    <filename>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</filename>
    <base>vsomeip_v3::e2e::e2e_provider</base>
    <base>plugin_impl&lt; e2e_provider_impl &gt;</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>e2e_provider_impl</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>abf898db0f982f82e71448ef9f3a34031</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~e2e_provider_impl</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a6146ac8133711e7e10ddc38419be13cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>add_configuration</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a06ff2f8ec81c1cfbc5b4dbdfe8bb5736</anchor>
      <arglist>(std::shared_ptr&lt; cfg::e2e &gt; config) override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_protected</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a7ef2001f4622caffee5dbcd46124c419</anchor>
      <arglist>(e2exf::data_identifier_t id) const override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_checked</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a121178cece22c09d723a1e81cb205b9d</anchor>
      <arglist>(e2exf::data_identifier_t id) const override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_protection_base</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>aed6309110a8418c144901be47aa29e12</anchor>
      <arglist>(e2exf::data_identifier_t _id) const override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a15a38819f91f40200bea498848e6859a</anchor>
      <arglist>(e2exf::data_identifier_t id, e2e_buffer &amp;_buffer, instance_t _instance) override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a7a02f7d6cb43679136cb886dc0d2d45e</anchor>
      <arglist>(e2exf::data_identifier_t id, const e2e_buffer &amp;_buffer, instance_t _instance, profile_interface::check_status_t &amp;_generic_check_status) override</arglist>
    </member>
    <member kind="function">
      <type>vsomeip_v3::e2e::profile01::profile_config</type>
      <name>make_e2e_profile_config</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>aec7936686c3b2885373be419ad936471</anchor>
      <arglist>(const std::shared_ptr&lt; cfg::e2e &gt; &amp;_config)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint</name>
    <filename>classvsomeip__v3_1_1endpoint.html</filename>
    <member kind="typedef">
      <type>std::function&lt; void()&gt;</type>
      <name>error_handler_t</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a26529e9a8ce197b1322ef8ebb84408e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; endpoint &gt; &amp;, service_t)&gt;</type>
      <name>prepare_stop_handler_t</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a6674de79f3ba2ed9130a5ddb5a4287da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>add26a9648e536109f521064a04a436de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>ad06a71c4037f8a73dc9e2f24cca938e5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prepare_stop</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>afc657cab3f1b60b7b97abf2dc7a80a41</anchor>
      <arglist>(prepare_stop_handler_t _handler, service_t _service=ANY_SERVICE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a36a9294914c22354f04707fae9ef70d8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a8f1e447750a6b87ec43c9d6021f05333</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_established_or_connected</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>aa3b1eec25e1713553d012aa968cfe028</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a5642f2e3b1ccf0f7a5b2d9544d82f426</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a4932917a566041e94a502de5a1ed11d7</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_cmd_header, const byte_t *_data, uint32_t _size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>ac8342c74d09a069e5816b21f21901a29</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a2ef30e029c56b980761e0a1d83eeca30</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enable_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>af677d6122b2f7144ed04602ab280c553</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a02f26ceabecabf34bcb820e2abcfd5f3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_default_target</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a7198217a8b79d8d342ee7a594edcb32c</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, uint16_t _port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_default_target</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>ad9a5c22653aed4980956664a02001fe1</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a3a39d68351992a9b4fb1a8fd59719d5e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>adad927849a7ec30a7e30ee73ea02beea</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>aa2fbba6034ecd86f243b6b9d19cf7d46</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>increment_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a25f3385c83bfa30b982cf7405b2844dc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>decrement_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>adbdeb4834142e150345f32dd898371a7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>adb96ad929034c18f2003830338d826de</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a19b99152b38777291339993d0a6e6897</anchor>
      <arglist>(bool _force=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>ac3e4f7a7f3a3842cfcb4ad9b9571859e</anchor>
      <arglist>(error_handler_t _error)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a1f7da6b7e42a63917c606fb6d478be81</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a28913c09d6fc90dcb890595a19bec8d2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_established</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a51f4eef0e2fcb57a4eb4b0142cc7a26e</anchor>
      <arglist>(bool _established)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_connected</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a623c8f96f307287a9a5fb64c85c9773b</anchor>
      <arglist>(bool _connected)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_definition</name>
    <filename>classvsomeip__v3_1_1endpoint__definition.html</filename>
    <member kind="function">
      <type>VSOMEIP_EXPORT const boost::asio::ip::address &amp;</type>
      <name>get_address</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a89e4e2f4c3504ad93c14fb1fb2efdc83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a5003440fdba6b9326d41ed78f825daa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a5cbf51c78af8a847f41b93dc378c64e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>ab7b535ec1dc66745e040684c306a3994</anchor>
      <arglist>(uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a4d802d71a496afe383f6a2bfd5f7c654</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>endpoint_definition</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a642ffe43d5f90217ec9275011ec53701</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, uint16_t _port, bool _is_reliable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>ab682b0ea9e4d5b5e1505b57c57dc2788</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, uint16_t _port, bool _is_reliable, service_t _service, instance_t _instance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_host</name>
    <filename>classvsomeip__v3_1_1endpoint__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~endpoint_host</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a3d3609bd54d5de33dcc3e92cae8b794a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>aa9b1ae0e1570a24e5b4e8ef79624c2d8</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a92a752605bc8955fc2da81e3d83df7c8</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a769dd844d17c975ce9f566d886420708</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *const _receiver, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a9d541419b857dea0837d81aba6ffaae0</anchor>
      <arglist>(uint16_t _port, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a4738dd8ce13a7470a4b37389099c0b36</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_impl</name>
    <filename>classvsomeip__v3_1_1endpoint__impl.html</filename>
    <templarg>typename Protocol</templarg>
    <base virtualness="virtual">vsomeip_v3::endpoint</base>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a580aee8cfede03e29e662039ea3dc9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>abe79806370eb575ece3bffcd516c0867</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_service &amp;_io, std::uint32_t _max_message_size, configuration::endpoint_queue_limit_t _queue_limit, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a4f9925f1a7514e9af6cc1e2085d88547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>ac9d88f312c70b8acd27c1faee718b6d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_default_target</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>ab5b96b87ffab4ec03696cf2a9d5b4883</anchor>
      <arglist>(service_t, const std::string &amp;, uint16_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_default_target</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a063c224213f6836e75abbc51501201d2</anchor>
      <arglist>(service_t)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a1a437eb727289136c64586fce6759b4d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aa61ba21518b80cd28168c057f42f1136</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>ac72d64b723824cb091b18f3efd1c4b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decrement_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>affaed29e3d9e9561ae485ba099a019b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a322bba8a64ccbae7d4333ed617da8928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>ae59e9125d9582eb1988ac2cfd0b30e69</anchor>
      <arglist>(error_handler_t _error_handler)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a5ef1369075bedd2b31f8ae9a7ec9b06e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aa876b864cd057c381f7d8807d49eb286</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a8f8de4211c56f7bab7321f79fb790070</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a14dd5aed50b63627e9e75a176f04e723</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a95ba391cff53a6735d4e22a6683d1ba1</anchor>
      <arglist>(bool _force)=0</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>cms_ret_e</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a36eb32b873548d781cadafbddd346dbb</anchor>
      <arglist></arglist>
      <enumvalue file="classvsomeip__v3_1_1endpoint__impl.html" anchor="a36eb32b873548d781cadafbddd346dbba15186e65ba660b06877a7a54e84b2edb">MSG_TOO_BIG</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1endpoint__impl.html" anchor="a36eb32b873548d781cadafbddd346dbbaefd1f02de4771e98d840a4d53a1489e8">MSG_OK</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1endpoint__impl.html" anchor="a36eb32b873548d781cadafbddd346dbba57c0347b8753dfe73a4f2df9eac58d70">MSG_WAS_SPLIT</enumvalue>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>find_magic_cookie</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aaf5ef447f4ab2448169009c736894409</anchor>
      <arglist>(byte_t *_buffer, size_t _size)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::io_service &amp;</type>
      <name>service_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aaab2c643a6a9dee0a744544b0e8ebed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; endpoint_host &gt;</type>
      <name>endpoint_host_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a9a336e3c05136670d8bb3f9e9618ea00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; routing_host &gt;</type>
      <name>routing_host_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a67b77acb05e6da113100a1499e247a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_supporting_magic_cookies_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a95fab90528f52589b086dc3d652cac29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>has_enabled_magic_cookies_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a0645325614919ecdb16b6318b57a3f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, uint8_t &gt;</type>
      <name>opened_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a9ac6336a0b5bdd5f692af087cc99a763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a93341d9ef3ee06ceab093cf33fcb3bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; uint32_t &gt;</type>
      <name>use_count_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a817d19b1a09c1da690510265416a5c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>sending_blocked_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a6a9dae71d49634336bf76cd6f6780491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>local_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a8ff928773bcd1a180aeaa9bb634162ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>endpoint_type</type>
      <name>local_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a3c9f320a762bfa83faa7cf992006b8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>error_handler_t</type>
      <name>error_handler_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aafb65a1f13017a25cde7284002ee830c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>error_handler_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a5bd63ecac6426ea3c8ec9d6f4cddbb87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const configuration::endpoint_queue_limit_t</type>
      <name>queue_limit_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a620be8934f4d4f80d1a98dc4c0f7f09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>configuration_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a6b383bb9d06b0602de269343f9dce0c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_supporting_someip_tp_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a795489cdc652f0944cc282e55e8b2bfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_manager_base</name>
    <filename>classvsomeip__v3_1_1endpoint__manager__base.html</filename>
    <base>vsomeip_v3::endpoint_host</base>
    <member kind="function">
      <type></type>
      <name>endpoint_manager_base</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a41c9a25a2b078a92f4be32113c3a2f83</anchor>
      <arglist>(routing_manager_base *const _rm, boost::asio::io_service &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~endpoint_manager_base</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>ac3a01c39758f25e5e4f9b399d1bdbc36</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a40f8b4465d9ca407d679d836b6338b48</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a96d52dd074aa6c627ecb287e157edd80</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>ae0dcf0b9193b5b4180d2b807430301da</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a188876ae998b0c16b3604b83db73740e</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a84828c32d6a4559cc515b5ba0fdcab2e</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_set&lt; client_t &gt;</type>
      <name>get_connected_clients</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a30be38a09817e7d813334f6e03a03bf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; local_server_endpoint_impl &gt;</type>
      <name>create_local_server</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>adf956381ced1dabdcc636cf837c841c6</anchor>
      <arglist>(const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>acf279e2cfba03fdbddb212374bb0daf4</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>ae5fb3b878057976db3744b1e927e544e</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>acc1b34f438aed018f4d9808a06d84381</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *const _receiver, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>release_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a3bd46faf250e4034f65c985a599036d5</anchor>
      <arglist>(uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a70dcbecf8d87f70208c6452a6dcebb48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_client_states</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a6bfc8b216390963274f1b8f99c73eb32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::map&lt; client_t, std::shared_ptr&lt; endpoint &gt; &gt;</type>
      <name>get_local_endpoints</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a9f653e3f3f5c13e1e4ce096e501622d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>routing_manager_base *const</type>
      <name>rm_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a2b88917c0630dca658f868a696a78b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::io_service &amp;</type>
      <name>io_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>aab83426f39bb94a5f4184fdc4514de36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>configuration_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a27d8b5c87e9262acc0fbd9fd7b3831ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_manager_impl</name>
    <filename>classvsomeip__v3_1_1endpoint__manager__impl.html</filename>
    <base>vsomeip_v3::endpoint_manager_base</base>
    <member kind="function">
      <type></type>
      <name>endpoint_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a2aed00fd39be554d760e5c6bdaa67ca2</anchor>
      <arglist>(routing_manager_base *const _rm, boost::asio::io_service &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~endpoint_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>ad156b251c0ccc504e94a42a068ce6488</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_remote_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>acfe1ecda149347dad01bae2e37a7ab33</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>find_or_create_remote_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a83c1b6e8e74549f2c3f88cf59a3d0bc3</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>is_remote_service_known</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a57d8b4adf3013d13f6b80e75ffe52d42</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, const boost::asio::ip::address &amp;_reliable_address, uint16_t _reliable_port, bool *_reliable_known, const boost::asio::ip::address &amp;_unreliable_address, uint16_t _unreliable_port, bool *_unreliable_known) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_remote_service_info</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a797fe26a27d30e229f1da0fccacd296e</anchor>
      <arglist>(service_t _service, instance_t _instance, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_ep_definition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_remote_service_info</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a35238efb8551410b1a21d27be6ec8f62</anchor>
      <arglist>(service_t _service, instance_t _instance, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_ep_definition_reliable, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_ep_definition_unreliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_remote_service_info</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a24de3738d46bb2d3bec100dee5109d1a</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_server_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a583ebba4b9ca9b09d5e8987d6ae20bc8</anchor>
      <arglist>(uint16_t _port, bool _reliable, bool _start)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_server_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a68994418381380db84f849e2798f7aae</anchor>
      <arglist>(uint16_t _port, bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_server_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>aea20a5f6a60399583188e58a33c577d1</anchor>
      <arglist>(uint16_t _port, bool _reliable, bool _start, service_t _service, instance_t _instance, bool &amp;_is_found, bool _is_multicast=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_server_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a6faf014bef82a93f8c0bb14b961a1cf5</anchor>
      <arglist>(uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_client_endpoints</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a37cd232947c7a3c5add93e663a4b48f8</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>find_or_create_multicast_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a8600790a99674d1ec291911865dc70a6</anchor>
      <arglist>(service_t _service, instance_t _instance, const boost::asio::ip::address &amp;_sender, const boost::asio::ip::address &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_multicast_endpoints</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>aff49520bc4879e49caa442cfcd4f82c7</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_selective</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a504a0ac37981252a5decc6675694696a</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a5b6adfad1a776d7c955b425ee555b422</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; local_server_endpoint_impl &gt;</type>
      <name>create_local_server</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>abecaa535d4ce8834ea29c3d6da9dd34a</anchor>
      <arglist>(bool *_is_socket_activated, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>find_instance</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a0f4f3c47455e24759ccc4d9a9c8b388d</anchor>
      <arglist>(service_t _service, endpoint *const _endpoint) const</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>find_instance_multicast</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>aaaafd77c543b168efe809d61046231d9</anchor>
      <arglist>(service_t _service, const boost::asio::ip::address &amp;_sender) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_instance</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>ad4efe29ca0139369889272de5995af82</anchor>
      <arglist>(service_t _service, endpoint *const _endpoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_instance_multicast</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a4a9099e70d271d7867045f1539a352be</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>ae6e6579102c5e8824998aeaa0e794d84</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>adf5bc5d759171f767f81af123188b81d</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a6a0d8426655e36b4e451489221654513</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *const _receiver, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a5387ec64a3dab76606be3f8cdf7306ff</anchor>
      <arglist>(uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_client_states</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>ae220bde1e6eb4abfebbbe9d76de6ab22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_server_states</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a83c2fb1583876254d8b7700260c2dd02</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::sd::entry_data_t</name>
    <filename>structvsomeip__v3_1_1sd_1_1entry__data__t.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; entry_impl &gt;</type>
      <name>entry_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1entry__data__t.html</anchorfile>
      <anchor>a2aa69d6b4517f06c7ce53ac8a438ab08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; option_impl &gt; &gt;</type>
      <name>options_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1entry__data__t.html</anchorfile>
      <anchor>a0cda8dfde4487c53eb7d4dd46d6150b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; entry_impl &gt;</type>
      <name>other_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1entry__data__t.html</anchorfile>
      <anchor>a460af3a5e8bea7546030a358d7499caf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::entry_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1entry__impl.html</filename>
    <base>vsomeip_v3::sd::message_element_impl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~entry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a20afa3d60c8f9a78e163e054b56a768b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entry_type_e</type>
      <name>get_type</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a7b320bde6c4850325d9ffd96d9d07801</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>afd18d141a00e5bb3a2a751d3afa728db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a2488b5364068a5b72073d65a3857e4d8</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>abe437ec3fc6af8b718e83a9f3e143d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>acc8c0e53aa3df2738907f82bc7a6796e</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_major_version</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a1c1256ff06b253aac32d4af2cae50d9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_major_version</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>add0a2480db56a9e0738ecd96a98f1bb8</anchor>
      <arglist>(major_version_t _major_version)</arglist>
    </member>
    <member kind="function">
      <type>ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>af27af0d093890fba4d5d3ea5870e93bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a20861d14aa0835d2ac0bc5cf56eb1b79</anchor>
      <arglist>(ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; uint8_t &gt; &amp;</type>
      <name>get_options</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a256c7c3093167f99f1ce8a4304234192</anchor>
      <arglist>(uint8_t _run) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a0e4bb935a6abd5610a6e46ec4b8ce0d9</anchor>
      <arglist>(const std::shared_ptr&lt; option_impl &gt; &amp;_option)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_service_entry</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a1bdbe09a21a0d133bb943dcd694f9b31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_eventgroup_entry</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a7bb83956b93c38e509f96acd448e5afc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a2d2220fef91842f3906062983a94c1e2</anchor>
      <arglist>(entry_type_e _type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a65c05ca58e8fd78b63b36cf044713103</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a84523c37c901a582da5a13a5d5c51fcd</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_num_options</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a844196bd53a314b7f3331381aae58b87</anchor>
      <arglist>(uint8_t _run) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>entry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a7abbede4f4a97a5f7cfffa223774fc07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>entry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a91a07a10bb606da48eff4d6232c4a74b</anchor>
      <arglist>(const entry_impl &amp;_entry)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>entry_type_e</type>
      <name>type_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>ad6ef51d02968c31bab86a2c59842af11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a90bd2a0728547361ad297879e0e54d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>add6a580a8f648947d0ee285a3965ed9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>major_version_t</type>
      <name>major_version_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>aecf408de6f6a3fa59db4811cedd65677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ttl_t</type>
      <name>ttl_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a816450413b0c5a27d70fce76aef849c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>options_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a31bcf33799ab95b7946728688ace516a</anchor>
      <arglist>[VSOMEIP_MAX_OPTION_RUN]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>num_options_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a05974e88567fe4bbfef38354d207140e</anchor>
      <arglist>[VSOMEIP_MAX_OPTION_RUN]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint8_t</type>
      <name>index1_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>ab84c49c5e5ac4debef9047eda3aa97e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint8_t</type>
      <name>index2_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a123180b399ab54c890cab8bab15feba5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::event</name>
    <filename>structvsomeip__v3_1_1cfg_1_1event.html</filename>
    <member kind="function">
      <type></type>
      <name>event</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>a39958d9f22c89a4fd1ac4c1f3815b204</anchor>
      <arglist>(event_t _id)</arglist>
    </member>
    <member kind="variable">
      <type>event_t</type>
      <name>id_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>afb2690e38a53b52fa8707646e4696d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_placeholder_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>abd7e1d237c002d98b43b65b0a7ec1081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_field_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>a9eeea35836aaef3bdfc90286319dbfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>reliability_type_e</type>
      <name>reliability_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>a83110d039e042b3610bc529278e30b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::weak_ptr&lt; eventgroup &gt; &gt;</type>
      <name>groups_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>a38f2cfc22f2cf1785c3394e667372448</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::event</name>
    <filename>classvsomeip__v3_1_1event.html</filename>
    <member kind="function">
      <type></type>
      <name>event</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a8d4d14d180147dd1b5fdd70d27d4aaa2</anchor>
      <arglist>(routing_manager *_routing, bool _is_shadow=false)</arglist>
    </member>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aaf86180b83f4d5c6caf16cae4f2d1b61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ac2f58f9b1d28ff1b6d3b25f1cede5136</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ae27f7f4ceced402b54eb56cd41f8a50a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ad4401515e4637e7371f1864b823b885e</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_version</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a32cceeeb39e22c16b2105853675063f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_version</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ad59ddd100fc4bf5df9ba177d6f2baca4</anchor>
      <arglist>(major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>event_t</type>
      <name>get_event</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ae9a450bada4d6a79fe3641f8838bbebc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aab483df1e373c5b3996506e28fee95e6</anchor>
      <arglist>(event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a7ce0ff0d9bfc97ddc9d53141007e0ee8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ad589b978a57def4e01e72631187a6da6</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload, const client_t _client, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>afa5b47c806f298cb21f78e24e4cd5290</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload, const client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_payload_dont_notify</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aed33cf6bb630c6e46456c1cf485c658e</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_payload_notify_pending</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a4a8c1f76560a78c8871673c5a055a292</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a8e11727037e0b198b3a620e16ec8fde1</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ad236011e37ff3d887e5d366c622f139d</anchor>
      <arglist>(bool _force=false)</arglist>
    </member>
    <member kind="function">
      <type>event_type_e</type>
      <name>get_type</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a1a4e26177b72220c795733ee470fcebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a31aa79bbd368fd0c24fd56134fc61114</anchor>
      <arglist>(const event_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>reliability_type_e</type>
      <name>get_reliability</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a4070686f06876879e4cceb695fb0a03f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reliability</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a8cb346537c41300f8c5ab29c1f641747</anchor>
      <arglist>(const reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_field</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a6222df1999d5e28263c768ee373493e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_provided</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a99a3ec96a9cbb5410fe2289aa87c8e9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_provided</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>afaa1aff6f5140d57ae24749353551095</anchor>
      <arglist>(bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_set</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ac56daf228332086fbe08624ac609fc7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_cycle</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aa554747575290881bdd4c821503a16e3</anchor>
      <arglist>(std::chrono::milliseconds &amp;_cycle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_change_resets_cycle</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a086253ad4b5374993189f8d5bca9bd37</anchor>
      <arglist>(bool _change_resets_cycle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_on_change</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aaa144f5d7d36afd417b10b6472a141e4</anchor>
      <arglist>(bool _is_active)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_epsilon_change_function</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ab4cd4d82f15bd9ae236fca9d77562931</anchor>
      <arglist>(const epsilon_change_func_t &amp;_epsilon_change_func)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; eventgroup_t &gt;</type>
      <name>get_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a6c69bfccd0426ae47f24eecde86deaff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; eventgroup_t &gt;</type>
      <name>get_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a0a9b850416115967d2c6db3813b1ac38</anchor>
      <arglist>(client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>af85e03ed4dac5417a21666b46281b7f1</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a5977e6708692a6b90cf8ef2733b11c3c</anchor>
      <arglist>(const std::set&lt; eventgroup_t &gt; &amp;_eventgroups)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a6e87e92381ea1f4db9c92f6b87bbb50d</anchor>
      <arglist>(client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a126bd0dc7b5cecc3caa773618145ca8e</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ae066047c2af3f44ef5f2edb9147f4745</anchor>
      <arglist>(eventgroup_t _eventgroup, client_t _client, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a194f6319a6753764bb414ba4929aad23</anchor>
      <arglist>(eventgroup_t _eventgroup, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a51af446ab7b6a6e6152bff142b3aeaa4</anchor>
      <arglist>(eventgroup_t _eventgroup, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>get_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a4dc6ad877d97befb22a9157c3df84066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; client_t &gt;</type>
      <name>get_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a0971104bcc125b693e0a7698359aa329</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a94f5c6f67554667a3e4aa0d8a63d83c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_ref</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a38bab788926cda078662934ff219f52e</anchor>
      <arglist>(client_t _client, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_ref</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a6ceb465c0c53d68ab70240213e8108e5</anchor>
      <arglist>(client_t _client, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ref</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a9ddab3bf9b9748a21a0df6491f11eaf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ref</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ae9a85a0c8b6690fd321d3fb3adfbcc9f</anchor>
      <arglist>(client_t _client, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_shadow</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a374da7952dff7d34e94d1c793f14ba96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a3a26551e8b67e5b2f8ad89bea61a0d95</anchor>
      <arglist>(bool _shadow)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_cache_placeholder</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a71f0e78b70fc2df4101cc535d030353d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cache_placeholder</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a5ffff482829ad892a3c7ae0d57bdb2a4</anchor>
      <arglist>(bool _is_cache_place_holder)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_subscribed</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a496be51d1e30563ec74cb71dd3659028</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_pending</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a98acf56e86702767ab2054458ddc6253</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::eventgroup</name>
    <filename>structvsomeip__v3_1_1cfg_1_1eventgroup.html</filename>
    <member kind="variable">
      <type>eventgroup_t</type>
      <name>id_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>a38997430189a265b4f95a51b05372790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; std::shared_ptr&lt; event &gt; &gt;</type>
      <name>events_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>a38ddcb36c680a0f7237c8b8846d476ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>multicast_address_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>ae203107c5473acd4d731a72e3735edab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>multicast_port_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>a396b012fe5e46ec3aaf6d383adfdea83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>threshold_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>abf32a4c3a03dd0fc4b161afeb786770c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::eventgroupentry_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</filename>
    <base>vsomeip_v3::sd::entry_impl</base>
    <member kind="function">
      <type></type>
      <name>eventgroupentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a91e71800c17e84d7d9bb19e10eb73c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eventgroupentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a5c9142db70b2bfc1ee79b475b94365b1</anchor>
      <arglist>(const eventgroupentry_impl &amp;_entry)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~eventgroupentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>ac93dde30ff048ce02a38982240d11867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eventgroup_t</type>
      <name>get_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>aee47aa2531f3d31c10b0b17864f67c6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a6c20331acf49b7b03d2754ff94e7ba84</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_reserved</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a6a8f6692a658dd8510ca3f73a97dc0f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reserved</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>ae81bdf085ecdaf777706d5355b24572e</anchor>
      <arglist>(uint16_t _reserved)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a61eab7ad4772f006e3cf4cee02c7f2d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>af249285fdf554f6c539dc849752d169c</anchor>
      <arglist>(uint8_t _counter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>ac77db904aa1331841091c10659c40059</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>acfbc08e1c0f199e74785f3a36713954e</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a25b6a61c5d835d949c440c883d5be33c</anchor>
      <arglist>(const eventgroupentry_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>ad4a7b017ea2fe52739eaa03dafef7e2b</anchor>
      <arglist>(const eventgroupentry_impl &amp;_other, const message_impl::options_t &amp;_options) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_target</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a85fd3ad852f0b910725dd0387b75f559</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get_target</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>aced0fe2ce4130842982886efb2d76a49</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; selective_option_impl &gt;</type>
      <name>get_selective_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a15089e6fd61182212696f0111cdf07fa</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::eventgroupinfo</name>
    <filename>classvsomeip__v3_1_1eventgroupinfo.html</filename>
    <class kind="struct">vsomeip_v3::eventgroupinfo::subscription_t</class>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a6c4076a571b95c8a505b8a30c29aad8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa05009f4c7c3b82518de168f95d80c33</anchor>
      <arglist>(const service_t _service, const service_t _instance, const eventgroup_t _eventgroup, const major_version_t _major, const ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a647614814827c25c7f364c29501a37f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a00f07672e7f5af66393b227d1bc448f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a603ce3c3cd75974766e8848ebc3938b7</anchor>
      <arglist>(const service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>af8d9b1bb8acbdc12b730ab3dc934d412</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>adf83b9dda8d076865c84a0dfdc62d2f9</anchor>
      <arglist>(const instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT eventgroup_t</type>
      <name>get_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>ae2e89c09b7368c0bcd1e8f23ecdbfeec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>add813ca069e2624052f60305d6e8762c</anchor>
      <arglist>(const eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aadc608860fd9acc54428f195a3f8442e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_major</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa54ed7b187c7e30f3e49745da4be81fa</anchor>
      <arglist>(const major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a450cdce2b12195b721075a39deec196d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a69228f601abd698c5d83629061e3a12d</anchor>
      <arglist>(const ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_multicast</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aaa4d439cebe41427d3f8f84e97bfd29f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>get_multicast</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa6d0285188c9e4da23fd51576deba677</anchor>
      <arglist>(boost::asio::ip::address &amp;_address, uint16_t &amp;_port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_multicast</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>ac33c635edc75aec959c275f7bef50268</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_sending_multicast</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a677cb6a79badcc17d4747436e379e51d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::set&lt; std::shared_ptr&lt; event &gt; &gt;</type>
      <name>get_events</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa5ff5320a22a3c2602774430d4b72a1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>add_event</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>afe28ce70e7f62ca53ea62b822b9ee993</anchor>
      <arglist>(const std::shared_ptr&lt; event &gt; &amp;_event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>remove_event</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a2890c7a148d603fc8ff9fa80ad6346d1</anchor>
      <arglist>(const std::shared_ptr&lt; event &gt; &amp;_event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT reliability_type_e</type>
      <name>get_reliability</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa78fa3bb84b92d717631d949acddc25b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_reliability</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a60b6cbe88d5a595494b0100f7c06faad</anchor>
      <arglist>(reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_reliability_auto_mode</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>af7b6c680564ebd42075cf7fbd23e64bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::shared_ptr&lt; remote_subscription &gt; &gt;</type>
      <name>get_remote_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a28c050c6382c99dba705cfa566c56d68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; remote_subscription &gt;</type>
      <name>get_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a1ca8c403c1acb863a91bb11390b7f94d</anchor>
      <arglist>(const remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a04b42e7acf2e249f8aefb20d4204c3b4</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription, const std::chrono::steady_clock::time_point &amp;_expiration, std::set&lt; client_t &gt; &amp;_changed, remote_subscription_id_t &amp;_id, const bool _is_subscribe)</arglist>
    </member>
    <member kind="function">
      <type>remote_subscription_id_t</type>
      <name>add_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a5af74d6d5e42f3804ae330066663344e</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>remove_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a8509af715f47ded44e63826c92f890c2</anchor>
      <arglist>(const remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_remote_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a86e9eb05b2bc05597f7dad948f80211c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::shared_ptr&lt; endpoint_definition &gt; &gt;</type>
      <name>get_unicast_targets</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a084e94f953c88523ee32ff5ef6748dde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::shared_ptr&lt; endpoint_definition &gt; &gt;</type>
      <name>get_multicast_targets</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>af0baa04b90b53651cd93d079b7bf0d6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_threshold</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>abb58164994ac1517edd667e15f17226c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_threshold</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>adac0311479ae9a10aaa3ac183417b62f</anchor>
      <arglist>(uint8_t _threshold)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_selective</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a5d60fbf101f93e7f39e6ca12b737f39e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>send_initial_events</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>adf39ba2f8259517d11ddf109f2c56977</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_reliable, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_unreliable) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::sd::message_impl::forced_initial_events_t</name>
    <filename>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; vsomeip_v3::endpoint_definition &gt;</type>
      <name>target_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</anchorfile>
      <anchor>a4361ab907e7bed40afaf755799588443</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_v3::service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</anchorfile>
      <anchor>a3728e3cf4b9143594b62ebb9bac8b572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_v3::instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</anchorfile>
      <anchor>aaf2ae58206c8a6bcd94dff82a2fda4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_v3::eventgroup_t</type>
      <name>eventgroup_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</anchorfile>
      <anchor>a5064de638728256982021a82d851406a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::trace::header</name>
    <filename>structvsomeip__v3_1_1trace_1_1header.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>prepare</name>
      <anchorfile>structvsomeip__v3_1_1trace_1_1header.html</anchorfile>
      <anchor>adc2874f6a1cf10678309ceda801dda7b</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint, bool _is_sending, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prepare</name>
      <anchorfile>structvsomeip__v3_1_1trace_1_1header.html</anchorfile>
      <anchor>adcf1f4ebb764f4ac23a173d84c90b6f5</anchor>
      <arglist>(const endpoint *_endpoint, bool _is_sending, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare</name>
      <anchorfile>structvsomeip__v3_1_1trace_1_1header.html</anchorfile>
      <anchor>adac7eb9dee191d629a6072240ae13268</anchor>
      <arglist>(const boost::asio::ip::address_v4 &amp;_address, std::uint16_t _port, protocol_e _protocol, bool _is_sending, instance_t _instance)</arglist>
    </member>
    <member kind="variable">
      <type>byte_t</type>
      <name>data_</name>
      <anchorfile>structvsomeip__v3_1_1trace_1_1header.html</anchorfile>
      <anchor>aacb617aa28215ec9a02a5e0e478e18e8</anchor>
      <arglist>[VSOMEIP_TRACE_HEADER_SIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::detail::reactive_socket_service_ext::implementation_type</name>
    <filename>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</filename>
    <base>boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</base>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</anchorfile>
      <anchor>a65dacc6516f50e196d36934d5cf2a873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</anchorfile>
      <anchor>a65dacc6516f50e196d36934d5cf2a873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</anchorfile>
      <anchor>a65dacc6516f50e196d36934d5cf2a873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</anchorfile>
      <anchor>a65dacc6516f50e196d36934d5cf2a873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</anchorfile>
      <anchor>a65dacc6516f50e196d36934d5cf2a873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>protocol_type</type>
      <name>protocol_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</anchorfile>
      <anchor>af2c3686e187af00fbe9adfc72e5944b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::detail::reactive_socket_service_ext_local::implementation_type</name>
    <filename>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</filename>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</base>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</anchorfile>
      <anchor>ad27c4f4f59135ab479515aee61a96b12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</anchorfile>
      <anchor>ad27c4f4f59135ab479515aee61a96b12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</anchorfile>
      <anchor>ad27c4f4f59135ab479515aee61a96b12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</anchorfile>
      <anchor>ad27c4f4f59135ab479515aee61a96b12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</anchorfile>
      <anchor>ad27c4f4f59135ab479515aee61a96b12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>protocol_type</type>
      <name>protocol_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</anchorfile>
      <anchor>aa3617676b286e93511c6b3e14bbbb616</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip::ip_address_t</name>
    <filename>structvsomeip_1_1ip__address__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>aaa36ec8f32852824675a6b14ca76007c</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>a1ea2ee579e709fc8f11b387d3638a6f1</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>a9e96fdfd409ba6b4bf51e66f9e929588</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>ipv4_address_t</type>
      <name>v4_</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>ad095322f1c6a72fb25b53fc3b6b8aa3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ipv6_address_t</type>
      <name>v6_</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>a482405fd42865ed01e9c132f5999d768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union vsomeip::ip_address_t::@0</type>
      <name>address_</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>ae2e68d31ee946a714180ca7ef5d59891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_v4_</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>aa9c4483e265654ec69f4a2b0082fbe95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::ip_address_t</name>
    <filename>structvsomeip__v3_1_1ip__address__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a76433cc4d0173919f27b27851bb8435d</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a2087fa9404526f67803389280ac29ce5</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a97667e2f963b5e7bb8e1402fb285972b</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>ipv4_address_t</type>
      <name>v4_</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>ab1550cd2985f6e3faec40c55d8e36cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ipv6_address_t</type>
      <name>v6_</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a528a242cac41d50945d082772867849c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union vsomeip_v3::ip_address_t::@1</type>
      <name>address_</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>aca7a3b08c422f3e5c84228228a9c4122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_v4_</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a6ac234d63458a238767fd6643e99e74e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::ip_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>ip_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>ad4c927de9c9c87d99e4d72627e93ec88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ip_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>ac09f35587e616b8882bd50178afa8f06</anchor>
      <arglist>(const uint16_t _port, const bool _is_reliable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ip_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a28c29d71b846ca8e15374e982f9546fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a35aa63e93ee26ea0605db2648c35552d</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_port</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>af9aef68bd8a85bf4f385d2cef0002f32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_port</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a8d78d558c642ed82d1b5676109f7aa0c</anchor>
      <arglist>(uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>layer_four_protocol_e</type>
      <name>get_layer_four_protocol</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a2166d8e2cf9eef6bcb5895296d7dc9ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_layer_four_protocol</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a910d6e027f0877fd1cb8d3c6b91ba805</anchor>
      <arglist>(layer_four_protocol_e _protocol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_multicast</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a25ebb8014cd74a671daa4dd0c0a8a2cd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a49dbad525fec1589d150bcbc42a424b8</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>aaeefde13d56e83aff937537b40c42ca8</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>layer_four_protocol_e</type>
      <name>protocol_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>ab83307012027453ef10ea547ee4aa365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>port_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a108d2a5a51ca47a618aeddfcee7ddf2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::ipv4_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</filename>
    <base>vsomeip_v3::sd::ip_option_impl</base>
    <member kind="function">
      <type></type>
      <name>ipv4_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>ac53f24bd119ab844a635edc402fd6d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ipv4_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a0f34224612417b1e0ab345bbece9b2aa</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const uint16_t _port, const bool _is_reliable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ipv4_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>af21f0711a000fc4549882474662fab02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a8a9661ed0dfa0927d9647b96ff9d923b</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>const ipv4_address_t &amp;</type>
      <name>get_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a232b22addda52c80250060c04216ae20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a5d29bdb0c64fcad1c56fa37b1a823d1d</anchor>
      <arglist>(const ipv4_address_t &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_multicast</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a1f5b00e6643a36185b62dd61997286ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a5fd44eb999f6b22aa4661b17e9de87a4</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>adf0ea9dcac4e4487995dc4bd8c444100</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::ipv6_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</filename>
    <base>vsomeip_v3::sd::ip_option_impl</base>
    <member kind="function">
      <type></type>
      <name>ipv6_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a550f89dd2a49607aedf4a773b16693b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ipv6_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>aef5481ecf03b6d8db995e856f569d578</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const uint16_t _port, const bool _is_reliable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ipv6_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a17a74c054f7fc8d05922357bdf91e65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a75e6dd2d483866f67d0f02edcf8d0e98</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>const ipv6_address_t &amp;</type>
      <name>get_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a537cde39fdf8346eb9c5328ef7692546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>aeef708d7bace94da57e1f4497f4d66a5</anchor>
      <arglist>(const ipv6_address_t &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_multicast</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>aa3745a44a426412c4866c1bde5100eb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a1f85f63b9ff5bce01a72c0a72f79b595</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a080a07018a568cd98bff081322056ebd</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::load_balancing_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>load_balancing_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>af141ddd56d03744f8516315ed8ebd954</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~load_balancing_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a5628944c0f62c3c49c73b0f41be61e98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>ae9421eba646aae27689fd7883abd4a57</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>priority_t</type>
      <name>get_priority</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a890d7680fc8eb7e4d23a86be1896fc35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_priority</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a244cc9243b9e9ca673408467c49945a6</anchor>
      <arglist>(priority_t _priority)</arglist>
    </member>
    <member kind="function">
      <type>weight_t</type>
      <name>get_weight</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>ab2508dee0790fb95621c2ce1cde76fea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_weight</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a81f0ba9c078bb2b29e3f3257d40d4207</anchor>
      <arglist>(weight_t _weight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>aee2330c35ec252b8ad63e6307da5a81b</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a873782bf6f9dfa07013f4561c21d2acc</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::local_client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1local__client__endpoint__impl.html</filename>
    <base>vsomeip_v3::client_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>local_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>aac90d951f9429448fd6d62725b458f89</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_remote, boost::asio::io_service &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~local_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>ac5406439462676355630576cf5ee959a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>aecb5787e62cec7c360a7ae3d3da75559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>a0a7cdade56ae24ec728c7ecf21e06b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>ac811ca2404364cc4518c3e924d9faf0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>aabde5c7d4b3c77cc48418aa36d26f9f9</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>af114a565a679d5d7ddfac6ee7d42c5e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>a11535c714a9ca0ad08acf3c9762bde1f</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>a8a5c71edd86b23db02c54c99bbf9c612</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>a01276b195b2c79292ce9ce4ad1337da5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>a682d739de69b7c18279c5b6f9b6f0d2b</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>a25d51a78e70e87abee45df3789556525</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_cmd_header, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1local__client__endpoint__impl.html</anchorfile>
      <anchor>af54cc61afb37b50b717b91b18abbc854</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::local_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1local__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::server_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>local_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>ab6d616befe3f8afade89b92058de89d6</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_service &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration, bool _is_routing_endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>local_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a3f1d238c314cb103d450652bdc658c9d</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_service &amp;_io, int native_socket, const std::shared_ptr&lt; configuration &gt; &amp;_configuration, bool _is_routing_endpoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~local_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a57fdea4002cc393e599db1f0325aed4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a2819b5efc5c3410f3017d31ac2ca9175</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a475485168ef412e8ab92f68f944f2918</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>aebc0c7bce16d973bb62417db8352e2a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>ac06c9efa97720ae80b60e9afb0c928c1</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>aacce3e23aa01ab728ca7ddc3d4cf2298</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt;, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>aaaa0d9d4db4819a9f9fb569822892aba</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a33ba4f651af9c2fc03f814f9b6778924</anchor>
      <arglist>(const queue_iterator_type _queue_iterator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a8766757ffb020a4b63061d657b9e0786</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>ae92ca92812eeaf8cd2e9083c28c9c0d4</anchor>
      <arglist>(service_t, endpoint_type &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>aeec4a4ae7fd247a9c054aeb22d182d96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept_client_func</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a4acc16be01b2e4b48947a5286f8d60c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a3655043063c12cdca948ae07149e3656</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a44ff49d089f0a5de8c8769a0162cd5ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>a9b0db251c3d7eee06c0dcea3f278a813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>assign_client</name>
      <anchorfile>classvsomeip__v3_1_1local__server__endpoint__impl.html</anchorfile>
      <anchor>afbba68465d4228bad8ef3516a1a32ab2</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::logger::logger_impl</name>
    <filename>classvsomeip__v3_1_1logger_1_1logger__impl.html</filename>
    <member kind="function">
      <type></type>
      <name>logger_impl</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>aee0fb45f17fc091b090f6781b4359cf0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~logger_impl</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a616df5826c8d77e76e2f417679ba07ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a23e8ace90c2cad1a74918bad4fa2ad9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_IMPORT_EXPORT void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a050862fb6f8392f57b320fa4652fcb37</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; logger_impl &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a87bbaf220bcbd103857ce32a323f8e08</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::message</name>
    <filename>classvsomeip_1_1message.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~message</name>
      <anchorfile>classvsomeip_1_1message.html</anchorfile>
      <anchor>ab95c2d1e10666d08311b69c14f3817e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip_1_1message.html</anchorfile>
      <anchor>afd7090aa3ce80eac3c39eed6d758f278</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip_1_1message.html</anchorfile>
      <anchor>a40b8c057d95fe36b9005107fa49244b3</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::logger::message</name>
    <filename>classvsomeip__v3_1_1logger_1_1message.html</filename>
    <member kind="function">
      <type>VSOMEIP_IMPORT_EXPORT</type>
      <name>message</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1message.html</anchorfile>
      <anchor>ae5a2297f6325cc6e2d236ea8250a3769</anchor>
      <arglist>(level_e _level)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_IMPORT_EXPORT</type>
      <name>~message</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1message.html</anchorfile>
      <anchor>a46f39cacd36e148305f32942b1c1aaf5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message</name>
    <filename>classvsomeip__v3_1_1message.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~message</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a0aaffcc5aa81ab464885d10d5224453f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a6a86453067b47ae50f3ad51fb23e9c5f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a29da78fa079648bac34a1e6edf048370</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT uint8_t</type>
      <name>get_check_result</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a03082cc8cf8669fdcce385459cb34876</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_check_result</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a84d55c18621cfdaa83329573449074ee</anchor>
      <arglist>(uint8_t _check_result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>ac864ee58f609f950fef2fd03b3c1a1fc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT uid_t</type>
      <name>get_uid</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>ac135cb3436d038ebc6a9f39d24007942</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT gid_t</type>
      <name>get_gid</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a0357c1900f33da668fc601b76f654b81</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::message_base</name>
    <filename>classvsomeip_1_1message__base.html</filename>
    <base>vsomeip_v3::serializable</base>
    <base>vsomeip_v3::deserializable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a9c29d7154ff9921b113d1dedd1a2433d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>ad2841db4584457c764ee615228806f42</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a8f493ac37342d67aff6374f235a18084</anchor>
      <arglist>(message_t _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>aeab75c70db3efddcaa3bc9c1b7253991</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>ac893c96c90f2de3f43b6676164283829</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a1778e31394ef3c080ef7355bc551432b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a8bf42c63f07c8d02d7220e84b4fa133c</anchor>
      <arglist>(instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>af3b809f8fb811e93ecdab11dbc7afde6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>acff1d44d850d00903a7044c90259079c</anchor>
      <arglist>(method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a2db758d7e9660260ecb92229cd296717</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a5ff1597ecf22effcd31d12aec6ed72a4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a293d783a6acf131614facd5a37bb48d0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a346cb96ee2a2af99fc79392582864952</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a0f74d9d0e5b053d605131648f7f10eff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a2393caaaef771e8f3f9df2b946bf183d</anchor>
      <arglist>(session_t _session)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>aed413dcff073c52c32a9ce1e967d4689</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>ab282fa56aedd646fb0854b269bb9e964</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a07419e576450927edf66b8d930add44b</anchor>
      <arglist>(interface_version_t _version)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a0178f936205851e6c556a1c69b5a5e30</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a89e2af99c938ffc14799a5c06b5d7fa5</anchor>
      <arglist>(message_type_e _type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a3921ef25027a6bb3c9c4c2be81aa2567</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>abc01aef90a71fc2198d8054d71de9471</anchor>
      <arglist>(return_code_e _code)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>aeb59fcc15d3f6d169672beff063409aa</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a6b42ef008b0a3d152e0b421f46e983c7</anchor>
      <arglist>(bool _is_reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a321aac7e1f1c0f286f0cf7b3a9e4945f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a1807287dbae87924d4333ec4dab38d58</anchor>
      <arglist>(bool _is_initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a284b41280de20126be750ba91993df4b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_is_valid_crc</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>ae3a4e3a0b3dac6c454a46188b1e5b3e0</anchor>
      <arglist>(bool _is_valid_crc)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message_base</name>
    <filename>classvsomeip__v3_1_1message__base.html</filename>
    <base>vsomeip_v3::serializable</base>
    <base>vsomeip_v3::deserializable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga206a275026b03ba26247ff60e9338d1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga97bd6547b9a37814b40cda1e738d9b4f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga32153dd846e5082a5ecfd0303fc00c64</anchor>
      <arglist>(message_t _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga3a42fc1bb1ad36324e13997dc0566d0f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga8ae0c5b2d33e75aa2874b7ed292bb267</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga4c2e06c479c0b2b30d0d4a5650b32504</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaf23fc5b260569ff85a3dc3bf4a58bbc4</anchor>
      <arglist>(instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga6f2bb6b746b5929a9178a509dcb23599</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga68a5d57ba30a1e866aa49c3219bee34c</anchor>
      <arglist>(method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gadf78d2cdd0bba783a9ef4a5b41b51e9f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga69cfe08df5efb5d539fe84577bacd794</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga9cc75d61f405607cb6ea77deb00f88c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga862708a8912fae6f16af9678db4855bc</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga0764d0bcc57088b5da686a6cf1d4e3cc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga65d0115210a280b4375dc19a06696e05</anchor>
      <arglist>(session_t _session)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga3d8631c6a0e6a8342926c2243fc7d70f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaf890115f9dd45d05f0ac8b28365228fc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gad9767ddceec2f86fde60714ef7d6ea74</anchor>
      <arglist>(interface_version_t _version)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga75ba46b7ddebf62f00ba16bb735453e5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga33dd198f3a6f6273d1335fea3ecbfc26</anchor>
      <arglist>(message_type_e _type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gab92e9e4ed2400f16625e0eaf5bd27944</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga40161de103fefe67c8b341119535a607</anchor>
      <arglist>(return_code_e _code)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga6db8a0c37b1521863aa8898da3882185</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga47faf333d2aa5646b1565e743793ea39</anchor>
      <arglist>(bool _is_reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaaccdd9fb11d64ad8b2befff7f9f1a797</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga203ffb0137f0c387945893bdd3c816df</anchor>
      <arglist>(bool _is_initial)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::message_base_impl</name>
    <filename>classvsomeip_1_1message__base__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_base_impl</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>aa76256b982987b29a7a19f681c639cfd</anchor>
      <arglist>(const std::shared_ptr&lt; vsomeip_v3::message &gt; &amp;_impl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base_impl</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a7e718327dd2d276b10294352eaacbffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a4ebe1b255e28061a9eedb04ba864bd6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a465355216049c65d91b6c51a7baa5c83</anchor>
      <arglist>(message_t _message)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a6c073bf189ed7d0ddc8598d1246c8cf4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a1be9fbe7b8b444b5ffcac75c597f48c8</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>aaa8616acfa252e0a7e9d35131f0e52da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a9362a0b0f2befc15cf43f36986d436a6</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a96eca7e52d4f93adc89d9931391f5f4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a47d420d81e295ac56e29aacc719def57</anchor>
      <arglist>(method_t _method)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a4b17ff39af390e5b4b6f9003d7255b2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a177516c0cf773b3a741c403a8c52d2ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>ad614eecfc65c4b4b99e0be0192d4714c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a864c7f1fb9ac01cbd0b4a81db5c22dd7</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a721b0837454e09191aaf047e44e97cf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a715ff31f6dec6f2db7f1e3a8716d4454</anchor>
      <arglist>(session_t _session)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>abf91e845edb6977edb5a3b20538d6795</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a0485626afdc26811de5ea6aeafea4b06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a7beaef1ea2bfd02a285fb51f416484bc</anchor>
      <arglist>(interface_version_t _interface_version)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a5e9bf35ac6c8c68a392f2099bd21a451</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a5161fc8fa8bbfdb0dcf2092865a123fe</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a57146fda7c589367be96ac9687422107</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>aa6c2234ac02a2f85a6abc83f456715ea</anchor>
      <arglist>(return_code_e _code)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>ae247aa2a7c0f9f5c5dec79c2254cab1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a63165d688658717d48e2e33458d336a9</anchor>
      <arglist>(bool _is_reliable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a9884953475d1f1c7677a653a2a986e79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a5745acabea8dd7d2617fdea6e8981415</anchor>
      <arglist>(bool _is_initial)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>afa8120a248226a3676f406abead2cee7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_is_valid_crc</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>ae0a9f145ce13642e763207e9a0d4fc28</anchor>
      <arglist>(bool _is_valid_crc)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; vsomeip_v3::message &gt;</type>
      <name>get_impl</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a938121976d1d5601c69c7d27ee051e44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; vsomeip_v3::message &gt;</type>
      <name>impl_</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a1c1a312098e433c4a3d293072041d4ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message_base_impl</name>
    <filename>classvsomeip__v3_1_1message__base__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_base_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a6f170b0c442378cd29217defe8e66245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a87ac0452cb0116aaacf8814a6c55ab0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>af28c5376f467377c82f6228b77c00c81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>acce6416688a1505c684c1e9015aa41ca</anchor>
      <arglist>(message_t _message)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a5c1f0502a7fe72ac4305b2cc4a9d348b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a398c92e9a542db5aac1afcb7abb09dea</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a6febdf7dd653864634d7a6e63855b57a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ab3192747940d0102b32fd20018f63921</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ae5941447aed261fd6650d23812059522</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a7a3530350814ae711a961804dcd8aaa2</anchor>
      <arglist>(method_t _method)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>aef9f48e4d88175b2c0c3bdd652bdcc8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a799d2cbc56cdfd97b4729b8a6c59e4b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a69b24f874ee694034017ec60a9936c08</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a0ea499f517d1819f2d92178f8e8e6155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a14b5bdd07364baecf51fe1b1f5b8e729</anchor>
      <arglist>(session_t _session)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>aabc481892c9554ec9379e7c60c2575f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_protocol_version</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a6efc472a5d196c1438db4831d59d1b0b</anchor>
      <arglist>(protocol_version_t _protocol_version)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a31292312822290d8e13f5ef9ef8da126</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>adb6d628ccc759bb7399a5e4939f21108</anchor>
      <arglist>(interface_version_t _interface_version)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>af8d48205a70a1857b6091ca410fa9aab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a213d9e20d8d52a61b2ba7c114d41547b</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ae1da5543ddbf6ab4a834e2786657dbf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a0c5feeb36fc6102e2efcac1a43bcd711</anchor>
      <arglist>(return_code_e _code)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a858350623aeebeaf9530a8c2f630537c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a2cd1567a8961c8c8c64dd907d7f4cd89</anchor>
      <arglist>(bool _is_reliable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a93543429d34b52c57a14ec4cef988450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a961b5c16bc31108c7bd5c5fea640d31b</anchor>
      <arglist>(bool _is_initial)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message *</type>
      <name>get_owner</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a35023182c1ea46b2fda682119e35810c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_owner</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a300e1a5df5ff7de9243d31e3df1fb032</anchor>
      <arglist>(message *_owner)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>message_header_impl</type>
      <name>header_</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a24ef72275b602039549fc8f01b655a8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_reliable_</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ae82c6965c1c24fdfa5795bd93cff8fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_initial_</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a3a09a0994368fa2a972a80fbae854927</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::message_element_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1message__element__impl.html</filename>
    <member kind="function">
      <type></type>
      <name>message_element_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__element__impl.html</anchorfile>
      <anchor>a35646e7ad3853ef2b4f547c092445290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>message_impl *</type>
      <name>get_owning_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__element__impl.html</anchorfile>
      <anchor>a211884140b38a21dc7f07b6683cd2fc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_owning_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__element__impl.html</anchorfile>
      <anchor>ab851a4681022d53bc0e06d2dcf780010</anchor>
      <arglist>(message_impl *_owner)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>message_impl *</type>
      <name>owner_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__element__impl.html</anchorfile>
      <anchor>a9c8fa65eb738e5985885d6d87818fc68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message_header_impl</name>
    <filename>classvsomeip__v3_1_1message__header__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::serializable</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_header_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>ac969976ecaac2ae7f67ec97bf1bf873d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_header_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>afb20e56fe2945f123d561a3e7e9537c2</anchor>
      <arglist>(const message_header_impl &amp;_header)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>af625148bc100606916fece8306217b6b</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>aebe3501f5d56c8ccced27fb8ed33dc9f</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_base *</type>
      <name>get_owner</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>ad7981ef85d6e3ed25c8c5a5bf6a3c431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_owner</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a5ff6b7bbe5608a17fe04038b9a2af1ff</anchor>
      <arglist>(message_base *_owner)</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a3a53f2f6b7c7a65a537105bc3b49b679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>method_t</type>
      <name>method_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a37faea3fb59be0cb6638358cb739ae8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>length_t</type>
      <name>length_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a932909b4f61d7048c04666d82cdd0634</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>client_t</type>
      <name>client_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>ac3b2d4bba3a872b8a263bc128624eb36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>session_t</type>
      <name>session_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a26516c6cb4298944ad301a79425b5dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>protocol_version_t</type>
      <name>protocol_version_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>acb36d3b844370fcb3752db9d1bade1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>interface_version_t</type>
      <name>interface_version_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>af4880873a66bb869a1dfb7a454828fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>message_type_e</type>
      <name>type_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>ac4bb436b51225f68df5bee156a522d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return_code_e</type>
      <name>code_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a647fe6e179ed292cde4c1839b8ea3fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>affb26070dde360b58da284010d56788c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>message_base *</type>
      <name>owner_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a73d2a713bbed9d94ff49e92a8969cd20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::message_impl</name>
    <filename>classvsomeip_1_1message__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base_impl</base>
    <base virtualness="virtual">vsomeip_v3::message</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_impl</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>aabb8c4856d34fcb486f832f6fd8eb853</anchor>
      <arglist>(const std::shared_ptr&lt; vsomeip_v3::message &gt; &amp;_impl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_impl</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>af4144280deae22b3ef5ea9c5d2738ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>a5baae912456c52da3e22899fff59e32b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>af3d6f7083885315cf0f32e2c49760c46</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>a17936debd1981ab40628376a08512914</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>a19db6c7f564ac0947979f6261c00ed60</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message_impl</name>
    <filename>classvsomeip__v3_1_1message__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::message</base>
    <base virtualness="virtual">vsomeip_v3::message_base_impl</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a2236d47606c229749cd870f5956d8504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a4f26f589d22f9b8a31584d4484fe1a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a613c83e66e1e8f5b10c79cf52ca2b395</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_length</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a8931e28033259cc2f863b60eca770067</anchor>
      <arglist>(length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a5d208176898115f6149420cd7ac6bf50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a399d32c94f3268e496718e0c099cf355</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a831ed9dca1f0384482a7a16ac66950c0</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>ab394a5e8c9e65ce491baa621e1efd571</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_check_result</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>abd0a9e0aad3ac995f8ad92924830cb69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_check_result</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>ac624acb071162af8782a2e8f589cc49d</anchor>
      <arglist>(uint8_t _check_result)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a364a0017564870742c9c7354a8e88067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uid_t</type>
      <name>get_uid</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a864bde0d5c5ba65ea6bf7d2343b6456f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_uid</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>ac423c8e6858fb2da87bd1872271f3d78</anchor>
      <arglist>(uid_t _uid)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT gid_t</type>
      <name>get_gid</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a46a5f7d1e35cbdb17d6d731dd11f0f00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_gid</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a112db23635608679c97b8428de57d2d3</anchor>
      <arglist>(gid_t _gid)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>payload_</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>aec6e55183d111aaff8e8f46d05141bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>check_result_</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a08ad8757f1521c3592c96640e43d4c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uid_t</type>
      <name>uid_</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a3668330e1688fec4e32d799a76da9270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gid_t</type>
      <name>gid_</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>ac4e76af63ee3abd558512631cb430f36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::message_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1message__impl.html</filename>
    <base>vsomeip_v3::message</base>
    <base>vsomeip_v3::message_base_impl</base>
    <class kind="struct">vsomeip_v3::sd::message_impl::forced_initial_events_t</class>
    <member kind="typedef">
      <type>std::vector&lt; std::shared_ptr&lt; entry_impl &gt; &gt;</type>
      <name>entries_t</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>afcc594f1f3188718dfedea0e32cfc38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::shared_ptr&lt; option_impl &gt; &gt;</type>
      <name>options_t</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>af52e7d58792493907be0ce4751c90632</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>message_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a751d6ed257e8feb18f4e542bd9b38350</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~message_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a174e1bc6c96221b7f8fa267dbe9d305a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ab2fe5ba313631d1b13c877d87b9dea2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>aabe1ae8566d1961c99fe63147822d6ab</anchor>
      <arglist>(length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>length_t</type>
      <name>get_size</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a9c235a056a34f2e842caafb2d2b569bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reboot_flag</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a315c40fa5839246d0aa1b9cda064d06a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reboot_flag</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a008d6aa17be8de6a60c7d4d46a85b305</anchor>
      <arglist>(bool _is_set)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_unicast_flag</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a743310784c1d46ad8857a646ffd83446</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unicast_flag</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a3ea87ad64e48a74d32e23b78bd2b7f41</anchor>
      <arglist>(bool _is_set)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_entry</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a2b70898599a8447266c3a4a9dcf6a996</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>aab5773a66b3cbbf9c2358ef4df40fdde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const entries_t &amp;</type>
      <name>get_entries</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a4616a84e77ce3e04a9219c1d2212001b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const options_t &amp;</type>
      <name>get_options</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a1cbba631cf8cb1e4ed9142ce268c6949</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_entry_data</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a959ae6551da97e876bc1869ba890088d</anchor>
      <arglist>(const std::shared_ptr&lt; entry_impl &gt; &amp;_entry, const std::vector&lt; std::shared_ptr&lt; option_impl &gt; &gt; &amp;_options, const std::shared_ptr&lt; entry_impl &gt; &amp;_other=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; option_impl &gt;</type>
      <name>find_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ad950a70d46919574ed06afa654a7183f</anchor>
      <arglist>(const std::shared_ptr&lt; option_impl &gt; &amp;_option) const</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>get_option_index</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a41158bf1bd1f6b52ea144d455cd6e7ff</anchor>
      <arglist>(const std::shared_ptr&lt; option_impl &gt; &amp;_option) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; option_impl &gt;</type>
      <name>get_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ab82fadd4c4241e641f543fb4cc2778f5</anchor>
      <arglist>(int16_t _index) const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_options_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>aa13f2bce4ddeef59d8c97e29983c2666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a0bc4c635c50150c87543e262041d4c57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a623241abcd37cab0504d42baf3f7ea59</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_check_result</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a8e4fe1826605e240c69fae683456413d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_check_result</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a1abccc9be4f3f1a833b31f8f5038905b</anchor>
      <arglist>(uint8_t _check_result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a14766f0a01009d1841b54497dcf4d9e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a23d2347062426ae4d24cd8e2bc875efd</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ae344ed2966c4773e3f457278769da49c</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>length_t</type>
      <name>get_someip_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ada96a264e273e4b47db598ae2eb02187</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forced_initial_events_add</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ab13e6f76cacac7525c388c0371f01c49</anchor>
      <arglist>(forced_initial_events_t _entry)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; forced_initial_events_t &gt;</type>
      <name>forced_initial_events_get</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>afcd04bedb42253723badff270ee0bdf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_initial_events_required</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>af4e7037f94d19a3267a870ef6e865c94</anchor>
      <arglist>(bool _initial_events_required)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initial_events_required</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a36c21973e6d49b6db0f58dd6bb8c0aff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uid_t</type>
      <name>get_uid</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a196e27bf83255c2e7ebbdc8acd75d52c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gid_t</type>
      <name>get_gid</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ae333793d500b118e9ec9bd4de6037132</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::msg_statistic_t</name>
    <filename>structvsomeip__v3_1_1msg__statistic__t.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>counter_</name>
      <anchorfile>structvsomeip__v3_1_1msg__statistic__t.html</anchorfile>
      <anchor>a5cfaceac1f26a08f2182e2a65bbca77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>length_t</type>
      <name>avg_length_</name>
      <anchorfile>structvsomeip__v3_1_1msg__statistic__t.html</anchorfile>
      <anchor>a2e0520ca9ceab8230ba46a8294544680</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::netlink_connector</name>
    <filename>classvsomeip__v3_1_1netlink__connector.html</filename>
    <member kind="function">
      <type></type>
      <name>netlink_connector</name>
      <anchorfile>classvsomeip__v3_1_1netlink__connector.html</anchorfile>
      <anchor>a6244b67611f6c27c6ebd9abbf7fa62c3</anchor>
      <arglist>(boost::asio::io_service &amp;_io, boost::asio::ip::address _address, boost::asio::ip::address _multicast_address)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~netlink_connector</name>
      <anchorfile>classvsomeip__v3_1_1netlink__connector.html</anchorfile>
      <anchor>a0f6ebb33ba4d6134ad66cf21c2b9bee8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_net_if_changes_handler</name>
      <anchorfile>classvsomeip__v3_1_1netlink__connector.html</anchorfile>
      <anchor>acd7d0ead312d6831c02ecd6ffa5bd2bd</anchor>
      <arglist>(const net_if_changed_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_net_if_changes_handler</name>
      <anchorfile>classvsomeip__v3_1_1netlink__connector.html</anchorfile>
      <anchor>ab96efaa2d6bb363f307b3f712b814cc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1netlink__connector.html</anchorfile>
      <anchor>a9a4cd46072e1b2c7989ed6fd0f9c1876</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1netlink__connector.html</anchorfile>
      <anchor>a85ee1b3aa3b0a17c799d6829bca64966</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::nl_endpoint</name>
    <filename>classvsomeip__v3_1_1nl__endpoint.html</filename>
    <templarg>typename Protocol</templarg>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a9d630fbdc314ffedac22ec1c486acd7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::asio::detail::socket_addr_type</type>
      <name>data_type</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>ac69ce4f4fd0c9663c9b3616a30168c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nl_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a273831b6532c5dbb644c51edcdfa904b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nl_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a7fef860648f8d4beb4641503a35d5cf4</anchor>
      <arglist>(int group, int pid=getpid())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nl_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a2ed124e817ab3b6b7b734edb12b149bb</anchor>
      <arglist>(const nl_endpoint &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>nl_endpoint &amp;</type>
      <name>operator=</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>ad2614b66686acd54b7c972718c9c5c77</anchor>
      <arglist>(const nl_endpoint &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>protocol_type</type>
      <name>protocol</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a1573ade3baaf9944bf2bc31f6f14c4b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>data_type *</type>
      <name>data</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a0dc7c10f0bfa01e2b32629a92989cf91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const data_type *</type>
      <name>data</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a00697cff49721fd5e493449a640b056a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a533cde534d80c152fd87477a39b26b99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>ac172b5aecf787f35329d6da7ea167d93</anchor>
      <arglist>(std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>capacity</name>
      <anchorfile>classvsomeip__v3_1_1nl__endpoint.html</anchorfile>
      <anchor>a82baa3d5709a1a13781cecdccd677e83</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::nl_protocol</name>
    <filename>classvsomeip__v3_1_1nl__protocol.html</filename>
    <member kind="typedef">
      <type>nl_endpoint&lt; nl_protocol &gt;</type>
      <name>endpoint</name>
      <anchorfile>classvsomeip__v3_1_1nl__protocol.html</anchorfile>
      <anchor>ac10780777396c9a2597d50a57b6e2131</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::asio::basic_raw_socket&lt; nl_protocol &gt;</type>
      <name>socket</name>
      <anchorfile>classvsomeip__v3_1_1nl__protocol.html</anchorfile>
      <anchor>abc32f7453a833bd660991867e4c03de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nl_protocol</name>
      <anchorfile>classvsomeip__v3_1_1nl__protocol.html</anchorfile>
      <anchor>a4bc037af8fc315010eff811ac4cb3e69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nl_protocol</name>
      <anchorfile>classvsomeip__v3_1_1nl__protocol.html</anchorfile>
      <anchor>a35448118032c08ec652b14ebc33433cc</anchor>
      <arglist>(int proto)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>type</name>
      <anchorfile>classvsomeip__v3_1_1nl__protocol.html</anchorfile>
      <anchor>a1b8fb94a8e2ca9752193ad89efd51748</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>protocol</name>
      <anchorfile>classvsomeip__v3_1_1nl__protocol.html</anchorfile>
      <anchor>a0d41db3e2cd151a731788d0a20f27dc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>family</name>
      <anchorfile>classvsomeip__v3_1_1nl__protocol.html</anchorfile>
      <anchor>aa6afc5db305f55265b19d0e4d4e3d004</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1option__impl.html</filename>
    <base>vsomeip_v3::sd::message_element_impl</base>
    <member kind="function">
      <type></type>
      <name>option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>afe1bea7916ce0d18ae2d6eb0f7eddcb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>aa44d325fd0b4dd27be4054fa6287c87d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a99a3f554ce6e0189399c719e565e3145</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a10962b9c99ff1f505e15c5ae000a681c</anchor>
      <arglist>(const std::shared_ptr&lt; option_impl &gt; &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a844437f2e3934bda40466b968ccb59ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>option_type_e</type>
      <name>get_type</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a2c7e50f81c1fcb3b626907b7098899f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_size</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>accbf78e2d61ff5821f7735837cac11b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>abc29196c222e195e5cfd9f14c73cd7f6</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a8c42a38e5032ac3c9e049292504996eb</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>length_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>aee7319285832d61316a055282d37ff90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>option_type_e</type>
      <name>type_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a35f3c7431da4e06e451da088f762f916</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::payload</name>
    <filename>classvsomeip_1_1payload.html</filename>
    <base>vsomeip_v3::serializable</base>
    <base>vsomeip_v3::deserializable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~payload</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>af27c3869994faf1bf068822240051223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>acb4b355ddedb4cbf204c6b0c2baf9641</anchor>
      <arglist>(const payload &amp;_other)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>aa0853072f520d84a404eb46a275176c7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT const byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>aea33d4151bccbe65c584cc955207d7d9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>aaef2d0425a9032394f82f0c0cfc7884c</anchor>
      <arglist>(const byte_t *_data, length_t _length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>af1468f13e3998b16f9ae454dbd892aa6</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>a82c4e5f2fb6d274a4eff821e044f7c11</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_capacity</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>a13a54deff644a707cd19b19fa08dc665</anchor>
      <arglist>(length_t _length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>a32a567446cfae8d1a9ce25c35fb9480b</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;&amp;_data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::payload</name>
    <filename>classvsomeip__v3_1_1payload.html</filename>
    <base>vsomeip_v3::serializable</base>
    <base>vsomeip_v3::deserializable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~payload</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>ab956c07c2e34fe5bb723d83bd8ecf651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a98ff18efcd510f15c2259772384d03b9</anchor>
      <arglist>(const payload &amp;_other)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a2b50d2bfe7e0fbbe984f20d8626d030d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT const byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>ae3e692d5be3fb83cf7db4526fc004f80</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>ae2c620ade3e7ba30f3f139ddd390bc02</anchor>
      <arglist>(const byte_t *_data, length_t _length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a064fa7aba42fbffc77a347cd4eee7bae</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a693a7f2596a90ab626e64b2546427d78</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_capacity</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a65aba614b046504faca0ec3aff30ba12</anchor>
      <arglist>(length_t _length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a657da0268fd4efebe1c24533196f710d</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;&amp;_data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::payload_impl</name>
    <filename>classvsomeip_1_1payload__impl.html</filename>
    <base>vsomeip_v3::payload</base>
    <member kind="function">
      <type></type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a65525fa7027ef9c577f3e7a5bfca1c86</anchor>
      <arglist>(const std::shared_ptr&lt; vsomeip_v3::payload &gt; &amp;_impl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~payload_impl</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>aedb3d044457514a3d9ca5736509ec842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>ad2fb796a27eb66e3c62c9791b37d1685</anchor>
      <arglist>(const payload &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>ae1975925a000291250b6d2b22527a84b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a2eb9de5026a477a331d9407446bb5e29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a0c56c784695213bc513f3b9ba91dd60f</anchor>
      <arglist>(const byte_t *_data, length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a11046f4ec2f471fd57ee7932aee60dad</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>addb0526c88fb8d45ebfbad213070dc1a</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;&amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a31e2ed7261a6e2913f2e1b2eb7bf67fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_capacity</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>ac7e34c9001f6c4a45ba51c5f509b0d4e</anchor>
      <arglist>(length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>aef56cc6ef232bb77915e862e900df328</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>aadad512a9067f2a5318e9286a0ec7973</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; vsomeip_v3::payload &gt;</type>
      <name>get_impl</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a1f7231b775bf0f6fa23d0d8a236a0d9d</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::payload_impl</name>
    <filename>classvsomeip__v3_1_1payload__impl.html</filename>
    <base>vsomeip_v3::payload</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>afd81886b98c301efe8367eff5906f149</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>ac41d6e721720844ddb455206d6c7f27b</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>abff74f9b332dcdf924fecdb71885bde4</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>a5125ad490da5adb0c0583750d6d04ae9</anchor>
      <arglist>(const payload_impl &amp;_payload)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>afac8adc86e2995565a1804638a5cfad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>a9432c8d1d5bc72b53a40b6be49dc7b1c</anchor>
      <arglist>(const payload &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>ab52e6440ede191424fe5f8cb9450733c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>ae4482a70fc0375b37e4c7bcd41720e93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>aa36b331d2ba14e70d8f0c3341339d509</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_capacity</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>abba6629e3c1a5fa2e1b1ca278a0456af</anchor>
      <arglist>(length_t _capacity)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>adb35e685f53cc7dcee6042184832185c</anchor>
      <arglist>(const byte_t *_data, length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>ad128be9c017aaa984f0fbe2ed1334955</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>a3c18b39a10da1c11e7616ea8df2f89bc</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;&amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>a6a12cd1d4be3295cc70053bf62d2d3fb</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>af01bfc66f30135924bed583ff628f002</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::plugin</name>
    <filename>classvsomeip_1_1plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~plugin</name>
      <anchorfile>classvsomeip_1_1plugin.html</anchorfile>
      <anchor>a91e39c8c78d78c2775a4854d48c08144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip_1_1plugin.html</anchorfile>
      <anchor>a402f41047cde74662888cf9f5377a776</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip_1_1plugin.html</anchorfile>
      <anchor>a998815e1c844e9af48de32cee9901ed5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip_1_1plugin.html</anchorfile>
      <anchor>a809445ca0f5276efca6e07a6f4e24c3b</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::plugin</name>
    <filename>classvsomeip__v3_1_1plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin.html</anchorfile>
      <anchor>a8c09e55e65484e62c7180bbe5d6b60a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip__v3_1_1plugin.html</anchorfile>
      <anchor>a573ce3b98cb3648edaa4b68421749313</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip__v3_1_1plugin.html</anchorfile>
      <anchor>a625c6699a0add06eab8d65e3f9b2271a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip__v3_1_1plugin.html</anchorfile>
      <anchor>ab878d8563bcf9b67f1c1832fe0977525</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::plugin_impl</name>
    <filename>classvsomeip_1_1plugin__impl.html</filename>
    <templarg>class Plugin_</templarg>
    <base>vsomeip_v3::plugin</base>
    <member kind="function">
      <type></type>
      <name>plugin_impl</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>ab1c431545d05d75376d0bf2591b7f048</anchor>
      <arglist>(const std::string &amp;_name, uint32_t _version, plugin_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>a5d01c1314b091fcec5a476c52f2a7175</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>a76735553176ce6c4a30d122b22541923</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>a5562f40cb6cb06b03d03bcfc061a89c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>a8eb00539600dc8f552091747a03a0b62</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::plugin_impl</name>
    <filename>classvsomeip__v3_1_1plugin__impl.html</filename>
    <templarg>class Plugin_</templarg>
    <base>vsomeip_v3::plugin</base>
    <member kind="function">
      <type></type>
      <name>plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a18e7fb19c95dbd0181f3941c43042399</anchor>
      <arglist>(const std::string &amp;_name, uint32_t _version, plugin_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a4be520c96fb256efaafedb41442b0a03</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a1284a1f5d25dd362a7a4bdc7b2be7688</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>abeeed891e47859f52c786e666f40b5b0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a67a8a43c6dc95edbc9930d1f46d20f55</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::plugin_manager</name>
    <filename>classvsomeip__v3_1_1plugin__manager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~plugin_manager</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>ac7a8ae01db2ba76f9978ff42628f9b99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>load_plugins</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>a8117bed6bc189f1cc03c9b415a460138</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>abfb8e2a0156816d08320ef1c103d5b63</anchor>
      <arglist>(plugin_type_e _type, std::string _name)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; plugin_manager &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>a93c5f30c74930116f56207888506568a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::plugin_manager_impl</name>
    <filename>classvsomeip__v3_1_1plugin__manager__impl.html</filename>
    <base>vsomeip_v3::plugin_manager</base>
    <member kind="function">
      <type></type>
      <name>plugin_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>ac14fdd61e1c8e3e6d1b0417302fec75a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~plugin_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>ac19f37bdea245a083a92c24c9289f464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>load_plugins</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>aeadbaa42be7c5b52239045861c59c01d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>a3bc44e324142707a1898908cb717e8a6</anchor>
      <arglist>(plugin_type_e _type, std::string _name)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; plugin &gt;</type>
      <name>load_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>a3eef0ce3abda8e423fc4bd389b7483e3</anchor>
      <arglist>(const std::string &amp;_library, plugin_type_e _type, const uint32_t _version)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>unload_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>a9fa062885c04fcefdf9f7efe88bb8935</anchor>
      <arglist>(plugin_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; plugin_manager_impl &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>a2ae65b8d2129efc4f52ee81e390ef698</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::policy</name>
    <filename>structvsomeip__v3_1_1policy.html</filename>
    <member kind="function">
      <type></type>
      <name>policy</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>afcf491d35255aed22df8acf292f2d721</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_uid_gid</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a605aba0085b7feb649cd164cae9a4850</anchor>
      <arglist>(uid_t &amp;_uid, gid_t &amp;_gid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize_uid_gid</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a97f4c004662f3ff146a01365392dd492</anchor>
      <arglist>(const byte_t *&amp;_data, uint32_t &amp;_size, uid_t &amp;_uid, gid_t &amp;_gid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a2373dadd14686614ba0250ae13835632</anchor>
      <arglist>(const byte_t *&amp;_data, uint32_t &amp;_size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a1922146bc3a408db3d5503a2cb4af256</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_data) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a86a17267314862a7b76e8f609896e853</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>boost::icl::interval_map&lt; uid_t, boost::icl::interval_set&lt; gid_t &gt; &gt;</type>
      <name>credentials_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a99a66cb167cbf501633ee9567cedf82d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_who_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>aebb36281c04e70bac57357e14ad9c8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::icl::interval_map&lt; service_t, boost::icl::interval_map&lt; instance_t, boost::icl::interval_set&lt; method_t &gt; &gt; &gt;</type>
      <name>requests_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a81b25c8e544725f35bed55927b2116da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::icl::interval_map&lt; service_t, boost::icl::interval_set&lt; instance_t &gt; &gt;</type>
      <name>offers_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>ad714b121577046aa8e7c350af2d24464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_what_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>ad7473d48304c71d7fe3cfbbad82f17c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::mutex</type>
      <name>mutex_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>ad58c9f22fd3abcdcdc1d78882bcc4006</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::policy_manager</name>
    <filename>classvsomeip__v3_1_1policy__manager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~policy_manager</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>ae2b08335c72b0d40387816287bf82e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; policy &gt;</type>
      <name>create_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>a09f362e1ac99009741b28a7f9f9c83db</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>a8a3eeb3363bcbf15f0d52aa9a7b3fd06</anchor>
      <arglist>(const std::shared_ptr&lt; policy &gt; &amp;_policy) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>parse_uid_gid</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>ab4041a976d4d391d88a85879e153928c</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>parse_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>ab44e8be9435770c0b5004885f65ee37f</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid, const std::shared_ptr&lt; policy &gt; &amp;_policy) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_policy_update_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>ad58361844e9e3f5c2f5e8f28a98378a9</anchor>
      <arglist>(uint32_t _uid, std::shared_ptr&lt; policy &gt; &amp;_policy) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_policy_removal_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>a327aa4d8379995885264520364cdb678</anchor>
      <arglist>(uint32_t _uid) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; policy_manager &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>a3adbb628b418faebe11b93be440dfdb3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::policy_manager_impl</name>
    <filename>classvsomeip__v3_1_1policy__manager__impl.html</filename>
    <base>vsomeip_v3::policy_manager</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~policy_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a59bc5eaaf5dad883da96db33fbe7789e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; policy &gt;</type>
      <name>create_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a828cd3dd0c6d0ed58e07322399cf09b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>adb37c53354c27b3f177d011184ac736a</anchor>
      <arglist>(const std::shared_ptr&lt; policy &gt; &amp;_policy) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_uid_gid</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a4578628f9244f8584b38ba31acccad6d</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a3888f4a5f8167d64b4892f28da36e50a</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid, const std::shared_ptr&lt; policy &gt; &amp;_policy) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_update_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a8cf9b2fc56a7c0762fd9e0c86bc9f221</anchor>
      <arglist>(uint32_t _uid, std::shared_ptr&lt; policy &gt; &amp;_policy) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_removal_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>ab3447a3577d0cb935e06b2062112499d</anchor>
      <arglist>(uint32_t _uid) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; policy_manager &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a9692d831120b46780581fc24b7408f11</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::pre_configuration_plugin</name>
    <filename>classvsomeip_1_1pre__configuration__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~pre_configuration_plugin</name>
      <anchorfile>classvsomeip_1_1pre__configuration__plugin.html</anchorfile>
      <anchor>a19580df4ef19162d114456b0f34f171b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_configuration_path</name>
      <anchorfile>classvsomeip_1_1pre__configuration__plugin.html</anchorfile>
      <anchor>ab16f2a0ee5d3010b8f4c0052fb6bb4b7</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::pre_configuration_plugin</name>
    <filename>classvsomeip__v3_1_1pre__configuration__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~pre_configuration_plugin</name>
      <anchorfile>classvsomeip__v3_1_1pre__configuration__plugin.html</anchorfile>
      <anchor>a5d0c9535f158f70a05fdf392246aa1cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_configuration_path</name>
      <anchorfile>classvsomeip__v3_1_1pre__configuration__plugin.html</anchorfile>
      <anchor>a33ac00a05e922163ec78689b78eecd64</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile01::profile_01</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01.html</filename>
    <member kind="function" static="yes">
      <type>static uint8_t</type>
      <name>compute_crc</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01.html</anchorfile>
      <anchor>aee008e06e3ff6cc9791a0612c27de4ee</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_buffer_length_valid</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01.html</anchorfile>
      <anchor>a650d90718b728e7ee23fa102318992ea</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile01::profile_01_checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01__checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::checker</base>
    <member kind="function">
      <type></type>
      <name>profile_01_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01__checker.html</anchorfile>
      <anchor>a9bcab1b12f07e6670717c4924fbccb13</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_01_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01__checker.html</anchorfile>
      <anchor>a22f12c903eb8fd75806852dc640cc939</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01__checker.html</anchorfile>
      <anchor>a08ad9e92bfc28345db9fa0218c3ac16b</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile04::profile_04</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04.html</filename>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>compute_crc</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04.html</anchorfile>
      <anchor>a5248055075734374d6de02dcf46c4079</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile04::profile_04_checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04__checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::checker</base>
    <member kind="function">
      <type></type>
      <name>profile_04_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04__checker.html</anchorfile>
      <anchor>a36680f93b8365d09102a8fd8443665c4</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_04_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04__checker.html</anchorfile>
      <anchor>a15b7205e0e08d0b65b5702f6731d0410</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04__checker.html</anchorfile>
      <anchor>a45d62afd0db1735c17da62aeeb66c02a</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status) override final</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::e2e::profile01::profile_config</name>
    <filename>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</filename>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>ac9724296adbe847ca040db5049d191db</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>af78562f4cfda4deb31947f5bf39fb6e8</anchor>
      <arglist>(uint16_t _crc_offset, uint16_t _data_id, p01_data_id_mode _data_id_mode, uint16_t _data_length, uint16_t _counter_offset, uint16_t _data_id_nibble_offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a82f87c124a717a2ff06155c8e80b60b4</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="function">
      <type>profile_config &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a0545831c1d966c21e5fe7522d3080cdd</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>crc_offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>ac21884237a9b1a5f64c50d55c9251404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>data_id_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>abe48fdb6b8f10420e5582302e37f5e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>p01_data_id_mode</type>
      <name>data_id_mode_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a7cda8f047a2a86af7a6c8bcf95fcc918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a82ef8b03eccc72fc1b843d3232a1cbfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>counter_offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a5c3c7733f0466c767e587e31cb4859f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>data_id_nibble_offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a4d1a0914072f9e97ebc81f389dabf3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>base_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a935868efdac2f2a7d07511140f1e83e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::e2e::profile04::profile_config</name>
    <filename>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</filename>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a93b35b81b2362bd35f59bd45519b9a91</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a76e7a2ead1186176c4ef0486821f0844</anchor>
      <arglist>(uint32_t _data_id, size_t _offset, size_t _min_data_length, size_t _max_data_length, uint16_t _max_delta_counter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a30470d343e60dfce2a2eb197a46fd3f9</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="function">
      <type>profile_config &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a057d85fed3558433f65ec1a44551af45</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>data_id_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a73317bacddd3084b090e3e960ab15c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>ad9dbd6037a5add1dfe1515288df84605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a93fd6dc197cbf2fb807bed083b9bd9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a6c3b80697cc14c66d4ff05f873f3b384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>max_delta_counter_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a9951a5cbc9ccd9ce4b184e33ca4f37f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>base_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a911d349d54401d13b2de4f17a6528045</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::e2e::profile_custom::profile_config</name>
    <filename>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</filename>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a2da848523da60412e54c55acd0a72b20</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a7fde871cd902c0c615141e6700f26cd0</anchor>
      <arglist>(uint16_t _crc_offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>ac6fd498d411422fb77daf43297e2123e</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="function">
      <type>profile_config &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>acf83e4b52b0b89b20b97219abc159412</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>crc_offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a091a074d7294c9b5743d9e7a25e00f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>base_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a1340ebbb48d9b5826c6af44ba10034f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_custom::profile_custom</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom.html</filename>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>compute_crc</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom.html</anchorfile>
      <anchor>a844c858ea49e04822bd609e9c4ed7b84</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_buffer_length_valid</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom.html</anchorfile>
      <anchor>af852f53acaeac48e8a12235b4d94b82d</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_custom::profile_custom_checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom__checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::checker</base>
    <member kind="function">
      <type></type>
      <name>profile_custom_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom__checker.html</anchorfile>
      <anchor>a2763bac96e939a99ae96b58f650631c9</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_custom_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom__checker.html</anchorfile>
      <anchor>af4f245dfbdd563b9812078f8c2db8c60</anchor>
      <arglist>(const e2e::profile_custom::profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom__checker.html</anchorfile>
      <anchor>a3e8ea145500a1725e16ab14dc52b344a</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_interface::profile_interface</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1profile__interface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~profile_interface</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1profile__interface.html</anchorfile>
      <anchor>adf2db977d80366d270e6e3b962d3828d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::protection_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>protection_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a3f14d2f08250467a0a5c606daf4ad26f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~protection_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>aec49223201f3e8a7407e7e95de2dbbbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a0dcaf5ce3a6e38750049a9c15dec57b6</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>alive_counter_t</type>
      <name>get_alive_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>ae02b9e8c6bea18bc333ea2571631c09e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alive_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>adc98762addb0bbbcbf03f960aebb4883</anchor>
      <arglist>(alive_counter_t _counter)</arglist>
    </member>
    <member kind="function">
      <type>crc_t</type>
      <name>get_crc</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a45b7855e8f62cc047b443ba8d4bca574</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_crc</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a95bf50925b4369999016ab66be742f5b</anchor>
      <arglist>(crc_t _crc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a317ef15348d702ecb584dd5daf7ec73c</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a39883f3ae29b45e0e89c149612a72b73</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile01::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile01_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::protector</base>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1protector.html</anchorfile>
      <anchor>a8045226153c7227e85b4b55ee9a6a947</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1protector.html</anchorfile>
      <anchor>a63e20a26be69d3efc0330046e7a8ddd9</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1protector.html</anchorfile>
      <anchor>a20f295ef3156a6a0af4c28c072f27b2f</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile04::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile04_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::protector</base>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1protector.html</anchorfile>
      <anchor>a1ffa5b558ee261b300cabd8f71c93d07</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1protector.html</anchorfile>
      <anchor>aceb27efcc695234583494015b9379e25</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1protector.html</anchorfile>
      <anchor>a2b2828e0e03b4a47a023e258017dff03</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_custom::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::protector</base>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1protector.html</anchorfile>
      <anchor>a95aeede0d6c2f79499422e8082726968</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1protector.html</anchorfile>
      <anchor>a27d29fad746e4d0d97827734e0fd4db3</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1protector.html</anchorfile>
      <anchor>a84c9d8d174905a6db52ae878e7942892</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_interface::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::profile_interface</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1protector.html</anchorfile>
      <anchor>af6448ee4550701cc0f548494a65ce73b</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recv_op_base_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>a7a7eb87fabc0ae5fed83069c74a638d0</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>a7a7eb87fabc0ae5fed83069c74a638d0</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>a7a7eb87fabc0ae5fed83069c74a638d0</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>ac91cd80a266a47c7c4a57788624c461e</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>ac91cd80a266a47c7c4a57788624c461e</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>aa520a3bc5dba80210f0da4920362d2ec</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>a21ea5919a9918fe17f3a61102446c7f0</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>a21ea5919a9918fe17f3a61102446c7f0</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>a21ea5919a9918fe17f3a61102446c7f0</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>a21ea5919a9918fe17f3a61102446c7f0</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recv_op_base_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>a5e84482d6d4febc788d9f4159570d99a</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>a5e84482d6d4febc788d9f4159570d99a</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>a5e84482d6d4febc788d9f4159570d99a</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>a0f9376e5ad75335180521d1acd10e0a4</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>a0f9376e5ad75335180521d1acd10e0a4</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>a05fa21a5a6ff2a6e20d9eb2dcc031fe3</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>afcbe77947bcf1454d4c5a402192ceff2</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>afcbe77947bcf1454d4c5a402192ceff2</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>afcbe77947bcf1454d4c5a402192ceff2</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>afcbe77947bcf1454d4c5a402192ceff2</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recv_op_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <templarg>typename Handler</templarg>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a319c23b735f6f6475c322f0d3cff22fa</anchor>
      <arglist>(reactive_socket_recv_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a6451140b28891336837c5e8947ccae18</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a319c23b735f6f6475c322f0d3cff22fa</anchor>
      <arglist>(reactive_socket_recv_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a6451140b28891336837c5e8947ccae18</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a319c23b735f6f6475c322f0d3cff22fa</anchor>
      <arglist>(reactive_socket_recv_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a309f5ecbff215de591f13a5cf06487c9</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a319c23b735f6f6475c322f0d3cff22fa</anchor>
      <arglist>(reactive_socket_recv_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a58ac3264542ae098cf3fcfa32fbffa06</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a319c23b735f6f6475c322f0d3cff22fa</anchor>
      <arglist>(reactive_socket_recv_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a58ac3264542ae098cf3fcfa32fbffa06</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a192fa4398406ed64825b00bd6da4702d</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a9038e7861369384fa4bec150b86d5687</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a9038e7861369384fa4bec150b86d5687</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a9038e7861369384fa4bec150b86d5687</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a9038e7861369384fa4bec150b86d5687</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recv_op_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <templarg>typename Handler</templarg>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext_local</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a18014d2e7e605d40967092f4bacd60cd</anchor>
      <arglist>(reactive_socket_recv_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a4a76850940f4206cf203511e5594d198</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a18014d2e7e605d40967092f4bacd60cd</anchor>
      <arglist>(reactive_socket_recv_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a4a76850940f4206cf203511e5594d198</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a18014d2e7e605d40967092f4bacd60cd</anchor>
      <arglist>(reactive_socket_recv_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>aa85ad2fe86f0f97e1d1488aea32174b0</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a18014d2e7e605d40967092f4bacd60cd</anchor>
      <arglist>(reactive_socket_recv_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a9967c5d95f3997786a1a8a71afadaeda</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a18014d2e7e605d40967092f4bacd60cd</anchor>
      <arglist>(reactive_socket_recv_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a9967c5d95f3997786a1a8a71afadaeda</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>aa76b926ede8862cca1ff118369197ea2</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a599bba3944581c8d087a525a7fccdeaf</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a599bba3944581c8d087a525a7fccdeaf</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a599bba3944581c8d087a525a7fccdeaf</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a599bba3944581c8d087a525a7fccdeaf</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvfrom_op_base_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <templarg>typename Endpoint</templarg>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a5f781a3618a200d3ad1237565c14592a</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a5f781a3618a200d3ad1237565c14592a</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a5f781a3618a200d3ad1237565c14592a</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a6abab1b1b9ce3d7ba9ee267b458c011e</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a6abab1b1b9ce3d7ba9ee267b458c011e</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>ae48a585d5ca4acd409429ae8f7b928f6</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a786e8534dc2cfc0d107d2a969b04d3fe</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a786e8534dc2cfc0d107d2a969b04d3fe</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a786e8534dc2cfc0d107d2a969b04d3fe</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a786e8534dc2cfc0d107d2a969b04d3fe</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <templarg>typename Endpoint</templarg>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>aec25d14a1fda6507b38228c47d208bc4</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>aec25d14a1fda6507b38228c47d208bc4</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>aec25d14a1fda6507b38228c47d208bc4</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>aec25d14a1fda6507b38228c47d208bc4</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>aec25d14a1fda6507b38228c47d208bc4</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>a8d17d8e3dfb08add2016d5ea0e75e9c5</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>ac95062b09b11be07379ad613c404ffca</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>ac95062b09b11be07379ad613c404ffca</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>ac95062b09b11be07379ad613c404ffca</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>ac95062b09b11be07379ad613c404ffca</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvfrom_op_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <templarg>typename Endpoint</templarg>
    <templarg>typename Handler</templarg>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>ab5f48a67b92af2f04ae8b62a469b50b8</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>a337b8cbbf921da6fa0fe30872e292291</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>ab5f48a67b92af2f04ae8b62a469b50b8</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>a337b8cbbf921da6fa0fe30872e292291</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>ab5f48a67b92af2f04ae8b62a469b50b8</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>a56e63f68534a6e0295f028dcfdeff290</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>ab5f48a67b92af2f04ae8b62a469b50b8</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>a691451aa56bd07ade6f777d7201ded24</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>ab5f48a67b92af2f04ae8b62a469b50b8</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>a691451aa56bd07ade6f777d7201ded24</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>aed42b7e3d0d87f7cc141ffaab3ff5957</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>af69f5479a9a73f147102d515b927d9b9</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>af69f5479a9a73f147102d515b927d9b9</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>af69f5479a9a73f147102d515b927d9b9</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>af69f5479a9a73f147102d515b927d9b9</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvfrom_op_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <templarg>typename Endpoint</templarg>
    <templarg>typename Handler</templarg>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a85011f71ebf66c51544177736217d0d2</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a89001455bc421cbf5f35bf1493375fda</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a85011f71ebf66c51544177736217d0d2</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a89001455bc421cbf5f35bf1493375fda</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a85011f71ebf66c51544177736217d0d2</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a90b8b03ae379ce9c93a25302031328eb</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a85011f71ebf66c51544177736217d0d2</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a90b8b03ae379ce9c93a25302031328eb</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a85011f71ebf66c51544177736217d0d2</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a90b8b03ae379ce9c93a25302031328eb</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a96acf664a82a584ce28ba35c06b1498c</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>ad207b89c5ba3e2aac93fdb367dcf41c8</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>ad207b89c5ba3e2aac93fdb367dcf41c8</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>ad207b89c5ba3e2aac93fdb367dcf41c8</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>ad207b89c5ba3e2aac93fdb367dcf41c8</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvmsg_op_base_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <base>boost::asio::detail::reactor_op_ext</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>a7f620d49198bb7ed6ba6416a56c41201</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>a7f620d49198bb7ed6ba6416a56c41201</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>a7f620d49198bb7ed6ba6416a56c41201</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>aa2a76fce27c3b4827a4502d34275e199</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>aa2a76fce27c3b4827a4502d34275e199</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>aa9d94826244f4609b8348e88b9bfe2fb</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>a0cf43b3cfa16c98abdb4e530c6f5e1fa</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>a0cf43b3cfa16c98abdb4e530c6f5e1fa</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>a0cf43b3cfa16c98abdb4e530c6f5e1fa</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>a0cf43b3cfa16c98abdb4e530c6f5e1fa</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a9dca5e22f59f6d7d755326001fe247a5</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a9dca5e22f59f6d7d755326001fe247a5</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a9dca5e22f59f6d7d755326001fe247a5</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>af394eacee7275c98ce2ed50e3976fc7b</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>af394eacee7275c98ce2ed50e3976fc7b</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a9cbfad68e22dd4ac6b5453994048d11e</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a3d4a9e5aaa7aec2d3774f8f9daaeaa62</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a3d4a9e5aaa7aec2d3774f8f9daaeaa62</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a3d4a9e5aaa7aec2d3774f8f9daaeaa62</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static status</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a3d4a9e5aaa7aec2d3774f8f9daaeaa62</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvmsg_op_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <templarg>typename Handler</templarg>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext</base>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a3ab00a1d81175012ab003eb9b6f25b2e</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a9705d6c6a4fdd1024954753aabd815ac</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a3ab00a1d81175012ab003eb9b6f25b2e</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a9705d6c6a4fdd1024954753aabd815ac</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a3ab00a1d81175012ab003eb9b6f25b2e</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a169e534b68fb891eb391b5b639647230</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a3ab00a1d81175012ab003eb9b6f25b2e</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a10d3a19fe872870d2760759c9c0f73fd</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a3ab00a1d81175012ab003eb9b6f25b2e</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a10d3a19fe872870d2760759c9c0f73fd</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a540b3cd5b8436e4a8042ae437f1427bd</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a5d35fb30098f3ccfe87898d1d70aed06</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a5d35fb30098f3ccfe87898d1d70aed06</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a5d35fb30098f3ccfe87898d1d70aed06</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a5d35fb30098f3ccfe87898d1d70aed06</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvmsg_op_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</filename>
    <templarg>typename MutableBufferSequence</templarg>
    <templarg>typename Handler</templarg>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ac7513e3e4564217092aa2f4e02dae657</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>a61fb147ee4e62f6dfcc765f098d5cb14</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ac7513e3e4564217092aa2f4e02dae657</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>a61fb147ee4e62f6dfcc765f098d5cb14</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ac7513e3e4564217092aa2f4e02dae657</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ad8ff6e2749cb53e8160cd100894dc8ed</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ac7513e3e4564217092aa2f4e02dae657</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>af11c43008e11af28ea4dd1ef128cb66c</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ac7513e3e4564217092aa2f4e02dae657</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>af11c43008e11af28ea4dd1ef128cb66c</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ae6f59fd7e3a6d930667529e6b671c874</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>aaa67d76632e1964788fd7d2ae4c6cdd9</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>aaa67d76632e1964788fd7d2ae4c6cdd9</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>aaa67d76632e1964788fd7d2ae4c6cdd9</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>aaa67d76632e1964788fd7d2ae4c6cdd9</anchor>
      <arglist>(void *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_service_base_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</filename>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</class>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a10ddab961d6b4e041afecd0011a53d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a10ddab961d6b4e041afecd0011a53d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a10ddab961d6b4e041afecd0011a53d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a10ddab961d6b4e041afecd0011a53d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a10ddab961d6b4e041afecd0011a53d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a9b0f822de7700b79770cf62faaa700b8</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>shutdown_service</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adff286d75987d044fbf022e222360a4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abb5cc77b03d8bbf79f153ce1702406da</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad16d99d26cc627075da3745bb4992915</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a92077153b7321444991fe3ebba9e3fd6</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3c640800baa5935544cef130890ed10c</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a12bfc7a3b64f10531cb43acb71cd658e</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a1700578473bcef8ba51885a43090dc39</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a5d5e3896f0315843d97ddaa5ab7b5b8b</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adfbc16764184810a31ff510578f3ee93</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377e742acd99aac859f15f81570b2f31</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a1adc5394408a0df96444617b4f4a7d90</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4c628aee04966b4b13eb6557cfb81bbd</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3f62e72ee4ba08c9c342d427ed9019bd</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af85d1c6677d013804ead6d4cc9aeee87</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a438338b27d46379603011dbb57c5885a</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3760f410e87965c59f02939def8e569f</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2039a44462571f6d411e32c1510dc8a7</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a00364fed00046b09924484a30211051b</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a56a19a4c06f7da991b55731581e16953</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a93590062e260a71a0fc37af36a9689a2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a46c07096c069c90497ec38fb1a92575f</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a9fcf7841330389092055220202909450</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>afc7827644865369f34b01cbae52c3302</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad338f60b42f47de3fd363c526083f942</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abbbb06bde33f0c7cbfbe88a5ae282e76</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ab12d2f93b52fa3bf1259b7f3af9c3c7d</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2026fe6943da1e573f682c26d6b49399</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af407e9dd6321b82798c011ba1820e2f6</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a42b0c95c64b431b47b6842e344470192</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>aee5a79357614e9f5c1e434133ea17591</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ae1c8712dce8d4e780b386ea9f43531fa</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4fe88bb3d98f886373960d98c6f876d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>aa4ac5c30f2f5d139ee98c449533fe0de</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a64b8e80c5b12d5c47a0d6f90de03e695</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a896b4b6e16bbcf977ca1d02bc64f64e5</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a91a51d0b53a3bd53b2ef69eb7b5b935e</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a12bfc7a3b64f10531cb43acb71cd658e</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377d352de4ce4e61423a1d1a24638205</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL socket_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a247e287b8a96d03b2c557ae9824b975b</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a5d5e3896f0315843d97ddaa5ab7b5b8b</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abbe53f879f4026de967478299ce2cd6d</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377e742acd99aac859f15f81570b2f31</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a1adc5394408a0df96444617b4f4a7d90</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4c628aee04966b4b13eb6557cfb81bbd</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3f62e72ee4ba08c9c342d427ed9019bd</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af85d1c6677d013804ead6d4cc9aeee87</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a438338b27d46379603011dbb57c5885a</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3760f410e87965c59f02939def8e569f</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2039a44462571f6d411e32c1510dc8a7</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a154ab268403b10c8ebe3a53b4477b4de</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ab91877aada64a7aa4e321bf6c302a0eb</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a56a19a4c06f7da991b55731581e16953</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a93590062e260a71a0fc37af36a9689a2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a46c07096c069c90497ec38fb1a92575f</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a9fcf7841330389092055220202909450</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>afc7827644865369f34b01cbae52c3302</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad338f60b42f47de3fd363c526083f942</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abbbb06bde33f0c7cbfbe88a5ae282e76</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ab12d2f93b52fa3bf1259b7f3af9c3c7d</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2026fe6943da1e573f682c26d6b49399</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af407e9dd6321b82798c011ba1820e2f6</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a42b0c95c64b431b47b6842e344470192</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>aee5a79357614e9f5c1e434133ea17591</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a0493c1398224989c55906ef2ac4e691d</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad5c0ac0a37c38e9963b8228438b2e28e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>aa4ac5c30f2f5d139ee98c449533fe0de</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a64b8e80c5b12d5c47a0d6f90de03e695</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a896b4b6e16bbcf977ca1d02bc64f64e5</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a91a51d0b53a3bd53b2ef69eb7b5b935e</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a12bfc7a3b64f10531cb43acb71cd658e</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377d352de4ce4e61423a1d1a24638205</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL socket_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a247e287b8a96d03b2c557ae9824b975b</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a5d5e3896f0315843d97ddaa5ab7b5b8b</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abbe53f879f4026de967478299ce2cd6d</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377e742acd99aac859f15f81570b2f31</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a1adc5394408a0df96444617b4f4a7d90</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4c628aee04966b4b13eb6557cfb81bbd</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3f62e72ee4ba08c9c342d427ed9019bd</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af85d1c6677d013804ead6d4cc9aeee87</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a438338b27d46379603011dbb57c5885a</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3760f410e87965c59f02939def8e569f</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2039a44462571f6d411e32c1510dc8a7</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a154ab268403b10c8ebe3a53b4477b4de</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4d4252024497d6ab3b45315b139272a6</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a56a19a4c06f7da991b55731581e16953</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a93590062e260a71a0fc37af36a9689a2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a30da8c40c85b6912940b7c1daa894aea</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a6faf19bc4cec3a740739fd065989ae33</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>afc7827644865369f34b01cbae52c3302</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad338f60b42f47de3fd363c526083f942</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a568049c8791cfc78c371578955520d4f</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ae802ab0664dae3637d1a86809595db24</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2026fe6943da1e573f682c26d6b49399</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af407e9dd6321b82798c011ba1820e2f6</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a6388f884b070f4c0a7a4c687270710e0</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4002dee4d449f2b9e885f8c02f6802da</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>acee40dc392100fb910cbec72fb2e9eb6</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad5c0ac0a37c38e9963b8228438b2e28e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>aa4ac5c30f2f5d139ee98c449533fe0de</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a64b8e80c5b12d5c47a0d6f90de03e695</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a896b4b6e16bbcf977ca1d02bc64f64e5</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a91a51d0b53a3bd53b2ef69eb7b5b935e</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a12bfc7a3b64f10531cb43acb71cd658e</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377d352de4ce4e61423a1d1a24638205</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL socket_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a247e287b8a96d03b2c557ae9824b975b</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a5d5e3896f0315843d97ddaa5ab7b5b8b</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abbe53f879f4026de967478299ce2cd6d</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377e742acd99aac859f15f81570b2f31</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a1adc5394408a0df96444617b4f4a7d90</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4c628aee04966b4b13eb6557cfb81bbd</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3f62e72ee4ba08c9c342d427ed9019bd</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af85d1c6677d013804ead6d4cc9aeee87</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a438338b27d46379603011dbb57c5885a</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3760f410e87965c59f02939def8e569f</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2039a44462571f6d411e32c1510dc8a7</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a154ab268403b10c8ebe3a53b4477b4de</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4d4252024497d6ab3b45315b139272a6</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a56a19a4c06f7da991b55731581e16953</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a93590062e260a71a0fc37af36a9689a2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a30da8c40c85b6912940b7c1daa894aea</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a6faf19bc4cec3a740739fd065989ae33</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>afc7827644865369f34b01cbae52c3302</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad338f60b42f47de3fd363c526083f942</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a568049c8791cfc78c371578955520d4f</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ae802ab0664dae3637d1a86809595db24</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2026fe6943da1e573f682c26d6b49399</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af407e9dd6321b82798c011ba1820e2f6</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a6388f884b070f4c0a7a4c687270710e0</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4002dee4d449f2b9e885f8c02f6802da</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>acee40dc392100fb910cbec72fb2e9eb6</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad5c0ac0a37c38e9963b8228438b2e28e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>aa4ac5c30f2f5d139ee98c449533fe0de</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a64b8e80c5b12d5c47a0d6f90de03e695</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a896b4b6e16bbcf977ca1d02bc64f64e5</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a91a51d0b53a3bd53b2ef69eb7b5b935e</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a12bfc7a3b64f10531cb43acb71cd658e</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377d352de4ce4e61423a1d1a24638205</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL socket_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a247e287b8a96d03b2c557ae9824b975b</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a5d5e3896f0315843d97ddaa5ab7b5b8b</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abbe53f879f4026de967478299ce2cd6d</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377e742acd99aac859f15f81570b2f31</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a1adc5394408a0df96444617b4f4a7d90</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4c628aee04966b4b13eb6557cfb81bbd</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3f62e72ee4ba08c9c342d427ed9019bd</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af85d1c6677d013804ead6d4cc9aeee87</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a438338b27d46379603011dbb57c5885a</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3760f410e87965c59f02939def8e569f</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2039a44462571f6d411e32c1510dc8a7</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a154ab268403b10c8ebe3a53b4477b4de</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4d4252024497d6ab3b45315b139272a6</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a56a19a4c06f7da991b55731581e16953</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a93590062e260a71a0fc37af36a9689a2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a30da8c40c85b6912940b7c1daa894aea</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a6faf19bc4cec3a740739fd065989ae33</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>afc7827644865369f34b01cbae52c3302</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad338f60b42f47de3fd363c526083f942</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a568049c8791cfc78c371578955520d4f</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ae802ab0664dae3637d1a86809595db24</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2026fe6943da1e573f682c26d6b49399</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af407e9dd6321b82798c011ba1820e2f6</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a6388f884b070f4c0a7a4c687270710e0</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4002dee4d449f2b9e885f8c02f6802da</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a203442dc1e1dac9a8b3676bf6fd6f65c</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a297c64cab4b211c88ea138baef48d199</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ae17eee9920d09f351a37ba626eaf4a53</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a84e6ea60b1c3fd6bef8aaf34098200c5</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad57025e7a7087bf12e934c297b08376a</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a16c34d7612a90ccc380de26d9042eabc</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adccf6fef2410a2de166d997c51080818</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4ea559c5a9fa234764f0f34775e7d1c8</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4a3f739882ae33eab647f3be62a2833a</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ac7424966dc762508b772cb2b80fcd755</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a16c34d7612a90ccc380de26d9042eabc</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adccf6fef2410a2de166d997c51080818</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4ea559c5a9fa234764f0f34775e7d1c8</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4a3f739882ae33eab647f3be62a2833a</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ac7424966dc762508b772cb2b80fcd755</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a16c34d7612a90ccc380de26d9042eabc</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adccf6fef2410a2de166d997c51080818</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4ea559c5a9fa234764f0f34775e7d1c8</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4a3f739882ae33eab647f3be62a2833a</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ac7424966dc762508b772cb2b80fcd755</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a16c34d7612a90ccc380de26d9042eabc</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adccf6fef2410a2de166d997c51080818</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4ea559c5a9fa234764f0f34775e7d1c8</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4a3f739882ae33eab647f3be62a2833a</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ac7424966dc762508b772cb2b80fcd755</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>reactor &amp;</type>
      <name>reactor_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adc9c0998e1b01d3c2159ec961f4295ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>io_context &amp;</type>
      <name>io_context_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a10346a9fbc4d1cca2f3b880bcd56d835</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const boost::system::error_code</type>
      <name>success_ec_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af0d158a44967dfce7d4cb70b111347ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_service_base_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</filename>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</class>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a1a7587b8db499a822ede5a43416f0ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a1a7587b8db499a822ede5a43416f0ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a1a7587b8db499a822ede5a43416f0ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a1a7587b8db499a822ede5a43416f0ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a1a7587b8db499a822ede5a43416f0ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a36025cc54c95bfc40a8587716d24c6a6</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>shutdown_service</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a22f4b9c59e3f3fe91f9ce6108343b52a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae133ff5030a8576be86a6ce18d51bd9b</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a190a192d8d756545e553baa9ec0cf7bd</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a0a02df75fece9366f243b64023706918</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>acd42aa5ad119acce11b6eb8e4684d971</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2ef623b6fd77f83bb4bd4b956cfc9db9</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a28eae9f003242d7301508cc4bd5ff1af</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6b9a486d8cc4427b1fc5bde13122c05</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4b391e59f3d2a6ca0287f2dd53b12d03</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a969352c24674fd6c2b80fc67b4497072</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adc3b79ed3ba5f5986e300bda7b2c2c94</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a318c0a48512da5ce09e0894d4ec70fc9</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af064dfe873c1ac6c270ad81f1210601f</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a14a25bb89b6b48196e45f5c722a4b768</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa35d8bab20e0a72ba8d4f296f4c18593</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a32fba15a921dcb1169a378195f5d0c6b</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adde8e005dedc8d652b453dc06c16a1a2</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae42295c59a6ca9a4e1b91578b7b42c4d</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aca2168f0dd9b742902bdf65b6f6879d6</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7a54cace7d48e3c782ea54d124def0ad</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>acd23d03153110e02cc3c761708a214cf</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af1d7f72d3ff78a2a17dbe185d6a522b5</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a50a071a91d99a33557dc90fe88958196</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ad9301aff9465a4aed38cf8880f907d5f</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae807126f4bbc30b2c157fe4f49bc4775</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a193f65576ded415be8fb3d1675db4e11</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa6d1147ec79f34eadd47c9c0b61a00ed</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6b9b1a6e680168b96156c831640772a4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2e812c80bcd27f3bf69d2df3fe74f2fe</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6db2d321a7174d3b3ad92f121b3b3d4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aaef8bf4b9d8075d41607caeba5718022</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a0a7d75b26a921b7a18cbf11d72bb368f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae5935f31a24e2b140bc5f09016360fc7</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a199b5eaa6baa26ee054065d8b749e112</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7672430d719f8b627ba9bbd9a415e2f7</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4b1c0a92a05418595a52a1dddb4ec129</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2ef623b6fd77f83bb4bd4b956cfc9db9</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6f95452c5e1a486d0d786ae22fc01e88</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL socket_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4bdcf1bd71c3aa24ed5a8a2b654a50ee</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6b9a486d8cc4427b1fc5bde13122c05</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a43f00df0a31a510c72568ea3695a3069</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a969352c24674fd6c2b80fc67b4497072</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adc3b79ed3ba5f5986e300bda7b2c2c94</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a318c0a48512da5ce09e0894d4ec70fc9</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af064dfe873c1ac6c270ad81f1210601f</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a14a25bb89b6b48196e45f5c722a4b768</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa35d8bab20e0a72ba8d4f296f4c18593</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a32fba15a921dcb1169a378195f5d0c6b</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adde8e005dedc8d652b453dc06c16a1a2</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aaec814d93ee5f9f84915c2a84ff2360a</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a000a5be64443ad245f9812b7a60d0a24</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aca2168f0dd9b742902bdf65b6f6879d6</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7a54cace7d48e3c782ea54d124def0ad</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>acd23d03153110e02cc3c761708a214cf</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af1d7f72d3ff78a2a17dbe185d6a522b5</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a50a071a91d99a33557dc90fe88958196</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ad9301aff9465a4aed38cf8880f907d5f</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae807126f4bbc30b2c157fe4f49bc4775</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a193f65576ded415be8fb3d1675db4e11</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa6d1147ec79f34eadd47c9c0b61a00ed</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6b9b1a6e680168b96156c831640772a4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2e812c80bcd27f3bf69d2df3fe74f2fe</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6db2d321a7174d3b3ad92f121b3b3d4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a1994930571546cd06811fcc949dcda97</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a64376cf63190d120f0886b7222af9a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae5935f31a24e2b140bc5f09016360fc7</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a199b5eaa6baa26ee054065d8b749e112</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7672430d719f8b627ba9bbd9a415e2f7</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4b1c0a92a05418595a52a1dddb4ec129</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2ef623b6fd77f83bb4bd4b956cfc9db9</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6f95452c5e1a486d0d786ae22fc01e88</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL socket_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4bdcf1bd71c3aa24ed5a8a2b654a50ee</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6b9a486d8cc4427b1fc5bde13122c05</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a43f00df0a31a510c72568ea3695a3069</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a969352c24674fd6c2b80fc67b4497072</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adc3b79ed3ba5f5986e300bda7b2c2c94</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a318c0a48512da5ce09e0894d4ec70fc9</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af064dfe873c1ac6c270ad81f1210601f</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a14a25bb89b6b48196e45f5c722a4b768</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa35d8bab20e0a72ba8d4f296f4c18593</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a32fba15a921dcb1169a378195f5d0c6b</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adde8e005dedc8d652b453dc06c16a1a2</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aaec814d93ee5f9f84915c2a84ff2360a</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7d2e70c020139edc3b733bf9886acd99</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aca2168f0dd9b742902bdf65b6f6879d6</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7a54cace7d48e3c782ea54d124def0ad</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af255031003106e8b7b9dea393b5e740c</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae04cd96160cacf34a9969d0d34bb2512</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a50a071a91d99a33557dc90fe88958196</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ad9301aff9465a4aed38cf8880f907d5f</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2d0c2ba43e9e42f4fb071b83f7bb23cb</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ac1e1074029a29f17fd4e5da8a72665b2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa6d1147ec79f34eadd47c9c0b61a00ed</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6b9b1a6e680168b96156c831640772a4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2236a1c5501928207f7b658a2baf4e7f</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>affa2250c97af29cc27cc2ecb531b1377</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7c4a54acbc5ce6a943c3824ee75acad3</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a64376cf63190d120f0886b7222af9a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae5935f31a24e2b140bc5f09016360fc7</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a199b5eaa6baa26ee054065d8b749e112</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7672430d719f8b627ba9bbd9a415e2f7</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4b1c0a92a05418595a52a1dddb4ec129</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2ef623b6fd77f83bb4bd4b956cfc9db9</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6f95452c5e1a486d0d786ae22fc01e88</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL socket_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4bdcf1bd71c3aa24ed5a8a2b654a50ee</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6b9a486d8cc4427b1fc5bde13122c05</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a43f00df0a31a510c72568ea3695a3069</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a969352c24674fd6c2b80fc67b4497072</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adc3b79ed3ba5f5986e300bda7b2c2c94</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a318c0a48512da5ce09e0894d4ec70fc9</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af064dfe873c1ac6c270ad81f1210601f</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a14a25bb89b6b48196e45f5c722a4b768</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa35d8bab20e0a72ba8d4f296f4c18593</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a32fba15a921dcb1169a378195f5d0c6b</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adde8e005dedc8d652b453dc06c16a1a2</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aaec814d93ee5f9f84915c2a84ff2360a</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7d2e70c020139edc3b733bf9886acd99</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aca2168f0dd9b742902bdf65b6f6879d6</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7a54cace7d48e3c782ea54d124def0ad</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af255031003106e8b7b9dea393b5e740c</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae04cd96160cacf34a9969d0d34bb2512</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a50a071a91d99a33557dc90fe88958196</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ad9301aff9465a4aed38cf8880f907d5f</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2d0c2ba43e9e42f4fb071b83f7bb23cb</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ac1e1074029a29f17fd4e5da8a72665b2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa6d1147ec79f34eadd47c9c0b61a00ed</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6b9b1a6e680168b96156c831640772a4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2236a1c5501928207f7b658a2baf4e7f</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>affa2250c97af29cc27cc2ecb531b1377</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7c4a54acbc5ce6a943c3824ee75acad3</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a64376cf63190d120f0886b7222af9a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae5935f31a24e2b140bc5f09016360fc7</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a199b5eaa6baa26ee054065d8b749e112</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7672430d719f8b627ba9bbd9a415e2f7</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4b1c0a92a05418595a52a1dddb4ec129</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2ef623b6fd77f83bb4bd4b956cfc9db9</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6f95452c5e1a486d0d786ae22fc01e88</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL socket_type</type>
      <name>release</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4bdcf1bd71c3aa24ed5a8a2b654a50ee</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6b9a486d8cc4427b1fc5bde13122c05</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a43f00df0a31a510c72568ea3695a3069</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a969352c24674fd6c2b80fc67b4497072</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adc3b79ed3ba5f5986e300bda7b2c2c94</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a318c0a48512da5ce09e0894d4ec70fc9</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af064dfe873c1ac6c270ad81f1210601f</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a14a25bb89b6b48196e45f5c722a4b768</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa35d8bab20e0a72ba8d4f296f4c18593</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a32fba15a921dcb1169a378195f5d0c6b</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adde8e005dedc8d652b453dc06c16a1a2</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aaec814d93ee5f9f84915c2a84ff2360a</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_wait</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7d2e70c020139edc3b733bf9886acd99</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::wait_type w, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aca2168f0dd9b742902bdf65b6f6879d6</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7a54cace7d48e3c782ea54d124def0ad</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af255031003106e8b7b9dea393b5e740c</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae04cd96160cacf34a9969d0d34bb2512</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a50a071a91d99a33557dc90fe88958196</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ad9301aff9465a4aed38cf8880f907d5f</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2d0c2ba43e9e42f4fb071b83f7bb23cb</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ac1e1074029a29f17fd4e5da8a72665b2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa6d1147ec79f34eadd47c9c0b61a00ed</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6b9b1a6e680168b96156c831640772a4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2236a1c5501928207f7b658a2baf4e7f</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>affa2250c97af29cc27cc2ecb531b1377</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a527d7b6f3259820c21628c4ee520bc78</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>afb4874a071e7a9938d338c83b489951f</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae25b5d54235ab8031fb738051dbe07ef</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae982caad26ef32adc0dba263d0ad4adf</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a236b349a54abb87005d176d218bb5385</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a931ebf503d3da0587eb539318a07ac17</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a769ba280cc48dd6e6179ff55cf316c97</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a25470fafc9caa160fdeebb0d821f6998</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>afe1b71c4fc3f2901f94745c0e9bb62c6</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a74f6e8ccc56366ba29635209a2874a6e</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a931ebf503d3da0587eb539318a07ac17</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a769ba280cc48dd6e6179ff55cf316c97</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a25470fafc9caa160fdeebb0d821f6998</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>afe1b71c4fc3f2901f94745c0e9bb62c6</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a74f6e8ccc56366ba29635209a2874a6e</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a931ebf503d3da0587eb539318a07ac17</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a769ba280cc48dd6e6179ff55cf316c97</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a25470fafc9caa160fdeebb0d821f6998</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>afe1b71c4fc3f2901f94745c0e9bb62c6</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a74f6e8ccc56366ba29635209a2874a6e</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a931ebf503d3da0587eb539318a07ac17</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a769ba280cc48dd6e6179ff55cf316c97</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a25470fafc9caa160fdeebb0d821f6998</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>afe1b71c4fc3f2901f94745c0e9bb62c6</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a74f6e8ccc56366ba29635209a2874a6e</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>reactor &amp;</type>
      <name>reactor_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a9f8102afde1f96abbe6b0f5a56670e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>io_context &amp;</type>
      <name>io_context_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ab47cc9d2622979acd39ad26fc89f00bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const boost::system::error_code</type>
      <name>success_ec_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a84f6689948ba391a79b5b27e548e8bc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_service_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</filename>
    <templarg>typename Protocol</templarg>
    <base>boost::asio::detail::reactive_socket_service_base_ext</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext</base>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext::implementation_type</class>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa6a093ca84156fcba7e78f697b734244</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a36d44a8ed49e4b00ea34adeb8776381e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>af20044b22a112c522a16e9582e3691e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa6a093ca84156fcba7e78f697b734244</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a36d44a8ed49e4b00ea34adeb8776381e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>af20044b22a112c522a16e9582e3691e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa6a093ca84156fcba7e78f697b734244</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a36d44a8ed49e4b00ea34adeb8776381e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>af20044b22a112c522a16e9582e3691e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa6a093ca84156fcba7e78f697b734244</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a36d44a8ed49e4b00ea34adeb8776381e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>af20044b22a112c522a16e9582e3691e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa6a093ca84156fcba7e78f697b734244</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a36d44a8ed49e4b00ea34adeb8776381e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>af20044b22a112c522a16e9582e3691e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a6919f389ede2a9aea41192a69615cbf1</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a99934eccd43498c0d7306bc729d5b27f</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a09b08c29b044c7bcd9bde088ada5fb60</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a1a8cb72ca9c7d8add1036b0a8c6a4cd8</anchor>
      <arglist>(implementation_type &amp;impl, typename reactive_socket_service_ext&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae91d3784a67b8c7d0909334fbc7b41a3</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a370dd3d1224a77100517667af7fc3d72</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a52f2903d8b12145983b461422d24fe58</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5f4df731956ff6f3c3ea9657e0f2266c</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a9ee1a1d116ef4ba9ddb7a1f327aadad3</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae5b665635b26e54b5172b56f518b5a00</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa83f5d83a3d137f442c9151ccb41b2c5</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac511ffa635aa57b53cfe5e973ce2a7f2</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a3b44a5047fccd2c43cb291809adf438d</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0e01a26a145c51dab9e225717fe71b41</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0feca049975bc0282162538973d473a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a4df3de582d0d07faf93e452572b024fc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5fd9681ae8f05fb8296da639dc17067b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a70beb5ceddd532164fc0db0224793a79</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a8ae10f2e3c3416c0f09910d99c554d64</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a59d12d95149c182e7a35a944a378b30b</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ab80bb393279988c1e69f60bbfd418f7a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a8cedb82bfd5d3e5eed3e201f36f13478</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aed4f099a3c3744d9cf4694a9ff7d314b</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae1d36726a2a05723bb2e0771652e73dd</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a3c771ef84c814e256a8f6a3d9afd726b</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ad960f6180bb69f3653b4ad733ba8b354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a99934eccd43498c0d7306bc729d5b27f</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a09b08c29b044c7bcd9bde088ada5fb60</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a6dd837b166c47683b2b07f2ae303c660</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_ext&lt; Protocol &gt; &amp;, typename reactive_socket_service_ext&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae91d3784a67b8c7d0909334fbc7b41a3</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a370dd3d1224a77100517667af7fc3d72</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a52f2903d8b12145983b461422d24fe58</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5f4df731956ff6f3c3ea9657e0f2266c</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a9ee1a1d116ef4ba9ddb7a1f327aadad3</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae5b665635b26e54b5172b56f518b5a00</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa83f5d83a3d137f442c9151ccb41b2c5</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac511ffa635aa57b53cfe5e973ce2a7f2</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5d859a89f3d6383bfcc83f384809ad9a</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a3b44a5047fccd2c43cb291809adf438d</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0e01a26a145c51dab9e225717fe71b41</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0feca049975bc0282162538973d473a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a4df3de582d0d07faf93e452572b024fc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5fd9681ae8f05fb8296da639dc17067b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a70beb5ceddd532164fc0db0224793a79</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a8ae10f2e3c3416c0f09910d99c554d64</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a59d12d95149c182e7a35a944a378b30b</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ab80bb393279988c1e69f60bbfd418f7a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a8cedb82bfd5d3e5eed3e201f36f13478</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aed4f099a3c3744d9cf4694a9ff7d314b</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae1d36726a2a05723bb2e0771652e73dd</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa7c24ca1abe369c8bf0f879869741cbd</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ad960f6180bb69f3653b4ad733ba8b354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a99934eccd43498c0d7306bc729d5b27f</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a09b08c29b044c7bcd9bde088ada5fb60</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a355618c91e94d1929bb715d8a81f7ce9</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_ext&lt; Protocol1 &gt; &amp;, typename reactive_socket_service_ext&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae91d3784a67b8c7d0909334fbc7b41a3</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a370dd3d1224a77100517667af7fc3d72</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a52f2903d8b12145983b461422d24fe58</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5f4df731956ff6f3c3ea9657e0f2266c</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a9ee1a1d116ef4ba9ddb7a1f327aadad3</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae5b665635b26e54b5172b56f518b5a00</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa83f5d83a3d137f442c9151ccb41b2c5</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac511ffa635aa57b53cfe5e973ce2a7f2</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5d859a89f3d6383bfcc83f384809ad9a</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a3b44a5047fccd2c43cb291809adf438d</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0e01a26a145c51dab9e225717fe71b41</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a1615f7de7ffcf7acb8cfd80f2ca71d49</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a45f5fc19d16326458acfac1d62771c85</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5fd9681ae8f05fb8296da639dc17067b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a70beb5ceddd532164fc0db0224793a79</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a338987e6aafb68105f1296e77274d4ae</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac89bafc4d12282742483055c0c48ff17</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ab80bb393279988c1e69f60bbfd418f7a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a6def3f85905ea0d6ce8246973846e4cd</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aed4f099a3c3744d9cf4694a9ff7d314b</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a387a29dae225c5bb5d2abccc228f3c01</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa7c24ca1abe369c8bf0f879869741cbd</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ad960f6180bb69f3653b4ad733ba8b354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a99934eccd43498c0d7306bc729d5b27f</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a09b08c29b044c7bcd9bde088ada5fb60</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a355618c91e94d1929bb715d8a81f7ce9</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_ext&lt; Protocol1 &gt; &amp;, typename reactive_socket_service_ext&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae91d3784a67b8c7d0909334fbc7b41a3</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a370dd3d1224a77100517667af7fc3d72</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a52f2903d8b12145983b461422d24fe58</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5f4df731956ff6f3c3ea9657e0f2266c</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a9ee1a1d116ef4ba9ddb7a1f327aadad3</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae5b665635b26e54b5172b56f518b5a00</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa83f5d83a3d137f442c9151ccb41b2c5</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac511ffa635aa57b53cfe5e973ce2a7f2</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5d859a89f3d6383bfcc83f384809ad9a</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a3b44a5047fccd2c43cb291809adf438d</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0e01a26a145c51dab9e225717fe71b41</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a1615f7de7ffcf7acb8cfd80f2ca71d49</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a45f5fc19d16326458acfac1d62771c85</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5fd9681ae8f05fb8296da639dc17067b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a70beb5ceddd532164fc0db0224793a79</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a338987e6aafb68105f1296e77274d4ae</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac89bafc4d12282742483055c0c48ff17</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ab80bb393279988c1e69f60bbfd418f7a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a6def3f85905ea0d6ce8246973846e4cd</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aed4f099a3c3744d9cf4694a9ff7d314b</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a387a29dae225c5bb5d2abccc228f3c01</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa7c24ca1abe369c8bf0f879869741cbd</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ad960f6180bb69f3653b4ad733ba8b354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a99934eccd43498c0d7306bc729d5b27f</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a09b08c29b044c7bcd9bde088ada5fb60</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a355618c91e94d1929bb715d8a81f7ce9</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_ext&lt; Protocol1 &gt; &amp;, typename reactive_socket_service_ext&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae91d3784a67b8c7d0909334fbc7b41a3</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a370dd3d1224a77100517667af7fc3d72</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a52f2903d8b12145983b461422d24fe58</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5f4df731956ff6f3c3ea9657e0f2266c</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a9ee1a1d116ef4ba9ddb7a1f327aadad3</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae5b665635b26e54b5172b56f518b5a00</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa83f5d83a3d137f442c9151ccb41b2c5</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac511ffa635aa57b53cfe5e973ce2a7f2</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5d859a89f3d6383bfcc83f384809ad9a</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a3b44a5047fccd2c43cb291809adf438d</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0e01a26a145c51dab9e225717fe71b41</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a1615f7de7ffcf7acb8cfd80f2ca71d49</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a45f5fc19d16326458acfac1d62771c85</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5fd9681ae8f05fb8296da639dc17067b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a70beb5ceddd532164fc0db0224793a79</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a338987e6aafb68105f1296e77274d4ae</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac89bafc4d12282742483055c0c48ff17</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ab80bb393279988c1e69f60bbfd418f7a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a6def3f85905ea0d6ce8246973846e4cd</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aed4f099a3c3744d9cf4694a9ff7d314b</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a387a29dae225c5bb5d2abccc228f3c01</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_service_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</filename>
    <templarg>typename Protocol</templarg>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local</base>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local</base>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext_local::implementation_type</class>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a89996af624d787d870cd777f54531092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af122ac6efca740ffc8b20656b80f1082</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>add5d1f8510a02fe7ccb59c764c952ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a89996af624d787d870cd777f54531092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af122ac6efca740ffc8b20656b80f1082</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>add5d1f8510a02fe7ccb59c764c952ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a89996af624d787d870cd777f54531092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af122ac6efca740ffc8b20656b80f1082</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>add5d1f8510a02fe7ccb59c764c952ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a89996af624d787d870cd777f54531092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af122ac6efca740ffc8b20656b80f1082</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>add5d1f8510a02fe7ccb59c764c952ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a89996af624d787d870cd777f54531092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af122ac6efca740ffc8b20656b80f1082</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>add5d1f8510a02fe7ccb59c764c952ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a50dd2162f4219f37e9895b209927f0b1</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a85fa38f16a0049f8a6ec0a39f324819d</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a86c5fc30f1d2187d87a83231b71b6337</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a4a23856630562f8e0c372c39f6a2aa3f</anchor>
      <arglist>(implementation_type &amp;impl, typename reactive_socket_service_ext_local&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a3e2d16aac66cfcfb53533ef37e840448</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6444a60baa0fcfbc872cfb762bbec837</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af4e1efdb589784eeee4dffad08830a1d</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a79ade71b3621f54724bd20a3426f9e58</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2129ab54cac789649bccbcdadd9f2dbf</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a254d502aa1393357acc2f4241abbbfec</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a685757c37c2b5fab03044664e5ce6c94</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a9dab01e1c0c0e6700144521a91f04b28</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac44234336af1e6b9b42e144c8c66b2a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a153e91d9b0ef80469d28a9b6877df5cc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aedfcd939c6e68152ca6d4484a9c24a79</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a18d137d5942dee3119f015be7a1c7178</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2efe28f3aec85f47ad9bed10c324ed86</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ae238bb2df1580b57575fb40ced94ba6d</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a92479b4a0617f086f9dffa8b568463b1</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a99fba9960b9c9306c97eba29e356ea4c</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0b0c88329aaa556cc889cfdb8a21ea9a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac32ef845bee3eb527c7198b920e7dbfd</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad28ca6fd59f438c564f1e18996842f5a</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a8f312fe8043c40e6161e37bfca6aac1e</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac87b85ffd1438a680dd3a4c85b108359</anchor>
      <arglist>(boost::asio::io_context &amp;io_context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac0e7bc290053c1ec72d565d087d487f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a85fa38f16a0049f8a6ec0a39f324819d</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a86c5fc30f1d2187d87a83231b71b6337</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a60111f28cecd698c2068b830f507ab4c</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_ext_local&lt; Protocol1 &gt; &amp;, typename reactive_socket_service_ext_local&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a3e2d16aac66cfcfb53533ef37e840448</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6444a60baa0fcfbc872cfb762bbec837</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af4e1efdb589784eeee4dffad08830a1d</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a79ade71b3621f54724bd20a3426f9e58</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2129ab54cac789649bccbcdadd9f2dbf</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a254d502aa1393357acc2f4241abbbfec</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a685757c37c2b5fab03044664e5ce6c94</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a9dab01e1c0c0e6700144521a91f04b28</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2b74e63bf8ff1e04dda26a7fd9c7e6cc</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac44234336af1e6b9b42e144c8c66b2a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a153e91d9b0ef80469d28a9b6877df5cc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aedfcd939c6e68152ca6d4484a9c24a79</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a18d137d5942dee3119f015be7a1c7178</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2efe28f3aec85f47ad9bed10c324ed86</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ae238bb2df1580b57575fb40ced94ba6d</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a92479b4a0617f086f9dffa8b568463b1</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a99fba9960b9c9306c97eba29e356ea4c</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0b0c88329aaa556cc889cfdb8a21ea9a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac32ef845bee3eb527c7198b920e7dbfd</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad28ca6fd59f438c564f1e18996842f5a</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a8f312fe8043c40e6161e37bfca6aac1e</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6ad5459effe582017e3b8bcabfa81f43</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac0e7bc290053c1ec72d565d087d487f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a85fa38f16a0049f8a6ec0a39f324819d</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a86c5fc30f1d2187d87a83231b71b6337</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a60111f28cecd698c2068b830f507ab4c</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_ext_local&lt; Protocol1 &gt; &amp;, typename reactive_socket_service_ext_local&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a3e2d16aac66cfcfb53533ef37e840448</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6444a60baa0fcfbc872cfb762bbec837</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af4e1efdb589784eeee4dffad08830a1d</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a79ade71b3621f54724bd20a3426f9e58</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2129ab54cac789649bccbcdadd9f2dbf</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a254d502aa1393357acc2f4241abbbfec</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a685757c37c2b5fab03044664e5ce6c94</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a9dab01e1c0c0e6700144521a91f04b28</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2b74e63bf8ff1e04dda26a7fd9c7e6cc</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac44234336af1e6b9b42e144c8c66b2a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a153e91d9b0ef80469d28a9b6877df5cc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad2be0863666abbea565993633af6285f</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad5440838b19f730f45204a414069771c</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2efe28f3aec85f47ad9bed10c324ed86</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ae238bb2df1580b57575fb40ced94ba6d</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aa599deffa6166764dd40982bb97b8d9b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a34011b889df70d420b289a7527ae9c1b</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0b0c88329aaa556cc889cfdb8a21ea9a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0c4d000cddb761a0ae27e56a557c9b42</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad28ca6fd59f438c564f1e18996842f5a</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aac79d8ec4a5e9f4217ba230f7870ea56</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6ad5459effe582017e3b8bcabfa81f43</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac0e7bc290053c1ec72d565d087d487f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a85fa38f16a0049f8a6ec0a39f324819d</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a86c5fc30f1d2187d87a83231b71b6337</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a60111f28cecd698c2068b830f507ab4c</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_ext_local&lt; Protocol1 &gt; &amp;, typename reactive_socket_service_ext_local&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a3e2d16aac66cfcfb53533ef37e840448</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6444a60baa0fcfbc872cfb762bbec837</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af4e1efdb589784eeee4dffad08830a1d</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a79ade71b3621f54724bd20a3426f9e58</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2129ab54cac789649bccbcdadd9f2dbf</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a254d502aa1393357acc2f4241abbbfec</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a685757c37c2b5fab03044664e5ce6c94</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a9dab01e1c0c0e6700144521a91f04b28</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2b74e63bf8ff1e04dda26a7fd9c7e6cc</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac44234336af1e6b9b42e144c8c66b2a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a153e91d9b0ef80469d28a9b6877df5cc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad2be0863666abbea565993633af6285f</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad5440838b19f730f45204a414069771c</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2efe28f3aec85f47ad9bed10c324ed86</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ae238bb2df1580b57575fb40ced94ba6d</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aa599deffa6166764dd40982bb97b8d9b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a34011b889df70d420b289a7527ae9c1b</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0b0c88329aaa556cc889cfdb8a21ea9a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0c4d000cddb761a0ae27e56a557c9b42</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad28ca6fd59f438c564f1e18996842f5a</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aac79d8ec4a5e9f4217ba230f7870ea56</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6ad5459effe582017e3b8bcabfa81f43</anchor>
      <arglist>(execution_context &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac0e7bc290053c1ec72d565d087d487f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a85fa38f16a0049f8a6ec0a39f324819d</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a86c5fc30f1d2187d87a83231b71b6337</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a60111f28cecd698c2068b830f507ab4c</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_ext_local&lt; Protocol1 &gt; &amp;, typename reactive_socket_service_ext_local&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a3e2d16aac66cfcfb53533ef37e840448</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6444a60baa0fcfbc872cfb762bbec837</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af4e1efdb589784eeee4dffad08830a1d</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a79ade71b3621f54724bd20a3426f9e58</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2129ab54cac789649bccbcdadd9f2dbf</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a254d502aa1393357acc2f4241abbbfec</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a685757c37c2b5fab03044664e5ce6c94</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a9dab01e1c0c0e6700144521a91f04b28</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2b74e63bf8ff1e04dda26a7fd9c7e6cc</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac44234336af1e6b9b42e144c8c66b2a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a153e91d9b0ef80469d28a9b6877df5cc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad2be0863666abbea565993633af6285f</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad5440838b19f730f45204a414069771c</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2efe28f3aec85f47ad9bed10c324ed86</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ae238bb2df1580b57575fb40ced94ba6d</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aa599deffa6166764dd40982bb97b8d9b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a34011b889df70d420b289a7527ae9c1b</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0b0c88329aaa556cc889cfdb8a21ea9a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0c4d000cddb761a0ae27e56a557c9b42</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad28ca6fd59f438c564f1e18996842f5a</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aac79d8ec4a5e9f4217ba230f7870ea56</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler, const IoExecutor &amp;io_ex)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactor_op_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</filename>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</anchorfile>
      <anchor>abd7742286af11d93a9469834ec47b938</anchor>
      <arglist>(perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</anchorfile>
      <anchor>abd7742286af11d93a9469834ec47b938</anchor>
      <arglist>(perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</anchorfile>
      <anchor>abd7742286af11d93a9469834ec47b938</anchor>
      <arglist>(perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</anchorfile>
      <anchor>aa0f010d699f8c4a88eb178e954413516</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</anchorfile>
      <anchor>aa0f010d699f8c4a88eb178e954413516</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::ip::address</type>
      <name>da_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</anchorfile>
      <anchor>a961c9a8b91b8b53de1ada7f96ef34eb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactor_op_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</filename>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>a75dd9cb0345b97d3432893959e2fadba</anchor>
      <arglist>(perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>a75dd9cb0345b97d3432893959e2fadba</anchor>
      <arglist>(perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>a75dd9cb0345b97d3432893959e2fadba</anchor>
      <arglist>(perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>a28046ac42b7235ccf37485bf4d8fd044</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>a28046ac42b7235ccf37485bf4d8fd044</anchor>
      <arglist>(const boost::system::error_code &amp;success_ec, perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="variable">
      <type>std::uint32_t</type>
      <name>uid_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>af6f065132b508f276e1ee3836d6c4185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::uint32_t</type>
      <name>gid_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>a939249826bb4136813f08ed7c17ad86f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::basic_datagram_socket_ext::rebind_executor</name>
    <filename>structboost_1_1asio_1_1basic__datagram__socket__ext_1_1rebind__executor.html</filename>
    <templarg>typename Executor1</templarg>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__datagram__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>a1d6349205b8aaf729174a8a3787d0c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__datagram__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>a1d6349205b8aaf729174a8a3787d0c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__datagram__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>a1d6349205b8aaf729174a8a3787d0c22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::basic_socket_ext::rebind_executor</name>
    <filename>structboost_1_1asio_1_1basic__socket__ext_1_1rebind__executor.html</filename>
    <templarg>typename Executor1</templarg>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>ac7f41345d65f64b44a96181285ff3349</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>ac7f41345d65f64b44a96181285ff3349</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>ac7f41345d65f64b44a96181285ff3349</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::basic_socket_ext_local::rebind_executor</name>
    <filename>structboost_1_1asio_1_1basic__socket__ext__local_1_1rebind__executor.html</filename>
    <templarg>typename Executor1</templarg>
    <member kind="typedef">
      <type>basic_socket_ext_local&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__socket__ext__local_1_1rebind__executor.html</anchorfile>
      <anchor>ac58fe9c9bcd0ecdf9dba447a81e61660</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext_local&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__socket__ext__local_1_1rebind__executor.html</anchorfile>
      <anchor>ac58fe9c9bcd0ecdf9dba447a81e61660</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_socket_ext_local&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__socket__ext__local_1_1rebind__executor.html</anchorfile>
      <anchor>ac58fe9c9bcd0ecdf9dba447a81e61660</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::basic_stream_socket_ext::rebind_executor</name>
    <filename>structboost_1_1asio_1_1basic__stream__socket__ext_1_1rebind__executor.html</filename>
    <templarg>typename Executor1</templarg>
    <member kind="typedef">
      <type>basic_stream_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__stream__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>ad367069bf1cb6e4ba97516afd7385de7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_stream_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__stream__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>ad367069bf1cb6e4ba97516afd7385de7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_stream_socket_ext&lt; Protocol, Executor1 &gt;</type>
      <name>other</name>
      <anchorfile>structboost_1_1asio_1_1basic__stream__socket__ext_1_1rebind__executor.html</anchorfile>
      <anchor>ad367069bf1cb6e4ba97516afd7385de7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::remote_info_t</name>
    <filename>structvsomeip__v3_1_1remote__info__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a261bcf02447f43be8ddf87c3430cdecf</anchor>
      <arglist>(const remote_info_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>ip_address_t</type>
      <name>ip_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a97899c7bbff5fbf24cfde3659cf653c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::uint16_t</type>
      <name>first_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a304276bd7d66691d56366bb2ba537d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::uint16_t</type>
      <name>last_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a7b0c1481e8c58b289c63e91d0250786d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_range_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a1dab3825367e030e5ee9ae5ac9a4f0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_reliable_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a6b95049248901aeef64ea30b30d62c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::remote_subscription</name>
    <filename>classvsomeip__v3_1_1remote__subscription.html</filename>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a11b59757d52be67683093b3fda3b574e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a8633eec7a05f976a977e5e52dcd90ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a58e451e5d0bc69ec38a8f80bd9889b41</anchor>
      <arglist>(const remote_subscription &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>aa617788d3d9cf79feb8bc51ef9a7fed9</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>reset</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a6e21296bc3df636038059ca155a9e30e</anchor>
      <arglist>(const std::set&lt; client_t &gt; &amp;_clients)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a49397b6fae9b301bddc9ce31c13e7388</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a409bde6e7a0db163c6fd626ea8891375</anchor>
      <arglist>(const bool _is_initial)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>force_initial_events</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a4972c38ac039e0ccbec3a3b667b004b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_force_initial_events</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a123398833fc6a7d1ff3340419e96be3b</anchor>
      <arglist>(const bool _force_initial_events)</arglist>
    </member>
    <member kind="function">
      <type>remote_subscription_id_t</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a92ca6e93e528471ea0cbca8e1130be80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_id</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a93a2dea6fb6ef287e57c780bfcec3a41</anchor>
      <arglist>(const remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; remote_subscription &gt;</type>
      <name>get_parent</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a04df8e2b163e1aa355c5802c03d14194</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_parent</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a33ecfccb73ebfb4f520df8973251160b</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_parent)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; eventgroupinfo &gt;</type>
      <name>get_eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>ab7f98aa3176b1b77200782978406aa5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a33f26d6aed127c473c9363d132ad05bd</anchor>
      <arglist>(const std::shared_ptr&lt; eventgroupinfo &gt; &amp;_info)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a33f50e48c30da95efcd35771efa9dd75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a3b5afaefeb77244400a3d81878cb4c22</anchor>
      <arglist>(const ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_reserved</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>aa8faddb3a79b74f579a85474c3a97f9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reserved</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a46d87ffef992b723537976a0af019bca</anchor>
      <arglist>(const uint16_t _reserved)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_counter</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a58fe81aac2d0fae458da4680e26da5c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_counter</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>aeba9d4e3a17594b4672b59fbb13143aa</anchor>
      <arglist>(uint8_t _counter)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; client_t &gt;</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a88300f91858676e165c5b4184ba04e2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a6184264a8b10a08caa93f4391d40c6fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a588e6c6ba5effd0fa919b7d5488d46a5</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_client</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a0b18f687ca7165e9f25c5202dd4b16b1</anchor>
      <arglist>(const client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT remote_subscription_state_e</type>
      <name>get_client_state</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a88aee655489aaa0a3b0b61b85da3bfd5</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_client_state</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a8d8b3dd6166df1e1a5b28528c91a25bf</anchor>
      <arglist>(const client_t _client, remote_subscription_state_e _state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_all_client_states</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>ade8e96d499b795e2d92d20a960d03a34</anchor>
      <arglist>(remote_subscription_state_e _state)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::steady_clock::time_point</type>
      <name>get_expiration</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>af9b94a78b4b71737f709d9d7007dd41b</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a9ce898ff663ddceee6d3f0b9d6a25183</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>abbfec9b58b62bb53207e5202cb7ffa09</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_subscriber)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get_reliable</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a2fe0d1b1cf079bffca48e22d5a5c6c2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>ad1dff04980de335d226b12a37eb1052a</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_reliable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get_unreliable</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>ad389f97b23878aded36037d8028ebeeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_unreliable</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>aa844e061ae7b9fefb73cbeb9f5625079</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_unreliable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_pending</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a6b6a31a1c0e582311318c653489141d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_acknowledged</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a349fa434ae8dbf22e74df310771fe6f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>update</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a78bb1ec0d729c05c988ea46e9145af71</anchor>
      <arglist>(const std::set&lt; client_t &gt; &amp;_clients, const std::chrono::steady_clock::time_point &amp;_timepoint, const bool _is_subscribe)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_answers</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a87a7dcda893c3709a0d0d5494e094d27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_answers</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a7541bb2dc358d76b45ce360eabe3d77c</anchor>
      <arglist>(const std::uint32_t _answers)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::remote_subscription_ack</name>
    <filename>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</filename>
    <member kind="function">
      <type></type>
      <name>remote_subscription_ack</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a478a72f8abdd01ecf676d84f88a6176d</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_complete</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>aa10db34dcf64db36b848ead31022d437</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>complete</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a6925d0a0d625b3dc4ffd8683498f5c6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_done</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>aa3fde26477867d14f82c9e4831c75b41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>done</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a60d0374814a091a8e32d63f91e196e18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::shared_ptr&lt; message_impl &gt; &gt;</type>
      <name>get_messages</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a4d2d48942303049e02690c6c62c35ab1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message_impl &gt;</type>
      <name>get_current_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a6f7a3269dff039f2cc59ce4667da237e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message_impl &gt;</type>
      <name>add_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a77789bc313302e25b4b61de0c0aa355e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::ip::address</type>
      <name>get_target_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a7fe4ae21f0344556a2f1f7536fdc48cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pending</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a6d278f9f61543fafff863a9df0b8fdd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::shared_ptr&lt; remote_subscription &gt; &gt;</type>
      <name>get_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a34568b3b5a967b8334a4481786d2da9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a155d4de557f3e19a2ffc8532c1a3c0ce</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>aea6de43b03b4bf3b51f7a48a8ccff450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_lock&lt; std::recursive_mutex &gt;</type>
      <name>get_lock</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a146cb8d8de9f42bf97b820bab71e2082</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::request</name>
    <filename>classvsomeip__v3_1_1sd_1_1request.html</filename>
    <member kind="function">
      <type></type>
      <name>request</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>abe9650e340ea0bb9cc11c4611a23124b</anchor>
      <arglist>(major_version_t _major, minor_version_t _minor, ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a3b24768f041fd34937bfa2190748887b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_major</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a411b9a566bf810d3f30d602b09aa6db4</anchor>
      <arglist>(major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>minor_version_t</type>
      <name>get_minor</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>ad05ae09f0ed3fbaf120f346e0fe5af94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_minor</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a34f3b4a6748eeb534c0e3636af1c39f2</anchor>
      <arglist>(minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a8434fe4c318faca82e62484b98380ac6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a4063b7f2e2f4c0cdf3bb5d42c5c8a6f4</anchor>
      <arglist>(ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_sent_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>ac15021a82baeb808ac93d68ceae7d84f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sent_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a34e9217367c740b61e89463e28838014</anchor>
      <arglist>(uint8_t _sent_counter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_host</name>
    <filename>classvsomeip__v3_1_1routing__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__host.html</anchorfile>
      <anchor>a824434c8be3000a56ce8eb4307881ccc</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__host.html</anchorfile>
      <anchor>ae282ae35126b85095466b3e59a5bc254</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *_receiver, const boost::asio::ip::address &amp;_destination=boost::asio::ip::address(), client_t _bound_client=VSOMEIP_ROUTING_CLIENT, credentials_t _credentials={ANY_UID, ANY_GID}, const boost::asio::ip::address &amp;_remote_address=boost::asio::ip::address(), std::uint16_t _remote_port=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__host.html</anchorfile>
      <anchor>a64b66a7d9581eab3086703771b44e86a</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager</name>
    <filename>classvsomeip__v3_1_1routing__manager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a110830ac9034d1fded02edea800ee87d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a291df292f592816311ea2dc38f296c2f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a4a9a5b3a1d9a02cad26cefc1694bdfb1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ab23d2a3b5f75bc8959f6f5247f712bea</anchor>
      <arglist>(const client_t &amp;_client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a2ec88203c08792c4ed3c2ccd629198ec</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a1a7c2fe5f07f25eea39bca522dfdedf4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a2016f9ccc0f2da3d9098c9ecd41e87fa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>affa93e3ece2faf64ba64ab3d3fffa297</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ad14963084d6c430ab8123ec770c192d9</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>af1395544fbb1754ac16c0c4957d0fb3d</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a5c7aadeae105be632661845b5ebd2a13</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a0f94c3d1136bcd9ce2e8f4e1f97a361f</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a5e7a583a64cc0d67ecdf559561b7b7d1</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>acde5fa0161f816c8d5ec71991a41648d</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a204b71b6668f98ad95d461844c5b91d8</anchor>
      <arglist>(client_t _client, std::shared_ptr&lt; message &gt; _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a07bb072b129c2d4e34522f0e98e9ab53</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, client_t _bound_client=VSOMEIP_ROUTING_CLIENT, credentials_t _credentials={ANY_UID, ANY_GID}, uint8_t _status_check=0, bool _sent_from_remote=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>aa6478d671c1936e02768de091f26a63a</anchor>
      <arglist>(const client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, std::shared_ptr&lt; message &gt;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ab027c9680fa750274e072defe5cf7398</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a89c2d7664053810e7239a2247f2e6246</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, const event_type_e _type, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, epsilon_change_func_t _epsilon_change_func, bool _is_provided, bool _is_shadow=false, bool _is_cache_placeholder=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>abf09a01a2e477b63a126189497ca9738</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _event, bool _is_provided)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; event &gt;</type>
      <name>find_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ab6586be5b22093d13940f17289849616</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; std::shared_ptr&lt; event &gt; &gt;</type>
      <name>find_events</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a190835a3ed76cd5b7b311eb2e625e71b</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ae38a9791b507c75fde237a96bab38b5e</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a511c530097e6b11f04974d6b75b003c1</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a0237766212b17b21ce5fc4546c4fab51</anchor>
      <arglist>(routing_state_e _routing_state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send_get_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ab94d1570174d9fac738d3e065a4eb790</anchor>
      <arglist>(client_t _client, offer_type_e _offer_type)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_adapter</name>
    <filename>classvsomeip__v3_1_1routing__manager__adapter.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_adapter</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__adapter.html</anchorfile>
      <anchor>a519ec2b289aad1f4f0c514bdf3b46bd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual routing_manager *</type>
      <name>get_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__adapter.html</anchorfile>
      <anchor>ab094a46070424afba824741113da3961</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>process_command</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__adapter.html</anchorfile>
      <anchor>af983df6657a3cb36c4c95aab929f3757</anchor>
      <arglist>(const byte_t *_data, length_t _length)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_base</name>
    <filename>classvsomeip__v3_1_1routing__manager__base.html</filename>
    <base>vsomeip_v3::routing_manager</base>
    <base>vsomeip_v3::routing_host</base>
    <class kind="struct">vsomeip_v3::routing_manager_base::subscription_data_t</class>
    <member kind="function">
      <type></type>
      <name>routing_manager_base</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a3254b2e335e13123304fe781d4dbf01f</anchor>
      <arglist>(routing_manager_host *_host)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_base</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a4fa288b722cb06bbb4db2cb40d3fe581</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ac8bc04753bcb0e6ff4e5c8ca7e66b04b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5e621f1f2ea424eaa8995a4e8865ce7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a7c407f7cbe87c3bf86ae424017d2c219</anchor>
      <arglist>(const client_t &amp;_client)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad0d0e987bd0aa9cd3abef5f3e78a905c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a79f5d23599b9254618d5da5fc1fb5f0d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ab9d458702e1bca20993120fd383f2dc9</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_manager_base &gt; &amp;_endpoint_manager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5cc4ec6be7ab39996fc6d70e299c467b</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>afd752f1c68a088cff0b5523363eb3669</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a1917d5117a6b1f62121a11d332361467</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a6be428f22cc21f78c45b9937986e7db2</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a097993c7b7646bdf337467f4c202f3e6</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, const event_type_e _type, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, epsilon_change_func_t _epsilon_change_func, bool _is_provided, bool _is_shadow=false, bool _is_cache_placeholder=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unregister_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a3bab20d25561b0693d395014a60d834a</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _event, bool _is_provided)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; std::shared_ptr&lt; event &gt; &gt;</type>
      <name>find_events</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a022a8c092d7cb385129dd3636d8a764d</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a7768a20230aa796a49f6bff6e21cd311</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5a13c653025136720ec118860928c6d9</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ada31bef27679116ee8f842b56e30ba13</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a92657fbf0c8bb3d3d625b77869e1cbe6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>acbf29b69261a99fd4d420a41c15c1c42</anchor>
      <arglist>(client_t _client, std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a10fd5864009674224223189c89ca6232</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, client_t _bound_client=VSOMEIP_ROUTING_CLIENT, credentials_t _credentials={ANY_UID, ANY_GID}, uint8_t _status_check=0, bool _sent_from_remote=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a91e911b073787897184e2fdda76dc128</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *_receiver, const boost::asio::ip::address &amp;_destination=boost::asio::ip::address(), client_t _bound_client=VSOMEIP_ROUTING_CLIENT, credentials_t _credentials={ANY_UID, ANY_GID}, const boost::asio::ip::address &amp;_remote_address=boost::asio::ip::address(), std::uint16_t _remote_port=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8ea936a233f8e4f787e5088b1e8709ac</anchor>
      <arglist>(routing_state_e _routing_state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_client_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aa274b94c93eaa0c8db95921139d9c388</anchor>
      <arglist>(client_t _client, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send_get_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a756e61bbdad64b62e2d0923a8e5f080a</anchor>
      <arglist>(client_t _client, offer_type_e _offer_type)=0</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>find_local_clients</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a0fa616d67a23bdc102212a67f0969da6</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; serviceinfo &gt;</type>
      <name>find_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a4e292de5248c4978f4f3b342418958e1</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>find_local_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad4cc7aa428cb571aa687808e4cce8667</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; event &gt;</type>
      <name>find_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>addb6f54d415167c573fc98e2ff5aa7c6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aa3a672bbe99c6336b3e486a64af27f3d</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a213fd4f9a6840cd42ea25ecc03ce5f50</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)=0</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::tuple&lt; major_version_t, minor_version_t, client_t &gt; &gt; &gt;</type>
      <name>local_services_map_t</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aed5abcf61bc9aeba320702f2d69f852e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; serviceinfo &gt;</type>
      <name>create_service_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ab944317d60a09f63ded7992de2901423</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl, bool _is_local_service)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clear_service_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a32a63a4af7b3ea7731abcc7a6900ccb9</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>services_t</type>
      <name>get_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a7499069864558eea70fdf78774ab252b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>services_t</type>
      <name>get_services_remote</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a83e9431265431b78b9d7ae9fea00cbd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a06792165fd01b2657f4b57c7e2c56376</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>afd57b68fe7c46db6cfab4e110a3e0369</anchor>
      <arglist>(client_t _client, bool _remove_uid)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ade2a65fcd3085ea1cbe198df187f77d2</anchor>
      <arglist>(client_t _client, const std::set&lt; std::tuple&lt; service_t, instance_t, eventgroup_t &gt; &gt; &amp;_subscribed_eventgroups, bool _remove_uid)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; eventgroupinfo &gt;</type>
      <name>find_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aee407185382ec9e8bfad1273ff24e013</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_eventgroup_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a581d310292a86c45291ab3cfb9740046</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>send_local_notification</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>af18c6005a77475566bb991204876cc11</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable=false, uint8_t _status_check=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>send_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ac9669385fe46db77326ce6fbfab8e59b</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; &amp;_target, client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, uint8_t _command, uint8_t _status_check=0) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>insert_subscription</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8921f20269f3272eca21be1eb5c3a726</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, client_t _client, std::set&lt; event_t &gt; *_already_subscribed_events)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; serializer &gt;</type>
      <name>get_serializer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a94c89c0c3d9cf8d294cf87f17d0950ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>put_serializer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>abf3cb6e491a7e9f1a341cc36af8d2533</anchor>
      <arglist>(const std::shared_ptr&lt; serializer &gt; &amp;_serializer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; deserializer &gt;</type>
      <name>get_deserializer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8fb10c771ac15477accbf8e7ab09a44b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>put_deserializer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a0934a21ce2fdc3c59e15916c05b2d04e</anchor>
      <arglist>(const std::shared_ptr&lt; deserializer &gt; &amp;_deserializer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>send_pending_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>adc724166d9a63570beac45909121382c</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>send_subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a83dfacaedf1843cb4a8a1287f9c8deb8</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_pending_subscription</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>afe79b7facee030f49f8e80d6312cf887</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unset_all_eventpayloads</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a07a39d407ba8044ca346d4362c5b1586</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unset_all_eventpayloads</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>adc2ae8d2969139f7aa3a94bac0b5e125</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notify_one_current_value</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad3754d40cdb069ea4b6708dedcd695e9</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, const std::set&lt; event_t &gt; &amp;_events_to_exclude)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; std::tuple&lt; service_t, instance_t, eventgroup_t &gt; &gt;</type>
      <name>get_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a17de8bfb616c7a0c35249fbfc6f82827</anchor>
      <arglist>(const client_t _client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; event_t &gt;</type>
      <name>find_events</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a219721f92ceade45d8d43f1121b59055</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>is_response_allowed</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a3d9f4d0902b5f69728d48750ac728439</anchor>
      <arglist>(client_t _sender, service_t _service, instance_t _instance, method_t _method)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>is_subscribe_to_any_event_allowed</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a92894c07069ad41bb220e0a88713c61e</anchor>
      <arglist>(credentials_t _credentials, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>routing_manager_host *</type>
      <name>host_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>af0c6d8d3b6a6d104b8aa0c52ae9d15b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::io_service &amp;</type>
      <name>io_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8bc3c101827fc5deaa6727085f1d97e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; client_t &gt;</type>
      <name>client_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ae447804837f3ba9040fdca66a31b4b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>configuration_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a6c29276c8f34f37d38b88add0e284467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::queue&lt; std::shared_ptr&lt; serializer &gt; &gt;</type>
      <name>serializers_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aeeb9738a0c7d4798dc85a74c92639273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>serializer_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5252ca3b86e394b1c048425c95256734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::condition_variable</type>
      <name>serializer_condition_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad638494138aea07b6b7d61798f12bc76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::queue&lt; std::shared_ptr&lt; deserializer &gt; &gt;</type>
      <name>deserializers_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>afe51d57789b1803283040f020c10860c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>deserializer_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a252bfaa09f56225d90acf38d13a48593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::condition_variable</type>
      <name>deserializer_condition_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a2367bc4b8a9bd50f9a331694e9d168aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>local_services_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a1ba8fe63a07a71cac512bfd499479f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>local_services_map_t</type>
      <name>local_services_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a70bb54dbd5238f29499429dc4a329dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::set&lt; client_t &gt; &gt; &gt;</type>
      <name>local_services_history_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ac51c0ac013c2b00d2eff3ef455502fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>eventgroups_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a405d55dcf887a6befd1678dbea9ac6c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; eventgroup_t, std::shared_ptr&lt; eventgroupinfo &gt; &gt; &gt; &gt;</type>
      <name>eventgroups_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5b4548f44bd552212c5548900d250ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>events_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8647904e1082e4f60c1cc282440da66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; event_t, std::shared_ptr&lt; event &gt; &gt; &gt; &gt;</type>
      <name>events_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a7406ba0ee0c39a459c0d447c8d6a6409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>event_registration_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a219ee503019c443218c6d8c977e6e2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; subscription_data_t &gt;</type>
      <name>pending_subscriptions_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ac3265914f1d65116f89bed07d0511ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>services_t</type>
      <name>services_remote_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a2e2c7dd7bb372a9ed83c53cd50a62fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>services_remote_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a4b201b7e95a789610f99bf77af547113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; endpoint_manager_base &gt;</type>
      <name>ep_mgr_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a44bae3b7800a1603781cf635d4a2f3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>own_uid_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>acfd42691470f84ae435e746ffbe79aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>own_gid_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a2174509b3a2add7b4446f2720ad5e443</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_host</name>
    <filename>classvsomeip__v3_1_1routing__manager__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a9cd63fc7c00e8ffb33143344c3c49432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a6d05c4cb42bda27c54cfce560e8fd8de</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a6989a3ea32c6b0d8f91b63a5b240ae14</anchor>
      <arglist>(const client_t &amp;_client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>ac51fd9c04f3a148ddc6f4025456ab611</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>aec56ce8ae0ff6fe6a5aa952a5a5381d2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a0285705f8d93cf615968a4a2c0fa4643</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a36f465e154d72cc48076354d97ca3cf5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_availability</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a4684d7c83e1453e0491db923e153b2cf</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _is_available, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a251cd9da419252291d4906363f784b6b</anchor>
      <arglist>(state_type_e _state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>afbd36851bfd1577b61059cde145a25ed</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; &amp;&amp;_message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscription</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a702a5577baa6fcb6e588083032ceb837</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, client_t _client, uid_t _uid, gid_t _gid, bool _subscribed, std::function&lt; void(bool)&gt; _accepted_cb)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscription_status</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>aa54765a84ce93f15928e966586d5e7ca</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, uint16_t _error)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>af00a6be75323908850322df1e32d628e</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>ac1704b291853210c6006bf46ae03cbef</anchor>
      <arglist>(std::vector&lt; std::pair&lt; service_t, instance_t &gt; &gt; &amp;_services)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a05a63794eb235fb5a93b3ec4498a9259</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_impl</name>
    <filename>classvsomeip__v3_1_1routing__manager__impl.html</filename>
    <base>vsomeip_v3::routing_manager_base</base>
    <base>vsomeip_v3::routing_manager_stub_host</base>
    <base>vsomeip_v3::sd::service_discovery_host</base>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::shared_ptr&lt; servicegroup &gt; &gt;</type>
      <name>servicegroups_t</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a8821e95b06414893d5a240a1e5244a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>routing_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aeefe66d29cf75d00bfb229da1d3fe558</anchor>
      <arglist>(routing_manager_host *_host)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~routing_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0fdc0a7aebf0366dd1be78027a5ae9bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a69db7bd7178b8230b37f91a30e63c19c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>adf4ee7dccd0cd00bb82f4195f060e6d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0f1927ad67c93ebff4e40f2ec9c43010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aa1b01c3627410f0c70ed8586ba987f76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a07abd77e4304b1efeb090ddc5c912d56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a415bb6eb51f0910c263eff3b33df113f</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a7a306a5cd4a9dbbef4045817143e07d4</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ac893721f7939d0adb922fb0fd7a94dd8</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6f6ec34b214aa862e2fd1768fb12d56b</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ab0f8d97b808b9da84c2cb9f2b4b3edb0</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ad22a47b0d34c9cf7ad3ba6d738f4fc73</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6e0f76f171dd4382d1612378bb2a917d</anchor>
      <arglist>(client_t _client, std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ac6cf7b4f6609d3daff85fe3feec8cc27</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, client_t _bound_client=VSOMEIP_ROUTING_CLIENT, credentials_t _credentials={ANY_UID, ANY_GID}, uint8_t _status_check=0, bool _sent_from_remote=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a469a565527ed8a598d9d43a17f1b647f</anchor>
      <arglist>(const client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6242c9497b34c43a40e725d8fe80e12c</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_via_sd</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a4de6906acb4b5dcf3a46b7ac3d34f362</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, uint16_t _sd_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a979c7ab6ddd88b3d070d4f39cc9d7f87</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, const event_type_e _type, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, epsilon_change_func_t _epsilon_change_func, bool _is_provided, bool _is_shadow, bool _is_cache_placeholder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_shadow_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0be4e57ff1113b14dd8f25862a4db44b</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type, reliability_type_e _reliability, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_shadow_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0c5efe5496be9fa8d6af34063b538bab</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _event, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aabdc0f68ec53b5fb2d8a8cb2c6753989</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_subscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5f3160a9ee75435074edb2ff61ceb174</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_subscribe_nack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aca1ee989bbae55797b3aa02690fe0099</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a2058f7e9d98c99317ff0ba2ab871c712</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a29821f5e6b0c6110242ac2000f37aef4</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_remote_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6ab289640d3e0656ae60525cffc14691</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a2677e246e2ff61c55e66bc7ccb634b43</anchor>
      <arglist>(client_t _client, bool _remove_uid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ae970a87dac8fe18db99b08265ceb4a29</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_availability</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a24cafa4a7a2db0e3ecc819a846d0fe1a</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _is_available, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_pong</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a8d199a6a5967df60bb39c90ad99cbf99</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_subscribe_ack_with_multicast</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a10ff9ee80828fa1d20cd32e0bd2471ef</anchor>
      <arglist>(service_t _service, instance_t _instance, const boost::asio::ip::address &amp;_sender, const boost::asio::ip::address &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_unsubscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a19fd6b7f2c4b4e5c53874e6373d7a3db</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5c5e90f3db43767723bf824934ceb583</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a866f839be5658bd734f0df2fa16d042f</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a2a73349842bc8e080201afee1094f153</anchor>
      <arglist>(const byte_t *_data, length_t _size, endpoint *_receiver, const boost::asio::ip::address &amp;_destination, client_t _bound_client, credentials_t _credentials, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6813a50564b36693723e76c68caa93ac</anchor>
      <arglist>(service_t _service, instance_t _instance, const byte_t *_data, length_t _size, bool _reliable, client_t _bound_client, credentials_t _credentials, uint8_t _check_status=0, bool _is_from_remote=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_notification</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a96d3bb21b63940702597929ceeccd533</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, const byte_t *_data, length_t _size, bool _notify_one)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>offer_service_remotely</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a05a901e3b60a8cc8f45268da423df84e</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop_offer_service_remotely</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aa16f901fb03f81c13b73f6cdb6815041</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled)</arglist>
    </member>
    <member kind="function">
      <type>const servicegroups_t &amp;</type>
      <name>get_servicegroups</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a1facfc4ae46989108deac7d721c7e5f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; eventgroupinfo &gt;</type>
      <name>find_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aa82ed1917c9009bce5b4b52df4b78648</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const</arglist>
    </member>
    <member kind="function">
      <type>services_t</type>
      <name>get_offered_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a2badf0d0039c8608e10f0d8a9f9f1512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; serviceinfo &gt;</type>
      <name>get_offered_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a374f5300d958d1d500aeb6fc327c0a0f</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; instance_t, std::shared_ptr&lt; serviceinfo &gt; &gt;</type>
      <name>get_offered_service_instances</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0788d2c0695a0a30b1830d6048309d4a</anchor>
      <arglist>(service_t _service) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_service_discovery_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0304fd421e7fa3a14a5398996b1f9beb</anchor>
      <arglist>(const std::string &amp;_address, uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a7abb90bed19d9c3aab3494e0b03631e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a2cdf4dbed7da55c32a8167aa79f07fdf</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl, const boost::asio::ip::address &amp;_reliable_address, uint16_t _reliable_port, const boost::asio::ip::address &amp;_unreliable_address, uint16_t _unreliable_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>del_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a901b789b2a3c96a21a9a7d1665ae4811</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _has_reliable, bool _has_unreliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ae1628dcdb011d4fbea7b5fc4662cbc1f</anchor>
      <arglist>(std::chrono::milliseconds _elapsed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_remote_subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a00688408ba732263926f5428c8278006</anchor>
      <arglist>(std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription, const remote_subscription_callback_t &amp;_callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_remote_unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ad93e74662c684f59ae6353023d83a039</anchor>
      <arglist>(std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a73e80df101d2e5204afb16c9d1586205</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a432c8cf83549df89bb5da431a20dd9f2</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5a2c2c2ff1b49f74b7fb3048026a8745</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const configuration::port_range_t &amp;_range, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aee6f2b47e40b7066fcadb4ff4c803f04</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ab9fa50585871184aa6019977d00eee0b</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>afe8afa128c35fea0f9c59e66621a246d</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const configuration::port_range_t &amp;_range, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::steady_clock::time_point</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a61da1845e0206ce6ff12ff7b3285ad35</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_client_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0e8b0891a3dd83e7fcb9c40d846abb0c</anchor>
      <arglist>(client_t _client, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_client_error</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a53684973276ef96fc595f278d5825fd9</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint_manager_impl &gt;</type>
      <name>get_endpoint_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a757f9fb2c50c7d13c376e167bc808d39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a99bdb7d238dc56549f945351e329a62a</anchor>
      <arglist>(routing_state_e _routing_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_get_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ac89fa86704fb743642f7eddf56b0c86a</anchor>
      <arglist>(client_t _client, offer_type_e _offer_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_initial_events</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a164ef2d6f087e40ad20b3da0425eaf32</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_subscriber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_stub_status</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a58dc5c0656b90caaa151c7d01e85bc38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5707be24ae580117cc329a8721f6deb2</anchor>
      <arglist>(return_code_e _return_code, const byte_t *_data, length_t _size, instance_t _instance, bool _reliable, endpoint *const _receiver, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>service_endpoint_connected</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5baf956005dfe3a8cfb3577662a4ca8a</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint, bool _unreliable_only)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>service_endpoint_disconnected</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0737c2edd01e342d78b630ae914e8493</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ade1455bf3fa01b5706c2ab565e3432e9</anchor>
      <arglist>(const sd_acceptance_handler_t &amp;_handler) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a16b38073c5a7a9f7b0c43e8fb0b0219a</anchor>
      <arglist>(const reboot_notification_handler_t &amp;_handler) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>afbd221bf9d5b4871a8c431079a0bc55f</anchor>
      <arglist>(const routing_ready_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a7fb080abaddee13a8c644cc1e93eef58</anchor>
      <arglist>(const routing_state_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sd_acceptance_enabled</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a1fc7149eb222ca5427215f87e604cdd1</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const configuration::port_range_t &amp;_range, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_resend_provided_events_response</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a9a2a5c4f918acecdb3d1b0817b3706fe</anchor>
      <arglist>(pending_remote_offer_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>find_local_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a457eec240469393a28b87b478ce63d83</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>find_local_clients</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a1d4cec2c172fda1748df9e3b890c681b</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_subscribe_to_any_event_allowed</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a630f80d16dbf52a6c2e645347c1debcc</anchor>
      <arglist>(credentials_t _credentials, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>adc07eb661a5fc34d125a5b90b9be01dc</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_policy, const std::shared_ptr&lt; payload &gt; &amp;_payload, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0018319f943718f25d6538a118b67ce6</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const security_update_handler_t &amp;_handler)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_proxy</name>
    <filename>classvsomeip__v3_1_1routing__manager__proxy.html</filename>
    <base>vsomeip_v3::routing_manager_base</base>
    <member kind="function">
      <type></type>
      <name>routing_manager_proxy</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>adad95a4a68cfbf324ac7f7afeb3f9a5e</anchor>
      <arglist>(routing_manager_host *_host, bool _client_side_logging, const std::set&lt; std::tuple&lt; service_t, instance_t &gt; &gt; &amp;_client_side_logging_filter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_proxy</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ab035c89e68f88ed5720f5f9bd82a32cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a3fa0ff5f4782d42e3a71e617a4a659af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ae2353b25437db706caa08e7ac531699a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a0abdb860a9fe388ea2784024749b093a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a77dad551f6b70ace752f92400c71f24a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ada90b7783d0a35bf115ee73e92681b73</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a9f60abc5ad3df735fb4c8afd9202e0c7</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a51889c4c4828c9ea9937b01a549a3014</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ab004daabb629faa7f53ebcd752a5d6b5</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ae3568e7708aa47044c2f7676a3c848e8</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ab91a93ffad994e4fb0ebad84dda24eed</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a19fa55c542303f2d4a426094fc6f1b7c</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, client_t _bound_client=VSOMEIP_ROUTING_CLIENT, credentials_t _credentials={ANY_UID, ANY_GID}, uint8_t _status_check=0, bool _sent_from_remote=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a05fbe605c43f502040c2eee2ff02e0ae</anchor>
      <arglist>(const client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a8155f339bcb6ea153f0304a95cd20062</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ae629d5c57859514b855b58281f6677a0</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, const event_type_e _type, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, epsilon_change_func_t _epsilon_change_func, bool _is_provided, bool _is_shadow, bool _is_cache_placeholder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a57c07e3d53376694fcbd5f3d91c4c75c</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a59e508d6209f7eda0c1a176c1d154efe</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>af0a052cc845e8882811e5c1aa874fcc9</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>abec8cca5b2ea1426049a8161cd34e487</anchor>
      <arglist>(const byte_t *_data, length_t _size, endpoint *_receiver, const boost::asio::ip::address &amp;_destination, client_t _bound_client, credentials_t _credentials, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a01b3f159f661f2bc1620bcf7c74fb8c2</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_client_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>a99bfe888fe700dfbe2711753beb1d4db</anchor>
      <arglist>(client_t _client, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_client_error</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ac56fd71f0b45460a5bf754ad98d4b7d4</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ab534c8b02eeba65bb762b35db7d6ea27</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_get_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__proxy.html</anchorfile>
      <anchor>ae9e353b8e903145f4acc9d3d6f84000d</anchor>
      <arglist>(client_t _client, offer_type_e _offer_type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_stub</name>
    <filename>classvsomeip__v3_1_1routing__manager__stub.html</filename>
    <base>vsomeip_v3::routing_host</base>
    <member kind="function">
      <type></type>
      <name>routing_manager_stub</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ace97197177b5e9ffa47daa85c55297ff</anchor>
      <arglist>(routing_manager_stub_host *_host, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_stub</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a23e20b7d21a70e95ad702a09cef6bb3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ac287ef72952b6effe746e25b61bb23c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>aea5b82fe564aaf3aa4d39de66e942a3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>aaacbec34a97c7f937271074ba499d718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a84f738007c347e789b9eaf0ccf01e5f6</anchor>
      <arglist>(const byte_t *_data, length_t _size, endpoint *_receiver, const boost::asio::ip::address &amp;_destination, client_t _bound_client, credentials_t _credentials, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a0d79e4980aae197ee4998ca9b837a8fc</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>af0efdbd1f4c55560b199d465e5fef3b9</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a873820dbd99a5dba0c2579386088f71d</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_target, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a9c09edc2c9818024e6042aca0b99f7bc</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_target, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_subscribe_nack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a1faad57b0205a00ef2c88575d972fd2f</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_subscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a6505c893334fa8950b48004d9e792729</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contained_in_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a4eb48ecef7b59c4ae8a5bc89a5b972a0</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_local_receiver</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a903ccb56df91863313030b76a0cd293b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_ping</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a7c706bdeaa05a720c0a7e7d6fcc774e3</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_registered</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a6871b6c06771c187eb0c4742eee9fa1d</anchor>
      <arglist>(client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a8666c56310c07b26a34f64e72897aaaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_credentials</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>acf5a7bcc8ce6a4b6c808f36676fec5b4</anchor>
      <arglist>(const client_t _client, std::set&lt; service_data_t &gt; &amp;_requests)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_requests</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>af6f5188ab2a6ae271ae60860a83bf383</anchor>
      <arglist>(const client_t _client, std::set&lt; service_data_t &gt; &amp;_requests)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_registration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ade34eb9bc3c896c5da2e38d834b3f7c7</anchor>
      <arglist>(client_t _client, registration_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_endpoint_status</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a055d765c4cccc0c93ba4ee6d7d686517</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_provided_event_resend_request</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ab9bc0c4bf9a131db6ab1dc4ab1cdce2c</anchor>
      <arglist>(client_t _client, pending_remote_offer_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a45bb82ac1ccaf569af0314ec5dc0d35f</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_policy, const std::shared_ptr&lt; payload &gt; &amp;_payload, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a4a937b54fb94c70c6cb494c2662f757c</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_security_update_response</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>af2a5aff43bb318423e89c035db6c8a25</anchor>
      <arglist>(pending_security_update_id_t _id, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>policy_cache_add</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ae82d04f3abc7cae859fe90f1be903317</anchor>
      <arglist>(uint32_t _uid, const std::shared_ptr&lt; payload &gt; &amp;_payload)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>policy_cache_remove</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a926f2adb322dfabb0f3dd04e34f42cc4</anchor>
      <arglist>(uint32_t _uid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_cached</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>aa3fb11562775ad5b81906e94d58a3f24</anchor>
      <arglist>(uint32_t _uid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_update_security_policy_request</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a871c1be5c27b65a54e46545834e79e8f</anchor>
      <arglist>(client_t _client, pending_security_update_id_t _update_id, uint32_t _uid, const std::shared_ptr&lt; payload &gt; &amp;_payload)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_remove_security_policy_request</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a96bf6b44a05977863727d03e2533264b</anchor>
      <arglist>(client_t _client, pending_security_update_id_t _update_id, uint32_t _uid, uint32_t _gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_cached_security_policies</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a5205eca20d93ac31b27c8e3e6d4a81fa</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_requester_policies</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a6ad35253f701f2f2c516851b436e5d0f</anchor>
      <arglist>(uid_t _uid, gid_t _gid, const std::set&lt; std::shared_ptr&lt; policy &gt; &gt; &amp;_policies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_requester_policies</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>af5903df0e91f8edf5223211915bbe727</anchor>
      <arglist>(uid_t _uid, gid_t _gid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_stub_host</name>
    <filename>classvsomeip__v3_1_1routing__manager__stub__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_stub_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ad453889d5d21667c873424c23f8b1aac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>aeeeea852a4db06e8094a32897569a865</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, bool _must_queue=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ac8ce2ca2bb0dbc0ca003d49aae32dc48</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, bool _must_queue=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a5d55be5003c12b4e3cec89c4fe18fac3</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>adc340763151321e4f6084c91d448d7a5</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_shadow_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ac60f17b8e61a2e9102dfdedc976735c0</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type, reliability_type_e _reliability, bool _is_provided)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_shadow_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a5d6298886ef292fa7fbb99c50db96530</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _event, bool _is_provided)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a8167a899447bc8a1eeb9c93817b23757</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_nack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>af3bafae7248a8bc7e7eeaaeec07ef6e5</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _subscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ae8579fb16b437227f9772bf711b7bc7a</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _subscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ace5da047af606affcc8f617bdb060ec7</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_unsubscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>aba3231e0a6f814d8d36bc0570bcfd394</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, remote_subscription_id_t _unsubscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a638f48edc5864147b1d09cff6f26e570</anchor>
      <arglist>(service_t _service, instance_t _instance, const byte_t *_data, length_t _size, bool _reliable, client_t _bound_client, credentials_t _credentials, uint8_t _status_check=0, bool _is_from_remote=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_notification</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a0f9cb5eb229fad751b641381298f4e88</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, const byte_t *_data, length_t _size, bool _notify_one=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>aceffd2db0e8f7a23b48f77992301561a</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_availability</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a3011307c22c077d09ce3b8785f6cd907</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _is_available, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a4d9bcdf01a1b4fb35759c7417fd06315</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>addc5b440a9ac45972684cf79d4415d3d</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a138f10abef0452a951073257e205dc88</anchor>
      <arglist>(client_t _client, bool _remove_local)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a6a8f7f358d8b274efa8e1632817e6b6a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a4440ff6e59650d28e1db933855942692</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_pong</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a65a538f621094dfa1053784e2ae279c7</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>handle_client_error</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ad2f753b2ea055405f10154a70c43313a</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint_manager_impl &gt;</type>
      <name>get_endpoint_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ab6e82cd116f76db30f7bc88dbfdd841e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_resend_provided_events_response</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a213624de1f1f1320189f08b1c8a9a440</anchor>
      <arglist>(pending_remote_offer_id_t _id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>find_local_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a685f06ff7acdf844df0d400880958819</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; client_t &gt;</type>
      <name>find_local_clients</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a1c927865bf069a32e94c8009d87eee8c</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_subscribe_to_any_event_allowed</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a7b0316bf38e2e00f24f4a50adfee4743</anchor>
      <arglist>(credentials_t _credentials, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::runtime</name>
    <filename>classvsomeip_1_1runtime.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a6543751e63fd895ef060eaaf926c35da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>ac6e1b8c606870b98ea9004f10ba44dab</anchor>
      <arglist>(const std::string &amp;_name=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_message</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>afe505941432d6920f186ef21f66d8765</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_request</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>ad4f965b264ada6f3c517864947da4881</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_response</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>abae68103393ebf94df322e10d02b2496</anchor>
      <arglist>(const std::shared_ptr&lt; message &gt; &amp;_request) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_notification</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a3cc1e3f248c2d28611286a10a6e7caff</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>ae3adcb309ed2163594525a53abca2019</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a31ea42da8361b1d8c9249bd4f85a8308</anchor>
      <arglist>(const byte_t *_data, uint32_t _size) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>ad4587c551764ba91ebf6b871694d3523</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>get_application</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a0b78bbcdb2f21431cb369e434a26f382</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_application</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a14567a7458e9d72be23601655c5253c1</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_property</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a48877487033b1cc0d92faefa1c77a3d5</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_property</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a638f07cfaaa950b2fa45890e8cf92d78</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; runtime &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>abc88f6796fa8a68c819a8ee001df248d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::runtime</name>
    <filename>classvsomeip__v3_1_1runtime.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a1ae035f8c8bdb04db64474505af00aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>abd4310dfa4724c60283c18d9bc3bb176</anchor>
      <arglist>(const std::string &amp;_name=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_message</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a64c7b766f99f3aec3930c3b2e1862cba</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_request</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>add7d12d9b3a2dd606b07113b45b7de90</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_response</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>af1dcf352092b9a5404863ea2a7c3028f</anchor>
      <arglist>(const std::shared_ptr&lt; message &gt; &amp;_request) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_notification</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>aa2c537d5f05b7199e88538ecccd23811</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a8ca6d7739abd1121e8a115c655fc866b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a582fb3b9ea32cb8623cf19d83c8544b0</anchor>
      <arglist>(const byte_t *_data, uint32_t _size) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>ac5303eec4628799f490d6e1544630814</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>get_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>ab4a40d2ca9fca6e538bf19469a6ab283</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a3abb88ed839c3507aa16bee14236a768</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_property</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>aac5b3da1816536dc614927c2b26d8055</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_property</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a4589018e02d4162a9989ad89916d76bc</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; runtime &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>adbc45aca613505212e5be2bad0a55494</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::runtime</name>
    <filename>classvsomeip__v3_1_1sd_1_1runtime.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime.html</anchorfile>
      <anchor>a128490dd3dd69f1c2685001a6662027d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; service_discovery &gt;</type>
      <name>create_service_discovery</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime.html</anchorfile>
      <anchor>ae3ea1466292b69cb41cb5ac72179439b</anchor>
      <arglist>(service_discovery_host *_host, std::shared_ptr&lt; configuration &gt; _configuration) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::runtime_impl</name>
    <filename>classvsomeip_1_1runtime__impl.html</filename>
    <base>vsomeip_v3::runtime</base>
    <member kind="function">
      <type></type>
      <name>~runtime_impl</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a1422efcfb3c3cae7998d6e6203dace63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a018a36f0e639e55f37003132ea26cfad</anchor>
      <arglist>(const std::string &amp;_name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_message</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a394e00a4f3985de4641c51a2e824492e</anchor>
      <arglist>(bool _reliable=false) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_request</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a5517d37743e2475f69de1e542f1baaf3</anchor>
      <arglist>(bool _reliable=false) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_response</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a9969ba536cd6f0c2657ccf7116b5a09b</anchor>
      <arglist>(const std::shared_ptr&lt; message &gt; &amp;_request) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_notification</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>ab875b89c5fd65ac4c2de577a1353f61c</anchor>
      <arglist>(bool _reliable=false) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a2a256ca6bcbe7482005bf2d14fd956dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a07e3c01571780e14c05a1310050c5f08</anchor>
      <arglist>(const byte_t *_data, uint32_t _size) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>aa263c7a81c97b964f1d32bd1471be172</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>get_application</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a4d0c5d91aab8588e429a4b1c1379669d</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_application</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>addc21f326195270af3b06e0fc5c036f7</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_property</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a32a4788f5ec55116f9291944204fa93d</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_property</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a44f84706245976bb9f7e0b508f5801e1</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; runtime &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a48bcb423e7c1bfb22f9fe11ed59cc670</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::runtime_impl</name>
    <filename>classvsomeip__v3_1_1runtime__impl.html</filename>
    <base>vsomeip_v3::runtime</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime_impl</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>afa733901a0f9c7b031f74f27638268a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a1eb7ce27098aed92f23ea428c1b79e95</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_message</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a45c27994d36fb8439e196bf907750966</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_request</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a09d69bb1645e09ef02a4026308e999a8</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_response</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a8fa9f85b41415db6654fc5430e43a454</anchor>
      <arglist>(const std::shared_ptr&lt; message &gt; &amp;_request) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_notification</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>aeba73694010a60e3bf261a10e42f417b</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a0776ab695a2269c3a23354276d07083f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>aa9eae16ecdc250aa95337a66daf6f566</anchor>
      <arglist>(const byte_t *_data, uint32_t _size) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a53110a1a8fa50c64f81e1b879b3bb250</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>get_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a8662a78e1b9dd42e9634c1d1af9435b7</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a6de580e026ee2bd43bbcb8c9399215cd</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_property</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a5a11b863da5d067df26138afe49125e2</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_property</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>aaf5952930818388aaab39028db47ed49</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; runtime &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a3861b9c044bef197f69e83597947ad8b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::runtime_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1runtime__impl.html</filename>
    <base>vsomeip_v3::sd::runtime</base>
    <base>plugin_impl&lt; runtime_impl &gt;</base>
    <member kind="function">
      <type></type>
      <name>runtime_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime__impl.html</anchorfile>
      <anchor>aba28e993738bd6447b7628311f04f75c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime__impl.html</anchorfile>
      <anchor>ae355e6fdee46bd2553bfbeb1a0b7f6ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; service_discovery &gt;</type>
      <name>create_service_discovery</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime__impl.html</anchorfile>
      <anchor>a3caed2c65e3863684f128d7d1b978862</anchor>
      <arglist>(service_discovery_host *_host, std::shared_ptr&lt; configuration &gt; _configuration) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::security</name>
    <filename>classvsomeip__v3_1_1security.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~security</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a3488dbb62a2dbe6ea0b5fbb3faf8f1b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a275c9245d1c79bea0fded74d84f7b269</anchor>
      <arglist>(const configuration_element &amp;_element)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_enabled</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>ad1b9aa734c1f81ef605306c61da9444c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_audit</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>aa3f1f4ea5519a6954241cd3a203ebd83</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check_credentials</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>ae3b22f2bf6864e1bfa5c93182a3744d4</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check_routing_credentials</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a35d7d26e92b352103bdb00e48dc14e2d</anchor>
      <arglist>(client_t _client, uint32_t _uid, uint32_t _gid) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_client_allowed</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>aaa717c42c98810e0772a5cbff37331c3</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, client_t _client, service_t _service, instance_t _instance, method_t _method, bool _is_request_service=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_remote_client_allowed</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a4533c0152ddca7c23aac1e533a672767</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_offer_allowed</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a749e9f71866b4057644680a4c505cd5f</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, client_t _client, service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_security_policy</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a395a3a068f484e20e6fd1d7c5b289d10</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_policy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remove_security_policy</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>af5de35f96093aa2b7bb4aaf81785f5ee</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_uid_gid_to_client_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>ad36a774a40806d92fe0c571409bb2c30</anchor>
      <arglist>(std::pair&lt; uint32_t, uint32_t &gt; _uid_gid, std::set&lt; client_t &gt; &amp;_clients)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remove_client_to_uid_gid_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>ac4e7fb759bbff77861476622eb3b5c4e</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_client_to_uid_gid_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a8d2ccfed114ab108733470250c1cb1a5</anchor>
      <arglist>(client_t _client, std::pair&lt; uint32_t, uint32_t &gt; &amp;_uid_gid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>store_client_to_uid_gid_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a6d3f225fec2242fe17f4902c70151759</anchor>
      <arglist>(client_t _client, uint32_t _uid, uint32_t _gid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>store_uid_gid_to_client_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a8ff3e73f3fbda7b5cd292ba64d85f3c9</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_requester_policies</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a80fb8980f2d01c2a4973f06cbf50e03e</anchor>
      <arglist>(const std::shared_ptr&lt; policy &gt; _policy, std::set&lt; std::shared_ptr&lt; policy &gt; &gt; &amp;_requesters) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>ae70204181830f29a2ba37a6604c5a4d0</anchor>
      <arglist>(uid_t _uid, gid_t _gid, std::unordered_set&lt; client_t &gt; &amp;_clients) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; security &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a7adede36b1e569aa2700b8373c79242a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::security_impl</name>
    <filename>classvsomeip__v3_1_1security__impl.html</filename>
    <base>vsomeip_v3::security</base>
    <member kind="function">
      <type></type>
      <name>security_impl</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>ab7427d0dc02543fe496217d4a54da71e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>ad1c29593eb0e54cd0b75b40691fe9676</anchor>
      <arglist>(const configuration_element &amp;_element)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_enabled</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a40942b3492b645d1034e732a7fb1c84f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_audit</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a8e1a6a2a8806e7804e0d8138bee4e0a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_credentials</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a91e81f49e8a9477de9ffde8940b79c68</anchor>
      <arglist>(client_t _client, uid_t _uid, gid_t _gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_routing_credentials</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a43293b6ce5d82de594526bb1808e1316</anchor>
      <arglist>(client_t _client, uint32_t _uid, uint32_t _gid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_client_allowed</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a26106a97861cdf24bd40b7578e27bd80</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, client_t _client, service_t _service, instance_t _instance, method_t _method, bool _is_request_service=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_offer_allowed</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a54a092ae7445fcaeae8e949bfab9986b</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, client_t _client, service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_security_policy</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a1cf84cf5fb6ac42248e0ed0da3f760dd</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_policy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_security_policy</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>ab0b1faffa91af8425ea53d96c28a0fcf</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_security_credentials</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>ae2413b50f5690dead084c8fd196cae93</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_credentials_policy, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_remote_client_allowed</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>ac0325afaae9adecebf2365840f765643</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_update_allowed</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a6e3edd22f1a9ff1d713b3fa06dd0ca89</anchor>
      <arglist>(uint32_t _uid, std::shared_ptr&lt; policy &gt; &amp;_policy) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_removal_allowed</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a3d8ef4480cb0b824485cdaa5b472b3b5</anchor>
      <arglist>(uint32_t _uid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_policy</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a393736f823b1646172b16efead178d86</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid, const std::shared_ptr&lt; policy &gt; &amp;_policy) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_uid_gid_to_client_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a3ac31bc21fae4156b1699e50bba8c3df</anchor>
      <arglist>(std::pair&lt; uint32_t, uint32_t &gt; _uid_gid, std::set&lt; client_t &gt; &amp;_clients)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_client_to_uid_gid_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>af88d5637ad94a9d90032ec58489303b1</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_client_to_uid_gid_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a9b3ae34b358e84c727a2f722b5a34729</anchor>
      <arglist>(client_t _client, std::pair&lt; uint32_t, uint32_t &gt; &amp;_uid_gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>store_client_to_uid_gid_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a4cfb2acbaff9e30a1941c69fa51d36ba</anchor>
      <arglist>(client_t _client, uint32_t _uid, uint32_t _gid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>store_uid_gid_to_client_mapping</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a2d7b1f6b374e52794315b67522f9716d</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_requester_policies</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a55c32750eff999d23867e97103fecfab</anchor>
      <arglist>(const std::shared_ptr&lt; policy &gt; _policy, std::set&lt; std::shared_ptr&lt; policy &gt; &gt; &amp;_requesters) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>ad4fc7b0524c6058350d9e61ddfa47c1d</anchor>
      <arglist>(uid_t _uid, gid_t _gid, std::unordered_set&lt; client_t &gt; &amp;_clients) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; security_impl &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1security__impl.html</anchorfile>
      <anchor>a6c03515eb6b8f48dee1199b57c4b4b6c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::selective_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>selective_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>ade3a21bd38d04e5eb81ef5e53dff8c74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~selective_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>affc3cc72c18a5a27d7b4f0e2ec574a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>ab607d6ef5b4ad20afc5d5dd1f190673f</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>add084d1d07db324035ee96ed078ee59e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_clients</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a3d7e1b64ebc4776dba508902e309fb2c</anchor>
      <arglist>(const std::set&lt; client_t &gt; &amp;_clients)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a1b98df04ed7fe6acca467b1c5cc30e8a</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a5dc2dacdb07639debea79551c684b61e</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_clients</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a44801f5cbe01f993f0357117e652aecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a3d9a5c3ed7f10ef9e0c19a13de681e69</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a504c0ae3f61b5212f67f3bd9c05b2d19</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a660f09c10468520ea6983ff4aeab1174</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::serializable</name>
    <filename>classvsomeip_1_1serializable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~serializable</name>
      <anchorfile>classvsomeip_1_1serializable.html</anchorfile>
      <anchor>aa9e5e67fb3db376ae88d6d7e08706f4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip_1_1serializable.html</anchorfile>
      <anchor>aa7f7229f0572c58c7af21c10bd1d6e33</anchor>
      <arglist>(serializer *_to) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::serializable</name>
    <filename>classvsomeip__v3_1_1serializable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~serializable</name>
      <anchorfile>classvsomeip__v3_1_1serializable.html</anchorfile>
      <anchor>af3fd9f077db8c1a9f5ca91de99082c7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializable.html</anchorfile>
      <anchor>a3d4c89fe1ad561e160c3f7006f528a31</anchor>
      <arglist>(serializer *_to) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::serializer</name>
    <filename>classvsomeip__v3_1_1serializer.html</filename>
    <member kind="function">
      <type></type>
      <name>serializer</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a6fc58e0719da43edf7e5ace536640678</anchor>
      <arglist>(std::uint32_t _buffer_shrink_threshold)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~serializer</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a56b9b3f8a86055f105e2a305b0a86c5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>ad856a5c72a2e375994974a8c3a4d21ac</anchor>
      <arglist>(const serializable *_from)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>adc1c0fc9be5d51b74d068a6b91019489</anchor>
      <arglist>(const uint8_t _value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a8f3fffa8a538460047fed36b62cd8736</anchor>
      <arglist>(const uint16_t _value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a61fd514c2cdc581388b94d57674bbe45</anchor>
      <arglist>(const uint32_t _value, bool _omit_last_byte=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a9d8ddbf45988e49757166ad34e534d37</anchor>
      <arglist>(const uint8_t *_data, uint32_t _length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a55e7201e60176e8cdf73b66943c357d0</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const uint8_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>aa0266ddb3ead4ee6624bcd705ebb5c29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>get_capacity</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>af218f31116440bb670ff6e3d6421a77c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>get_size</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>aa07831b0436db26af8a9564fe7bcaeaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a65b569a8dfc839eb0a39864404212ff1</anchor>
      <arglist>(uint8_t *_data, uint32_t _capacity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a152d65fa0559c1477df3df1053b0808c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1server__endpoint__impl.html</filename>
    <templarg>typename Protocol</templarg>
    <base>vsomeip_v3::endpoint_impl</base>
    <member kind="typedef">
      <type>Protocol::socket</type>
      <name>socket_type</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a6dd61e5ad1cc0c70f9727f14194b1025</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aeadfda43979d08ace37b26e183817235</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; endpoint_type, std::pair&lt; size_t, std::deque&lt; message_buffer_ptr_t &gt; &gt; &gt;</type>
      <name>queue_type</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ac0bfd9b68d506f8db867ec99709784c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>queue_type::iterator</type>
      <name>queue_iterator_type</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ab340730e1841e1503362de68e37376a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a35edeab258446980f0f98884acec8cc3</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, endpoint_type _local, boost::asio::io_service &amp;_io, std::uint32_t _max_message_size, configuration::endpoint_queue_limit_t _queue_limit, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ae50fdd2cb56f06c38bd50c209d470b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_client</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a671c0a633560bf6efd38882868c61d2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aeaae5b447b095b5fc2a6f9e7e8bea915</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a8e89859a2cfd06bf90556fe1b75cd690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established_or_connected</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>adbba384962e96c60e2d27839cef80300</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_established</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a1ef0accde9dc6481556c3d151e8928ae</anchor>
      <arglist>(bool _established)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_connected</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a69a468b7a2be9194f1119aa1ebb09733</anchor>
      <arglist>(bool _connected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>afd829ac10c94c1b7210381bb51335cce</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a7e394cf012fb83d6cffc2f637b7bbb99</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_cmd_header, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_stop</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ae6da143424197946b0cd8ed4bd2131a8</anchor>
      <arglist>(endpoint::prepare_stop_handler_t _handler, service_t _service)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a68b8db2302a671aa2bca98940560be7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>flush</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a15f50bd101f20aade5be7ec07603500b</anchor>
      <arglist>(endpoint_type _target, const std::shared_ptr&lt; train &gt; &amp;_train)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aab691b9c196769b5ef8b9ecf962b9570</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a58aad5494ac7510f7449bfef55008d55</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a56170f0fdfb72c9f049528d8b89d4c1e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect_cbk</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>af900914eab4f09c4fb80c940e8c3acd0</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_cbk</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a8a2ebe174e4b12cde0eb045d6878b932</anchor>
      <arglist>(const queue_iterator_type _queue_iterator, boost::system::error_code const &amp;_error, std::size_t _bytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush_cbk</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a0d13426b3220eef1b7583aa78047790d</anchor>
      <arglist>(endpoint_type _target, const std::shared_ptr&lt; train &gt; &amp;_train, const boost::system::error_code &amp;_error_code)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>send_intern</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ad64a9993d986d4c6b136b32b101e9f3f</anchor>
      <arglist>(endpoint_type _target, const byte_t *_data, uint32_t _port)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a9a5b7a88a59d6907d007d14c7275ee60</anchor>
      <arglist>(const queue_iterator_type _queue_iterator)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>abe22dba037f541b22c2d59a963a7a756</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a1206cbd56d65cdf782b558e385897d1f</anchor>
      <arglist>(service_t _service, endpoint_type &amp;_target) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a2b60e8c09a6a4a9c3c4cb2db89bcdd81</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>endpoint_impl&lt; Protocol &gt;::cms_ret_e</type>
      <name>check_message_size</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>abe04f68d846a1ea8323ed94a87adcb71</anchor>
      <arglist>(const std::uint8_t *const _data, std::uint32_t _size, const endpoint_type &amp;_target)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>check_queue_limit</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a7f52b9f10bfdd1c7f465f47c58264049</anchor>
      <arglist>(const uint8_t *_data, std::uint32_t _size, std::size_t _current_queue_size) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>queue_train</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>abcf4cb917f400bb0aa107463e89a7562</anchor>
      <arglist>(const queue_iterator_type _queue_iterator, const std::shared_ptr&lt; train &gt; &amp;_train, bool _queue_size_zero_on_entry)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>queue_iterator_type</type>
      <name>find_or_create_queue_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a9db77f60b7c938fd5b698f82651927bc</anchor>
      <arglist>(const endpoint_type &amp;_target)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; train &gt;</type>
      <name>find_or_create_train_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a4031ff010ffecb651e74335d8f301c67</anchor>
      <arglist>(const endpoint_type &amp;_target)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>send_segments</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a0ab74cda2c9794c03d1a21a08ee4b6ac</anchor>
      <arglist>(const tp::tp_split_messages_t &amp;_segments, const endpoint_type &amp;_target)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>queue_type</type>
      <name>queues_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a85c3514fea7d287c2c17bff92d9d0ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>clients_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aa603816408dbae761da7dfb006db5a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; client_t, std::map&lt; session_t, endpoint_type &gt; &gt;</type>
      <name>clients_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ab036baac8fff34015bea1d1d99758c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; endpoint_type, std::shared_ptr&lt; train &gt; &gt;</type>
      <name>trains_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a7d42f0372828b5386207d0b32dccc9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, endpoint::prepare_stop_handler_t &gt;</type>
      <name>prepare_stop_handlers_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a496b9ef6277b310b774d8c2a1fdf160f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mutex_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ab11cd35f70cdddb88aa0645fd4f09eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>sent_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a2da90d83bfbd029d989f0d731f4db2dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_sending_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a6541a9349818cda5fb2ed3193d5a8191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::steady_timer</type>
      <name>sent_timer_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a2439bbbcef7a2c7b1edd20bdbfdc9e6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::service</name>
    <filename>structvsomeip__v3_1_1cfg_1_1service.html</filename>
    <member kind="typedef">
      <type>std::map&lt; method_t, std::array&lt; std::chrono::nanoseconds, 2 &gt; &gt;</type>
      <name>npdu_time_configuration_t</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>ac5706216d42c39c0c2e13ac893b2aab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a8218efcf6c9fb15a69a7c93135937198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a5c738524209ffaa493a2663c3f0091c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>unicast_address_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a27191bc14ad5d3bc343304319da501b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>reliable_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>af4f7a674076186008211e7df0e436d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>unreliable_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>adba948a0e2e7c0ddbf611a3fe2136f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>major_version_t</type>
      <name>major_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a9f1c94fd847033c2b306d30e64d20336</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>minor_version_t</type>
      <name>minor_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a05be48bcdac5bfabc6f184fe6e4e4cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ttl_t</type>
      <name>ttl_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a75430c825e59efb7475cf71de8cd2bf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>multicast_address_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>aea73a039d9749f2fe253e1cf605e411a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>multicast_port_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>ab0312abb95726c249da4ed5c8b589d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>protocol_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a87088ce4bfd1e83dea6267f210475c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>npdu_time_configuration_t</type>
      <name>debounce_times_requests_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>aae27562a53402fa3639be659782817e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>npdu_time_configuration_t</type>
      <name>debounce_times_responses_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a250ebc5608453342b9cd336330baaa84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; servicegroup &gt;</type>
      <name>group_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a684164cbec8287579b6d0bed8694c61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; event_t, std::shared_ptr&lt; event &gt; &gt;</type>
      <name>events_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a90d52df15593a9f639647dc98af903ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; eventgroup_t, std::shared_ptr&lt; eventgroup &gt; &gt;</type>
      <name>eventgroups_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a091041df1bd2b46b6bab898f1e49867e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; method_t &gt;</type>
      <name>tp_segment_messages_client_to_service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a94a7dc1cceab950c79e6067955ec8da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; method_t &gt;</type>
      <name>tp_segment_messages_service_to_client_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>aa53bb61ce3cfbe8e03a70d7a17f21994</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::service_data_t</name>
    <filename>structvsomeip__v3_1_1service__data__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1service__data__t.html</anchorfile>
      <anchor>a39adb425bdf089301a820cfa394edf74</anchor>
      <arglist>(const service_data_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1service__data__t.html</anchorfile>
      <anchor>a39adb425bdf089301a820cfa394edf74</anchor>
      <arglist>(const service_data_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1service__data__t.html</anchorfile>
      <anchor>a8d226b18f39c31e793feeafb26c0986b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1service__data__t.html</anchorfile>
      <anchor>a97421e5984be8901f88820279ec9717a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>major_version_t</type>
      <name>major_</name>
      <anchorfile>structvsomeip__v3_1_1service__data__t.html</anchorfile>
      <anchor>ad0ddd333eb450384f7c202ffd228a8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>minor_version_t</type>
      <name>minor_</name>
      <anchorfile>structvsomeip__v3_1_1service__data__t.html</anchorfile>
      <anchor>a2972b02af6ee8087697c94d82b01ca38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::service_discovery</name>
    <filename>classvsomeip__v3_1_1sd_1_1service__discovery.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~service_discovery</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>ae3e984495cd2e36f8284e922844e8dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>ae71f7039f9ce3aa22dbe7b6b325bce01</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a2fde602f9d979ead3aa3c42ef8b131ce</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a81698af3507471632a42ee1c84bc55f3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a05f0a9a526e1944503f900dffdfbfaac</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a4b5e9b0b0a6e0b91e57e9845676f492c</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a8839ba5e6db2d71b8ec389609d0178a0</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>aa4d3b3f28d60c93d5dc3feff67e4e27c</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, ttl_t _ttl, client_t _client, const std::shared_ptr&lt; eventgroupinfo &gt; &amp;_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a5758aa8f63ac1d64e3cee386dc54b252</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe_all</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a56b90bb173e88bb80fcaadd5d6b1e301</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>aece1c0c04406049afb96ec4c5ec16eb9</anchor>
      <arglist>(bool _is_announcing)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a6dd6703da47a97b50c604f661339963d</anchor>
      <arglist>(const byte_t *_data, length_t _length, const boost::asio::ip::address &amp;_sender, const boost::asio::ip::address &amp;_destination)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_endpoint_connected</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>adb3378df1326752ed9ea522937dc5ad0</anchor>
      <arglist>(service_t _service, instance_t _instance, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a5ee0b6fdf313d7b0c17ecdcd8fb57107</anchor>
      <arglist>(const std::shared_ptr&lt; serviceinfo &gt; &amp;_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a63374a1e79311dc585f57df69a0afa96</anchor>
      <arglist>(const std::shared_ptr&lt; serviceinfo &gt; &amp;_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_diagnosis_mode</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>ade6128a6746c5db69dad14ad3c695965</anchor>
      <arglist>(const bool _activate)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_diagnosis_mode</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a2869e4c7563762b29037ef3ebb2ad8c0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a27f1748f4acde4da4d352490ec90dcda</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a0ca532246760f00b407cfa72cf86b9cf</anchor>
      <arglist>(sd_acceptance_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a1f8a779dbefc1fefead112831e99cc0b</anchor>
      <arglist>(reboot_notification_handler_t _handler)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::service_discovery_host</name>
    <filename>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~service_discovery_host</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a8f9967b25996fafac963829e133b79a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a2c26df036b2af568fd07dba5090d0f2c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_service_discovery_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a2f8a892e2af67517044177ae7be9cf27</anchor>
      <arglist>(const std::string &amp;_address, uint16_t _port, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual services_t</type>
      <name>get_offered_services</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a76f3a0b60745e5913e8c2e0d0c993d2b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; eventgroupinfo &gt;</type>
      <name>find_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ac2cc0649b6953704e17a9278acdf22b6</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a218204455ce6bf1d511017a11d597017</anchor>
      <arglist>(client_t _client, std::shared_ptr&lt; message &gt; _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_via_sd</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a265f5a0cfb5ac345d2450029febb76d3</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, uint16_t _sd_port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a06ff3b49a8fd48c835c0cfcfec4b6346</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl, const boost::asio::ip::address &amp;_reliable_address, uint16_t _reliable_port, const boost::asio::ip::address &amp;_unreliable_address, uint16_t _unreliable_port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>del_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a3d8dcd32b82b51a7e6b351b0f0db372c</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _has_reliable, bool _has_unreliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a940fbca9e1b16c3ba19a701a2ee87da8</anchor>
      <arglist>(std::chrono::milliseconds _elapsed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_remote_unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ab3e1ed4d6c13d766a20906e6683bcdc8</anchor>
      <arglist>(std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a818815cd881cbc0626ce6b8379439e0b</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _subscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_ack_with_multicast</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a8eae0a56f31c76dec77c11e055219fdf</anchor>
      <arglist>(service_t _service, instance_t _instance, const boost::asio::ip::address &amp;_sender, const boost::asio::ip::address &amp;_address, uint16_t _port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_remote_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ae27de86fd8e3178bd4d3bf3c05f362b6</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a4f0216a16088c5d123b365310ae85fff</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a661be79b7f5b2cb143de4fd86991037c</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ae1cec475fb1fe61d52ccc4f367534b45</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a2df4e6134051ee615ae74e05941ac8c5</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_remote_subscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>aed10c8edc9bbf8929aa39aefc1433803</anchor>
      <arglist>(std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription, const remote_subscription_callback_t &amp;_callback)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_nack</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ab8a71fc6db86635d0b74af5874cd343e</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _subscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::chrono::steady_clock::time_point</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ab7a2b4bf59cae239e039807457d955c7</anchor>
      <arglist>(bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; serviceinfo &gt;</type>
      <name>get_offered_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>aff547655980ee6628965cccbe3fb743f</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::map&lt; instance_t, std::shared_ptr&lt; serviceinfo &gt; &gt;</type>
      <name>get_offered_service_instances</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a4accd727225d7f3dab0a87f62ce89ced</anchor>
      <arglist>(service_t _service) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; eventgroup_t &gt;</type>
      <name>get_subscribed_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a25f63a6a1e1c262389eaf8ceae614f99</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::service_discovery_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</filename>
    <base>vsomeip_v3::sd::service_discovery</base>
    <member kind="function">
      <type></type>
      <name>service_discovery_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>ab49b48cc307d7daaa14bffc90aad90f9</anchor>
      <arglist>(service_discovery_host *_host, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~service_discovery_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a0e1241c6021e6547ad57b66d595fb949</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_service &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a8adaa0175ff073aa733950e899c505f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a7e1154e621b5c4dab07d4cc1842e5bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a9178c62e746b9b7546702337060354d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>ad417a338266e50bb30f057455865a61c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>aa421901081b62f02bb2ef2e9d280ad82</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>aec7abb984d94659cf036ea4f04d363fd</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>aa4a915b16cf78d0d8daab1c5a3aa7f00</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, ttl_t _ttl, client_t _client, const std::shared_ptr&lt; eventgroupinfo &gt; &amp;_info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>adf962a469c213237f1db54f9b1f39c81</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe_all</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a4e1a99f6b483cb70545a242d8b85dd04</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a678684337e3c5a1f0508cf9906f817ad</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>abf17596719054d7992dfe2ce549dd9f6</anchor>
      <arglist>(bool _is_announcing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a927d6aeb195bdec66bcd58bd93e719fc</anchor>
      <arglist>(const byte_t *_data, length_t _length, const boost::asio::ip::address &amp;_sender, const boost::asio::ip::address &amp;_destination)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_endpoint_connected</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a1be412ab8ba3246b08d0c68765a04427</anchor>
      <arglist>(service_t _service, instance_t _instance, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a5a06d4b18fe7b7ca796d2eb015b4bed8</anchor>
      <arglist>(const std::shared_ptr&lt; serviceinfo &gt; &amp;_info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a1c9c0f9f1e3d4211d301e1b4a4a52b58</anchor>
      <arglist>(const std::shared_ptr&lt; serviceinfo &gt; &amp;_info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_diagnosis_mode</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>afeed4f95695fc1d08f46b613db288a39</anchor>
      <arglist>(const bool _activate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_diagnosis_mode</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>adc33efe2107b8aefa26cb09093826e9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a2d0988076add0b09f9f74d34786edbcb</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>aa792fee8d07b6e79516cf0818eb1f86b</anchor>
      <arglist>(sd_acceptance_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a1352b6f6a4521509ac0c5ece7d9a6e12</anchor>
      <arglist>(reboot_notification_handler_t _handler)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::service_instance_range</name>
    <filename>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</filename>
    <member kind="variable">
      <type>service_t</type>
      <name>first_service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</anchorfile>
      <anchor>a0c5d9f1f6ab2f5482144145b5b1383d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>last_service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</anchorfile>
      <anchor>a5531f4538bce8d785f3182ab2bd49407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>first_instance_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</anchorfile>
      <anchor>a82bc714521fde3b2d740b6a1e1287c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>last_instance_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</anchorfile>
      <anchor>a3c55980861622299a5b27213d26c94f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::serviceentry_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</filename>
    <base>vsomeip_v3::sd::entry_impl</base>
    <member kind="function">
      <type></type>
      <name>serviceentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a16ec0e7f08668d248a00ea393d3b8953</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~serviceentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a6289264b8088b6d39807c83b5f17f5cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>minor_version_t</type>
      <name>get_minor_version</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a3c9e3d6077f26543bf6e0d4ac447d210</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_minor_version</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a07d68b403d63e96396d63f8b86a03c20</anchor>
      <arglist>(minor_version_t _version)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a8d196bcc921a910d87e775c21b428262</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a8353bcdf69aba054b38d8fda71119d1f</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::serviceinfo</name>
    <filename>classvsomeip__v3_1_1serviceinfo.html</filename>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>serviceinfo</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a57ca76a31264d12c4eda081a06e8ea3d</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl, bool _is_local)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>serviceinfo</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>aba7e47e72d69e23f5a4224f2b54fa66e</anchor>
      <arglist>(const serviceinfo &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~serviceinfo</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a3d1bc511e81bfba3f5dcd484ba7bfcf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT servicegroup *</type>
      <name>get_group</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a858f7254387d68234a2f5f59da0905ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_group</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a5c63c2471fd6c2846aab1179d53645b0</anchor>
      <arglist>(servicegroup *_group)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a7f3b4bbaa76172e49ba6389411be02af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a0a39ffa0160f51894943e8d2eb59a048</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a0b921bc73b066307702e1b031c4dacaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT minor_version_t</type>
      <name>get_minor</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>af8a38d81b440765ec184c2c6005933da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a3ea17bfc6476922f187add595c5ab83d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>acc0b7519eb3037cec4cd7b5fd3734552</anchor>
      <arglist>(ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::chrono::milliseconds</type>
      <name>get_precise_ttl</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a04c1f52dd8f4c4b3f6581c629009d087</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_precise_ttl</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a4e994c12ffcdd95bf9222feea2f98555</anchor>
      <arglist>(std::chrono::milliseconds _precise_ttl)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; endpoint &gt;</type>
      <name>get_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>ae3cb0d6adc7bbd095904edea64628115</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a3dcb87c76950255e9b0683fcb5e1467a</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>add_client</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a7a2fb8d641e945913895152a44159f69</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>remove_client</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>aad493151143264b194a788177f36a72d</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_requesters_size</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>abdd61b1743446afd3edacc66e885fedc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a467e3a0b0ad8a8240d80899bcf40570e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_in_mainphase</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a3d973c01e1318e6cf47ae68d464daf55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_is_in_mainphase</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a0ca393e00baa0aae94c7163f566aba83</anchor>
      <arglist>(bool _in_mainphase)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::socket_acceptor_service_ext</name>
    <filename>classboost_1_1asio_1_1socket__acceptor__service__ext.html</filename>
    <templarg>typename Protocol</templarg>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>adb7924a4e558c86d7e0f38ead8c8948c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>protocol_type::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a4991b3de9b53d8680c36c5f391291f9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::implementation_type</type>
      <name>implementation_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a9a10aef47a9bff9fba21d8803bf79824</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a4c0362aadbe00e428a96aeea839599fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a6e17b53110489e266f31b100830de676</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>socket_acceptor_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a47678a72e0ee60f39104457451751a6d</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a4c54df78e38b1d610ef0d91fbf42d8c3</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>aa0ca58f285aaf0ee5c86246167edadb1</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a121cb0bea1c267731fa329d238b404e8</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>abe567cfc7628fa0cf139b66d4a68a143</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a244f0e9839a65ea45362041ee2e03bcd</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a3b1ec44f4f035622dffe668b6e09b476</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>aa656a0950040f52755e1c82ac1577d49</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a58349c7f97fa911c167b1a3886948f4e</anchor>
      <arglist>(implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a0884436cbfc6ba7e6269187788e5c6ae</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_type</type>
      <name>native</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a7117a2cf6ebbe2142fc53c9a778e7711</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>abca20d5bc2f6ce0270f53f30a554a61f</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a3a9aeb41ecd6797fa7acd7086499f83e</anchor>
      <arglist>(implementation_type &amp;impl, const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a8ba8817714b12eddd1b4b5bf6bb9df72</anchor>
      <arglist>(const implementation_type &amp;impl, GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a2e7fd2497ec13c02ddac7528cb52022d</anchor>
      <arglist>(implementation_type &amp;impl, IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a7f262535980b7b2352f962176874bfeb</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a7420f37cf00113b5386f8b8f9d5fd67d</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a23a324701d24b6cfa0740c39f18e9dc6</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>af4bd05169a27cc087c973ea75d20f557</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>af30b3118eba18953309460eced44eb83</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a426e39f27fb0f9819363f78a089c60bb</anchor>
      <arglist>(implementation_type &amp;impl, basic_socket&lt; Protocol1, SocketService &gt; &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a343ae6caf1ed89169b3dacce4ba921c1</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>basic_socket&lt; Protocol1, SocketService &gt; endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>ac7e964600eed788b3196f8f9d69445af</anchor>
      <arglist>(AcceptHandler) handler</arglist>
    </member>
    <member kind="variable">
      <type>basic_socket&lt; Protocol1, SocketService &gt; &amp;</type>
      <name>peer</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>ae173d459a7988d1722d9ac9feae44846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>basic_socket&lt; Protocol1, SocketService &gt; endpoint_type *</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>adc2f1118b1430c41e74e4f8d91ac11a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::stream_socket_service_ext</name>
    <filename>classboost_1_1asio_1_1stream__socket__service__ext.html</filename>
    <templarg>typename Protocol</templarg>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>afc8a574ad20f1afdc740c566df045e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a3216942fe3d388d8627a7d501ab95163</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::implementation_type</type>
      <name>implementation_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>adf670bfa862f470892d810bac861fd9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a1ced2048c97408e667f14434ed0924aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a74b24071b41f2b55eabbdaae3eb41f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stream_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae57d271e3cdff8d71fe5b48dec07ac53</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ada87cefcb04189f6567e7f4dca79dd2f</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a1b77e30042446d11e6ffc86c862a497d</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a7bdcb752bf7c1fc77459861b7403daa3</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a43a6e071a13df41480405c3959047fe4</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a3f07f3eff5f28cb39910d3b7d86cc912</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a63e17e347217c02ba24c4955879a96d4</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_type</type>
      <name>native</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>af84a7085f6496475127b9a2ce1dc8f70</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>aff5f656eda199177c5d67a0aaf7f60ee</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a99626f76452d737b05a9c8a1429fcf3f</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a3427bc6d7355bae57c469f7ea5f987a6</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>acba882fccb894b3a72ff732b0e702137</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ac38b28a4146b4dc9c48c91b6768d8cdf</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a93551bc3cd874bab650b49f561cce0ce</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a5f8e812de7413a662ba8d92779c83cf6</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a8d9eb341a9d0c18c69f503dd7c5ed079</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae7e41b5e5ec66ddc8012a0fdf01378c5</anchor>
      <arglist>(implementation_type &amp;impl, const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a490c5efc2bec8ea9443bc3e27e714970</anchor>
      <arglist>(const implementation_type &amp;impl, GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ab1fbe8a5410ab3234586afb016f13c62</anchor>
      <arglist>(implementation_type &amp;impl, IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ad8e3ef2c291c3cf25d3c971cfd3afeb4</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae6f7bdaca222f066e392e3458748c204</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a2fd9a4ed91757632d5a0aeac2517e14e</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>aabf61eea72c9b4bf0cd11223824be9da</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>af8d595463faf803e2b72d575e68d1a72</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a70d96ebcdfe495f70b08cd888a25fe43</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>acceeb24ecb87e1d03c12b5fb78aaebf2</anchor>
      <arglist>(implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a2133eaabfab7ce3bd662e17657f3b401</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a4b3c97bf2f80350c61b62f85c136f4c7</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const ConstBufferSequence socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>af7d4e23e8b279bc22a6834d379c46b01</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a6e4ccdf96eab0912a63c978f35c856ff</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a8b50735ed54aa292cffb2b8c79a294c7</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const MutableBufferSequence socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ab7576991221df38d2a176cd1f4fde0f6</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>const endpoint_type &amp;</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae5403f7b3ccf831a8699550b228f816f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence &amp;</type>
      <name>buffers</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a9e54ae314a81433fab817fac428fe980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a0312cbdd5a73102ba9097b786f5fef96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence &amp;</type>
      <name>buffers</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ac498c45e779f22d8f1fb4f6ba36df91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae6cf6b276c5adb97c17f3115faa27f39</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::subscription</name>
    <filename>classvsomeip__v3_1_1sd_1_1subscription.html</filename>
    <member kind="function">
      <type></type>
      <name>subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a8a900d1580de759ca091a4b4303df7c1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ad3234da24b87e162457bb013fd2f6962</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a352629f23e7980c797b4fcbc665f188e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_major</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a23ea710618796e0bd1672d10353c303c</anchor>
      <arglist>(major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ada5979f708f9f959d6c885b8e60f492d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a6211bedc2afb2ccfec2722950ab14b64</anchor>
      <arglist>(ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>get_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>af793a433ebc360089c52adf989e0af48</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a7bd64765b8d41999576b50d9a4a846d4</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selective</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a67538f25d642a74cacec0624468328c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selective</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a4946ae681e2880aed942eea348fdc4a8</anchor>
      <arglist>(const bool _is_selective)</arglist>
    </member>
    <member kind="function">
      <type>subscription_state_e</type>
      <name>get_state</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a63009b96773ab04a977561684b67bce8</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ad655be24aa19248c58a1d1874113bc34</anchor>
      <arglist>(const client_t _client, subscription_state_e _state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_tcp_connection_established</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>afd217a61e57d73affa1963c6c7ed3a1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tcp_connection_established</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ab7ce9372949c2c8196470eb4bb5500d6</anchor>
      <arglist>(bool _is_established)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_udp_connection_established</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a638c33b5383a0c6962be37ee073094b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_udp_connection_established</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>acc2b4cc46702cd702f4c9d71dd6e9c60</anchor>
      <arglist>(bool _is_established)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>acd6d97684304f3944a37c1094573b1c9</anchor>
      <arglist>(const client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>adbb62ed4230bf16c6090799c918cd061</anchor>
      <arglist>(const client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a39934a4bedff6be37b55b8ffd269dd02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a685c97e05226fb7dfc41726caabe3c36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a63cedeac838f90487202af187b37f3ff</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ab814570adac141d9aad863aa80a7a37f</anchor>
      <arglist>(const std::shared_ptr&lt; eventgroupinfo &gt; _info)</arglist>
    </member>
    <member kind="function">
      <type>std::weak_ptr&lt; eventgroupinfo &gt;</type>
      <name>get_eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a6135467079ca445eb4fef20ee53c3aa4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::routing_manager_base::subscription_data_t</name>
    <filename>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>aaa303bdf915d6782de6223faeae8d4d5</anchor>
      <arglist>(const subscription_data_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a39b2d862e635a7aeee22034291877082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a0002e58927a8c5798fe6bb309d4e646c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>eventgroup_t</type>
      <name>eventgroup_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a53e122b424bd63d14592eae0e0ae8bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>major_version_t</type>
      <name>major_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a134e158aa8978cddbbfa558e5d4136be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>event_t</type>
      <name>event_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>afd96431c1b077955aa3f9f1854bf9896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uid_t</type>
      <name>uid_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>aed2475bd3a8bc733c6d4ca876036389c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gid_t</type>
      <name>gid_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>aa02e86683af614a7522ed2e55f6b84bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::eventgroupinfo::subscription_t</name>
    <filename>structvsomeip__v3_1_1eventgroupinfo_1_1subscription__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structvsomeip__v3_1_1eventgroupinfo_1_1subscription__t.html</anchorfile>
      <anchor>a7155bae42e7fc0008a77af0459115f79</anchor>
      <arglist>(const subscription_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; remote_subscription &gt;</type>
      <name>subscription_</name>
      <anchorfile>structvsomeip__v3_1_1eventgroupinfo_1_1subscription__t.html</anchorfile>
      <anchor>aeafa8fe5637ab1cb11d40a84793ac14e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::steady_clock::time_point</type>
      <name>expiration_</name>
      <anchorfile>structvsomeip__v3_1_1eventgroupinfo_1_1subscription__t.html</anchorfile>
      <anchor>a760b445af42ce17dca268440f449ba7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tcp_client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</filename>
    <base>vsomeip_v3::client_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>tcp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>acbc27e5ab417d9c7e245be275d18c15d</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, const endpoint_type &amp;_remote, boost::asio::io_service &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~tcp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a4f1d32d3f6805b686ea574e6d4b40c21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a50565f37905b01f3b0aa5c28d9b55c3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>af9bf359d2ef03433fa6f7e2ba965c056</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a5745373bcfb466d8c76fb01fb6191bd2</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a64d126c4e28bfa7a1f33e9e3bd9cb6fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a04ccf159488bf084d03ce20deeb46685</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a1cdacb209664afccef7963e1dd8b6e17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a1da2d5a02d9a7df0f047c55612abc826</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_cbk</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a323569f0bc971eaf5c2b5fa743397acd</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_sent_msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tcp_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::server_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>tcp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a0f54b46679be53d058e787a02e508cb5</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_service &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~tcp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a586cf575258e32acc750f712cfffbaf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a2986a84c00c63e5c05a2f3f9c66e6585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a21de406cc01098a7ec74f3290defc77d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a5f8f6dc427b7c23abd53cb6ec99ce560</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a1d56cbdad1aef76b4e0401fc4c0b2049</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a229fe400892d4eca40e27bb2b05fbeed</anchor>
      <arglist>(const queue_iterator_type _queue_iterator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_queued_sync</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a716e795a61b483a4dfcd4fd40ddd90dd</anchor>
      <arglist>(const queue_iterator_type _queue_iterator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>adc7cde17a4e570eea5e62c8423ca3275</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>aa61b82daaa8d421c3357703296c223b9</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>ad95d609e02bd122008df5958c0c39bd7</anchor>
      <arglist>(service_t, endpoint_type &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a808efabf9ec63120835e16583c2dbbc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a5d9fbf32fc3dc3ae3bf6c48ca4753644</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a4c672216e00175ee423e9fd87bb5076a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>aceec490762cd24c41fb28dbded28cf44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a8c9e43ba30e4acb840eb39b436dba8fa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::timing</name>
    <filename>structvsomeip__v3_1_1timing.html</filename>
    <member kind="function">
      <type></type>
      <name>timing</name>
      <anchorfile>structvsomeip__v3_1_1timing.html</anchorfile>
      <anchor>a752a56196d97faaa83586d55e9566e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::nanoseconds</type>
      <name>debouncing_</name>
      <anchorfile>structvsomeip__v3_1_1timing.html</anchorfile>
      <anchor>aa77291cfe96f4e5d3aa1ef75b41e61f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::nanoseconds</type>
      <name>maximum_retention_</name>
      <anchorfile>structvsomeip__v3_1_1timing.html</anchorfile>
      <anchor>aadb2a6fee2be93033594ce0a6f138fc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tp::tp</name>
    <filename>classvsomeip__v3_1_1tp_1_1tp.html</filename>
    <member kind="function" static="yes">
      <type>static length_t</type>
      <name>get_offset</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>a30687ed70ffcce81fd79689822030388</anchor>
      <arglist>(tp_header_t _tp_header)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>more_segments</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>a103f8f8b0069120eead37ae64edc7079</anchor>
      <arglist>(tp_header_t _tp_header)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>tp_flag_is_set</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>aa6df2ae4fa5bc71900d6e2d02de27245</anchor>
      <arglist>(tp_message_type_t _msg_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tp_message_type_t</type>
      <name>tp_flag_set</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>aa97fc20ed06bc694a4d4f18c2f1559c0</anchor>
      <arglist>(message_type_e _msg_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static message_type_e</type>
      <name>tp_flag_unset</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>a8e848fffda379178d7b3d67a0faf399b</anchor>
      <arglist>(tp_message_type_t _msg_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tp_split_messages_t</type>
      <name>tp_split_message</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>a4e87dad1e60036537967f266f2015610</anchor>
      <arglist>(const std::uint8_t *const _data, std::uint32_t _size)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::uint16_t</type>
      <name>tp_max_segment_length_</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>ac8d9f79f326318f96c869ccda30951c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tp::tp_message</name>
    <filename>classvsomeip__v3_1_1tp_1_1tp__message.html</filename>
    <member kind="function">
      <type></type>
      <name>tp_message</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__message.html</anchorfile>
      <anchor>a305f8439564880fe6f8c8fa353246c09</anchor>
      <arglist>(const byte_t *const _data, std::uint32_t _data_length, std::uint32_t _max_message_size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_segment</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__message.html</anchorfile>
      <anchor>ab4a34f13164a6b031c5c72107ef5e1e2</anchor>
      <arglist>(const byte_t *const _data, std::uint32_t _data_length)</arglist>
    </member>
    <member kind="function">
      <type>message_buffer_t</type>
      <name>get_message</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__message.html</anchorfile>
      <anchor>a9cc5ec72331a2c2be7af1a679af6b2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::steady_clock::time_point</type>
      <name>get_creation_time</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__message.html</anchorfile>
      <anchor>a60b0bda9c0dbd4b27908d217b8c35970</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tp::tp_reassembler</name>
    <filename>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</filename>
    <member kind="function">
      <type></type>
      <name>tp_reassembler</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</anchorfile>
      <anchor>aa217d1399f024f7108560003fe205afa</anchor>
      <arglist>(std::uint32_t _max_message_size, boost::asio::io_service &amp;_io)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, message_buffer_t &gt;</type>
      <name>process_tp_message</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</anchorfile>
      <anchor>a1dc5c614925ac29ca57c9192e6c50c01</anchor>
      <arglist>(const byte_t *const _data, std::uint32_t _data_size, const boost::asio::ip::address &amp;_address, std::uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cleanup_unfinished_messages</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</anchorfile>
      <anchor>a95d9d0ee7553d978567fc16f05a62ba7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</anchorfile>
      <anchor>ac53438b5db64a487fde8e364201f9f08</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::trace</name>
    <filename>structvsomeip__v3_1_1cfg_1_1trace.html</filename>
    <member kind="function">
      <type></type>
      <name>trace</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>aa58a6023476c71c20e361f8a9e8ee51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_enabled_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>a9e65b10856e2bb023fefb32dfa772924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_sd_enabled_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>ab04a7ae04b0c4beba5a6c3105a63a9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; trace_channel &gt; &gt;</type>
      <name>channels_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>a551a8e8f21868933850d2ee4f19782d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; trace_filter &gt; &gt;</type>
      <name>filters_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>a6e97e924be9dd358c497e2a13801c8e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::trace_channel</name>
    <filename>structvsomeip__v3_1_1cfg_1_1trace__channel.html</filename>
    <member kind="variable">
      <type>trace_channel_t</type>
      <name>id_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__channel.html</anchorfile>
      <anchor>a4940124917eda610e2b9843374a99e91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__channel.html</anchorfile>
      <anchor>ae9d5700bac997573b9b3abf2ee2fed74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::trace_filter</name>
    <filename>structvsomeip__v3_1_1cfg_1_1trace__filter.html</filename>
    <member kind="function">
      <type></type>
      <name>trace_filter</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>a9bc1938b80df1aad38a9f7094ffc7aaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; trace_channel_t &gt;</type>
      <name>channels_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>a7d7456fe75955468bfc7819a0c4f97d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_positive_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>a1024be08a46377b120bdb186c18e1599</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_range_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>aa289d2918afd6a7d25ae55a80c63b2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; vsomeip_v3::trace::match_t &gt;</type>
      <name>matches_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>a8dda326129c91aa8212de4e6c4bc88a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::train</name>
    <filename>structvsomeip__v3_1_1train.html</filename>
    <member kind="function">
      <type></type>
      <name>train</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>af9d6ddfce43191a40f124f0254da28e1</anchor>
      <arglist>(boost::asio::io_service &amp;_io)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_departure_time_and_stop_departure</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>a6ee67c1b6045516a3c702cc04f6281f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>message_buffer_ptr_t</type>
      <name>buffer_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>aa32ec86c42c200fd8983e61490654269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::nanoseconds</type>
      <name>departure_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>acbeb7b7c02fcf140506231261c88becd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::nanoseconds</type>
      <name>minimal_debounce_time_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>ae5998125c9530a757c9ab7eedb8b9607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::nanoseconds</type>
      <name>minimal_max_retention_time_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>a653ae1930f66d46bb191043d9f8f8412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::steady_clock::time_point</type>
      <name>last_departure_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>a057894002398afeb38228897b110318a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; boost::asio::steady_timer &gt;</type>
      <name>departure_timer_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>a8310ef9119514e69be6d072d5ca48899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; std::pair&lt; service_t, method_t &gt; &gt;</type>
      <name>passengers_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>a57d4db0692b69605f2f6ab073c8433e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::udp_client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1udp__client__endpoint__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::client_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>udp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a8652a9cdaa2c815e7cf04ae90c4ed6eb</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, const endpoint_type &amp;_remote, boost::asio::io_service &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~udp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a9f682880353afa747eaf81aa531e103e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>ace809afd856aeaa43098b45bc704dfdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>ae07ae6f260316ac2450563e9409a4bc4</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive_cbk</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a380db8c48070dd0cd4a42e56084abc5b</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_recv_buffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a0952650cb2b151b6f4c55ec0ec416e90</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a0d1554a208487110df946560af23ba02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>abe8864c3e95f5b676e4063d8c4d75cc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a41e05e22dc34c69390d164b36b924d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a3e85026c73c0845233c1da053483a992</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::ip::udp_ext</name>
    <filename>classboost_1_1asio_1_1ip_1_1udp__ext.html</filename>
    <member kind="typedef">
      <type>basic_endpoint&lt; udp &gt;</type>
      <name>endpoint</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>ab2464141554224d5dd911e4696103029</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; udp &gt;</type>
      <name>socket</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adc04448b7e6bfabd24fc275bce198138</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_resolver&lt; udp &gt;</type>
      <name>resolver</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a72f3be7aa9c302bb1a865d9ba09687cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_endpoint&lt; udp &gt;</type>
      <name>endpoint</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>ab2464141554224d5dd911e4696103029</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; udp &gt;</type>
      <name>socket</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adc04448b7e6bfabd24fc275bce198138</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_resolver&lt; udp &gt;</type>
      <name>resolver</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a72f3be7aa9c302bb1a865d9ba09687cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_endpoint&lt; udp &gt;</type>
      <name>endpoint</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>ab2464141554224d5dd911e4696103029</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; udp &gt;</type>
      <name>socket</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adc04448b7e6bfabd24fc275bce198138</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_resolver&lt; udp &gt;</type>
      <name>resolver</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a72f3be7aa9c302bb1a865d9ba09687cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_endpoint&lt; udp &gt;</type>
      <name>endpoint</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>ab2464141554224d5dd911e4696103029</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; udp &gt;</type>
      <name>socket</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adc04448b7e6bfabd24fc275bce198138</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_resolver&lt; udp &gt;</type>
      <name>resolver</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a72f3be7aa9c302bb1a865d9ba09687cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_endpoint&lt; udp &gt;</type>
      <name>endpoint</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>ab2464141554224d5dd911e4696103029</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; udp &gt;</type>
      <name>socket</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adc04448b7e6bfabd24fc275bce198138</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_resolver&lt; udp &gt;</type>
      <name>resolver</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a72f3be7aa9c302bb1a865d9ba09687cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>type</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3ca070dc303b4598be23459921ca576f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>protocol</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a0911c9407387826470721d74480ed5b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>family</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adfc1a7cfa79ec219f8180ff15fec0e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>type</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3ca070dc303b4598be23459921ca576f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>protocol</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a0911c9407387826470721d74480ed5b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>family</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adfc1a7cfa79ec219f8180ff15fec0e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>type</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3ca070dc303b4598be23459921ca576f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>protocol</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a0911c9407387826470721d74480ed5b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>family</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adfc1a7cfa79ec219f8180ff15fec0e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>type</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3ca070dc303b4598be23459921ca576f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>protocol</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a0911c9407387826470721d74480ed5b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>family</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adfc1a7cfa79ec219f8180ff15fec0e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>type</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3ca070dc303b4598be23459921ca576f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>protocol</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a0911c9407387826470721d74480ed5b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>family</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adfc1a7cfa79ec219f8180ff15fec0e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v4</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a2977f05dfcac42836b688073ff08eec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v6</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>afe60d730a6c5e21892bd4991ae1c17cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v4</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a2977f05dfcac42836b688073ff08eec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v6</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>afe60d730a6c5e21892bd4991ae1c17cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v4</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a2977f05dfcac42836b688073ff08eec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v6</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>afe60d730a6c5e21892bd4991ae1c17cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v4</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a2977f05dfcac42836b688073ff08eec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v6</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>afe60d730a6c5e21892bd4991ae1c17cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v4</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a2977f05dfcac42836b688073ff08eec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v6</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>afe60d730a6c5e21892bd4991ae1c17cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a4537403dee46ec274e2b8c15670a0344</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3a918561cd5040580b21660717b9804a</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a4537403dee46ec274e2b8c15670a0344</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3a918561cd5040580b21660717b9804a</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a4537403dee46ec274e2b8c15670a0344</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3a918561cd5040580b21660717b9804a</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a4537403dee46ec274e2b8c15670a0344</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3a918561cd5040580b21660717b9804a</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a4537403dee46ec274e2b8c15670a0344</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3a918561cd5040580b21660717b9804a</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::udp_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1udp__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::server_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>udp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a93290dc09244fbccfa58ad9ae4bb95b2</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_service &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~udp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a658c9f106b0833f43d2c52056e16a2c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>ae9cedc496ff9df0a74571fc362d91430</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>aedf77df9ef31b9a72f3d3a6bd82d303a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a0b3a0039b1abc70e80c3c5d73e0a646f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a56a80be1b3d8ef9aea3394880b14bd4c</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>aa08b61a9cd3962098db939fc71f474a3</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a52d7bfecd7ba9dc6fe2c36df797bf463</anchor>
      <arglist>(const queue_iterator_type _queue_iterator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a397de8d0aaeafc1802fc59639c73d701</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>join</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>aa1f403d160d6bb5110b7be94319658bc</anchor>
      <arglist>(const std::string &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>join_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>afd5aabdda1e74cf83cceb7d810c6efba</anchor>
      <arglist>(const std::string &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leave</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>ab45fbc8341d9c7186ee5b46e5706b407</anchor>
      <arglist>(const std::string &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_default_target</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a3942f0e884c8ff460014b360fbb0e2d5</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_default_target</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a8e8de40ac209b1ecb9600d13de3f2bee</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>acd3bb2ba1dfc82509324a71166aa17f0</anchor>
      <arglist>(service_t _service, endpoint_type &amp;_target) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a71de81cd245a4ad5761bb2da3b0a7771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a975051a29df525fe6a9efb720e80cd1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a77434f4aae14a308cd9f95a12d6770f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a0ef475a981ad1f615edc863629b73a86</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::utility</name>
    <filename>classvsomeip__v3_1_1utility.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a5e4f21b716b04633c37c0c4fe8c96d56</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a2613884f5c84d0e261c438f01cbf1538</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>af12d49bad947ba8994aee0846e6b2290</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request_no_return</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a571b03592deb39d59a03f3188d591b00</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request_no_return</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a4745d62e01f0dc3eb8c7bc7c820c42d0</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request_no_return</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a3674b573a8064e979463aee31a78771c</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_response</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>aa8b01e6cbf770fcb929abbce7c7188b2</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_response</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>af1263167ea06cf74351f39194e2a7542</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_error</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a82c6b94a2e270edc9dbba266a4a95721</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_error</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>aa6d92f11dbaf1858daf79f905570cc82</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_event</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a3e89220b876815aa43c762b856ffa528</anchor>
      <arglist>(byte_t _data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_notification</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a3cbb8701c4f0049394f12a9f824ee3e9</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_notification</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a688ad4ab6b578644d8e4834334febf04</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>get_message_size</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a644e5f9632bbf8996971497fb6858847</anchor>
      <arglist>(const byte_t *_data, size_t _size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>get_message_size</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a5b52df00127b85190cb55a550d56f45a</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>get_payload_size</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>aee8c8c86df32a4f008bc141e1d2aa10c</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_routing_manager</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>ad93cd39e4524665ef21e9713b9fd28fa</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; &amp;_config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remove_lockfile</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a11b59db29d157fdf863f720578027bfb</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; &amp;_config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>exists</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a88b024ac5bb386edbfdd8eced59eb08f</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool VSOMEIP_IMPORT_EXPORT</type>
      <name>is_file</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a92950b21a6ee33e1d5d233d9a1e6d209</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool VSOMEIP_IMPORT_EXPORT</type>
      <name>is_folder</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a5696767d1190da0277d5d37db5025081</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>get_base_path</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>ac532c92c0a58bd5d45da2d2d9e6e8cca</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; &amp;_config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static client_t</type>
      <name>request_client_id</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a01450faddb588ee9b684d2e425f791e9</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; &amp;_config, const std::string &amp;_name, client_t _client)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>release_client_id</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a5fade25bcb3e24ab3e2579678bf6c260</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::set&lt; client_t &gt;</type>
      <name>get_used_client_ids</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a0e7dca4361b096df7e5e15c2b1057bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reset_client_ids</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a1a9015e435269bb0e8c878c86dc7fbe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_valid_message_type</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a40dc8dd32139f7000295e5b98c955216</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_valid_return_code</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a2bb3b6e3311628e75ccf85535e8abaf5</anchor>
      <arglist>(return_code_e _code)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::virtual_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::endpoint</base>
    <member kind="function">
      <type></type>
      <name>virtual_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a9adf2a5c1a65b223e61791ccbcd84c08</anchor>
      <arglist>(const std::string &amp;_address, uint16_t _port, bool _reliable, boost::asio::io_service &amp;_service)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~virtual_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>aa95daa93013d8bc8292829d1d3c1af04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>acc876dd4cd42176c160b41f7599d68f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_stop</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ac91603628daec342b34e4ee58f188d21</anchor>
      <arglist>(endpoint::prepare_stop_handler_t _handler, service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>af577597caa8d784eb759f21feb97060c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>aaefa50ebdbf25fddf7e9e286dd304b6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established_or_connected</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a093f37d4c369f27b36cb1f19813b7de5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_established</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a7eab4e47fa04b893d207895472130554</anchor>
      <arglist>(bool _established)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_connected</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a76ef085c44be9497d556754facd9e227</anchor>
      <arglist>(bool _connected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>aa2dcc2944949687200e0e68a8d962ef5</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ac60cdba5f1164dba90a36aafdfde99d4</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_cmd_header, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>afe0d86c24fc73dc5c748ffc2fa4a6825</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ad56ffae54c96314667b416808022c2d3</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a3bc9aecda254c95ed51c8d64db7121e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a42a5219468763febf56f52166af530ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_default_target</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a5797ee52540ade708800b512d7282925</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_default_target</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>adec7488e31e41bd33d56c08bd709c7a5</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a18611c4876efe2552dc36b96920aacb3</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ac2c67ab49244ffd3355b0d02a31db636</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ac2f59b21e467ad5c445cddee68a2e826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>aeffceabfbb320d9e925ac8f1817d4ffd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a0c297b972fef3d99dd8ffd58e980f62d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment_use_count</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a92e43ffadeabf712d41724d36652e7ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decrement_use_count</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ae5cfe6aa34db046ab1a3bb39eaf46f7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_use_count</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a7799ec14551ccb6d793f127844e7016b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a663421bc8045d83b760311f212968884</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a4bbda33db13f5af165b6b30b60e62d49</anchor>
      <arglist>(error_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a181e8936ff4711f1ef82a73f213c60eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a9a00c1687ea646073b5d920754b87994</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::watchdog</name>
    <filename>structvsomeip__v3_1_1cfg_1_1watchdog.html</filename>
    <member kind="function">
      <type></type>
      <name>watchdog</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1watchdog.html</anchorfile>
      <anchor>af60b7264f70af4d739f0208f9924a3ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_enabeled_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1watchdog.html</anchorfile>
      <anchor>ac20a8b50f6d7d2af15464f7d72026ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout_in_ms_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1watchdog.html</anchorfile>
      <anchor>a37507f88ae6046526ca76aa8bdff2cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>missing_pongs_allowed_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1watchdog.html</anchorfile>
      <anchor>af9285cc7ca1ffbe10df53028aca5aee3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>boost</name>
    <filename>namespaceboost.html</filename>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="namespace">
    <name>boost::asio</name>
    <filename>namespaceboost_1_1asio.html</filename>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::ip</namespace>
    <class kind="class">boost::asio::basic_datagram_socket_ext</class>
    <class kind="class">boost::asio::basic_socket_acceptor_ext</class>
    <class kind="class">boost::asio::basic_socket_ext</class>
    <class kind="class">boost::asio::basic_socket_ext_local</class>
    <class kind="class">boost::asio::basic_stream_socket_ext</class>
    <class kind="class">boost::asio::datagram_socket_service_ext</class>
    <class kind="class">boost::asio::socket_acceptor_service_ext</class>
    <class kind="class">boost::asio::stream_socket_service_ext</class>
  </compound>
  <compound kind="namespace">
    <name>boost::asio::detail</name>
    <filename>namespaceboost_1_1asio_1_1detail.html</filename>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext_local</class>
    <class kind="class">boost::asio::detail::reactor_op_ext</class>
    <class kind="class">boost::asio::detail::reactor_op_ext_local</class>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ae30b25af7afd4e0993db3b6cae8e05c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>rvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a3f5dfcf99cfe1796a1bdec45ba42fa07</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>boost::asio::detail::socket_ops</name>
    <filename>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</filename>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL size_t</type>
      <name>sync_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a8afdfaf811f58ea6572a0db43f88a8d8</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, bool all_empty, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>boost::asio::ip</name>
    <filename>namespaceboost_1_1asio_1_1ip.html</filename>
    <class kind="class">boost::asio::ip::udp_ext</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip</name>
    <filename>namespacevsomeip.html</filename>
    <namespace>vsomeip::trace</namespace>
    <class kind="class">vsomeip::application</class>
    <class kind="class">vsomeip::application_impl</class>
    <class kind="class">vsomeip::application_plugin</class>
    <class kind="class">vsomeip::deserializable</class>
    <class kind="struct">vsomeip::ip_address_t</class>
    <class kind="class">vsomeip::message</class>
    <class kind="class">vsomeip::message_base</class>
    <class kind="class">vsomeip::message_base_impl</class>
    <class kind="class">vsomeip::message_impl</class>
    <class kind="class">vsomeip::payload</class>
    <class kind="class">vsomeip::payload_impl</class>
    <class kind="class">vsomeip::plugin</class>
    <class kind="class">vsomeip::plugin_impl</class>
    <class kind="class">vsomeip::pre_configuration_plugin</class>
    <class kind="class">vsomeip::runtime</class>
    <class kind="class">vsomeip::runtime_impl</class>
    <class kind="class">vsomeip::serializable</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip::trace</name>
    <filename>namespacevsomeip_1_1trace.html</filename>
    <class kind="class">vsomeip::trace::channel</class>
    <class kind="class">vsomeip::trace::connector</class>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>filter_id_t</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>a038e1f315125aadab49a6bffd54e5ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; service_t, instance_t, method_t &gt;</type>
      <name>match_t</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>ac48c2a837611c64ff228062b2866ec27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>af6ffad10d3cb32db0690edbb378674b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_ID</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>a624ef4d24ada8d671a01c8fc1eb63b0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3</name>
    <filename>namespacevsomeip__v3.html</filename>
    <namespace>vsomeip_v3::cfg</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2exf</namespace>
    <namespace>vsomeip_v3::logger</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <namespace>vsomeip_v3::tp</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <class kind="class">vsomeip_v3::application</class>
    <class kind="class">vsomeip_v3::application_impl</class>
    <class kind="class">vsomeip_v3::application_plugin</class>
    <class kind="class">vsomeip_v3::buffer_view</class>
    <class kind="class">vsomeip_v3::client_endpoint</class>
    <class kind="class">vsomeip_v3::client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::configuration</class>
    <class kind="struct">vsomeip_v3::configuration_element</class>
    <class kind="class">vsomeip_v3::configuration_plugin</class>
    <class kind="class">vsomeip_v3::configuration_plugin_impl</class>
    <class kind="class">vsomeip_v3::credentials</class>
    <class kind="class">vsomeip_v3::deserializable</class>
    <class kind="class">vsomeip_v3::deserializer</class>
    <class kind="class">vsomeip_v3::e2e_crc</class>
    <class kind="class">vsomeip_v3::endpoint</class>
    <class kind="class">vsomeip_v3::endpoint_definition</class>
    <class kind="class">vsomeip_v3::endpoint_host</class>
    <class kind="class">vsomeip_v3::endpoint_impl</class>
    <class kind="class">vsomeip_v3::endpoint_manager_base</class>
    <class kind="class">vsomeip_v3::endpoint_manager_impl</class>
    <class kind="class">vsomeip_v3::event</class>
    <class kind="class">vsomeip_v3::eventgroupinfo</class>
    <class kind="struct">vsomeip_v3::ip_address_t</class>
    <class kind="class">vsomeip_v3::local_client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::local_server_endpoint_impl</class>
    <class kind="class">vsomeip_v3::message</class>
    <class kind="class">vsomeip_v3::message_base</class>
    <class kind="class">vsomeip_v3::message_base_impl</class>
    <class kind="class">vsomeip_v3::message_header_impl</class>
    <class kind="class">vsomeip_v3::message_impl</class>
    <class kind="struct">vsomeip_v3::msg_statistic_t</class>
    <class kind="class">vsomeip_v3::netlink_connector</class>
    <class kind="class">vsomeip_v3::nl_endpoint</class>
    <class kind="class">vsomeip_v3::nl_protocol</class>
    <class kind="class">vsomeip_v3::payload</class>
    <class kind="class">vsomeip_v3::payload_impl</class>
    <class kind="class">vsomeip_v3::plugin</class>
    <class kind="class">vsomeip_v3::plugin_impl</class>
    <class kind="class">vsomeip_v3::plugin_manager</class>
    <class kind="class">vsomeip_v3::plugin_manager_impl</class>
    <class kind="struct">vsomeip_v3::policy</class>
    <class kind="class">vsomeip_v3::policy_manager</class>
    <class kind="class">vsomeip_v3::policy_manager_impl</class>
    <class kind="class">vsomeip_v3::pre_configuration_plugin</class>
    <class kind="struct">vsomeip_v3::remote_info_t</class>
    <class kind="class">vsomeip_v3::remote_subscription</class>
    <class kind="class">vsomeip_v3::routing_host</class>
    <class kind="class">vsomeip_v3::routing_manager</class>
    <class kind="class">vsomeip_v3::routing_manager_adapter</class>
    <class kind="class">vsomeip_v3::routing_manager_base</class>
    <class kind="class">vsomeip_v3::routing_manager_host</class>
    <class kind="class">vsomeip_v3::routing_manager_impl</class>
    <class kind="class">vsomeip_v3::routing_manager_proxy</class>
    <class kind="class">vsomeip_v3::routing_manager_stub</class>
    <class kind="class">vsomeip_v3::routing_manager_stub_host</class>
    <class kind="class">vsomeip_v3::runtime</class>
    <class kind="class">vsomeip_v3::runtime_impl</class>
    <class kind="class">vsomeip_v3::security</class>
    <class kind="class">vsomeip_v3::security_impl</class>
    <class kind="class">vsomeip_v3::serializable</class>
    <class kind="class">vsomeip_v3::serializer</class>
    <class kind="class">vsomeip_v3::server_endpoint_impl</class>
    <class kind="struct">vsomeip_v3::service_data_t</class>
    <class kind="class">vsomeip_v3::serviceinfo</class>
    <class kind="class">vsomeip_v3::tcp_client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::tcp_server_endpoint_impl</class>
    <class kind="struct">vsomeip_v3::timing</class>
    <class kind="struct">vsomeip_v3::train</class>
    <class kind="class">vsomeip_v3::udp_client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::udp_server_endpoint_impl</class>
    <class kind="class">vsomeip_v3::utility</class>
    <class kind="class">vsomeip_v3::virtual_server_endpoint_impl</class>
    <member kind="typedef">
      <type>std::pair&lt; std::uint32_t, std::uint32_t &gt;</type>
      <name>credentials_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a89bb1aafc215b769ba02e9b0ff2ed715</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>e2e_buffer</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa86ee4712520ff7bebfabb8769c2ee9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; byte_t &gt;</type>
      <name>message_buffer_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a01f33f6dfb9f653b04c4ca53de0761ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; message_buffer_t &gt;</type>
      <name>message_buffer_ptr_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adefbfff9889d6da476433d6a97a721eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::local::stream_protocol &gt;</type>
      <name>local_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2481a1bb872dc644fbe8b5478df06fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::local::stream_protocol_ext &gt;</type>
      <name>local_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a96aa624e34ff49ecbbb6100530cbf472</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(bool, std::string, bool) &gt;</type>
      <name>net_if_changed_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae3af9433add9895084593fe649e7c67f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>tcp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab8709a93ec9ea91b0ce3a00cbef0a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>tcp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5a870a512e63c528c3063ec5233b76dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::udp &gt;</type>
      <name>udp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab7d6a552c539466f4522b91865d9bf08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::udp_ext &gt;</type>
      <name>udp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2e435c1b1d43d3b476171e426d96f31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)&gt;</type>
      <name>remote_subscription_callback_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aeae38dc6731cdbc54ee5da00e0684908</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; serviceinfo &gt; &gt; &gt;</type>
      <name>services_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>add7f39a626cd3b3fccf8f246529b6869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; eventgroup_t, std::shared_ptr&lt; eventgroupinfo &gt; &gt; &gt; &gt;</type>
      <name>eventgroups_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1df98b4f5a1c523993232e38326a6289</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>remote_subscription_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ade71c41d9e426efbac70fb3c21526197</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>pending_remote_offer_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab27bd7168daa9731d59e54c8a916238d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::mutex</type>
      <name>CriticalSection</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad47ec96defa1d7249fd613470a2eb4b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const std::shared_ptr&lt; payload &gt; &amp;, const std::shared_ptr&lt; payload &gt; &amp;) &gt;</type>
      <name>epsilon_change_func_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2164b482d86f9722cb8cc228782e09a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(state_type_e) &gt;</type>
      <name>state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aaaa3f291807d88e94809eef7359c2ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; message &gt; &amp;) &gt;</type>
      <name>message_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8cce472e7560a3a6cdb00bcae22b01f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(service_t, instance_t, bool) &gt;</type>
      <name>availability_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a227b0afaf3bd28575d79864c78063392</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(client_t, bool) &gt;</type>
      <name>subscription_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aaebab325d7be5459c176561a1ba4f992</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const uint16_t) &gt;</type>
      <name>error_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae5269a22da27c8eb353162cf4b0e2326</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const service_t, const instance_t, const eventgroup_t, const event_t, const uint16_t) &gt;</type>
      <name>subscription_status_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a71ee64a10ba064c1b50b7b20fe0cbed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(client_t, bool, std::function&lt; void(const bool) &gt;)&gt;</type>
      <name>async_subscription_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>af85320a74494000612f648f506253e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::vector&lt; std::pair&lt; service_t, instance_t &gt; &gt; &amp;_services) &gt;</type>
      <name>offered_services_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a70467904551dec0e3330ffc8cb17e694</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void() &gt;</type>
      <name>watchdog_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae36ba755d2b18a3a8128c7c1ce3f7344</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const ip_address_t &amp;)&gt;</type>
      <name>offer_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a015433a2f8cf63087bacc83e53334d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const ip_address_t &amp;)&gt;</type>
      <name>reboot_notification_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a70cbd3764a3179a79bb8388442a9d522</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void()&gt;</type>
      <name>routing_ready_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0277434fda0f0114d91d02a987ec7076</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(routing_state_e)&gt;</type>
      <name>routing_state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aba8cd17d6364361b4c04a38e5aff0428</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(security_update_state_e)&gt;</type>
      <name>security_update_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a74c8367b8a280bfebf473bbc3cbe5627</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; plugin &gt;(*</type>
      <name>create_plugin_func</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a453845ec84f23c9c4e4495dc2fab00a3</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>create_plugin_func(*</type>
      <name>plugin_init_func</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae39557b5d78d0c6fb0d46a522db80092</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>message_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aed4ab5253b17bc217e1d970d32e5b9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>service_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab439d8b69368f376c1671ddc31e515d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>method_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85a1d735ad9ad8dc0e10c57e66a3de2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>event_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad9c76ce8278d899bf04d836bfc3a7b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>instance_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a38ba3163c3baa90f9adbdaa5a1550a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>eventgroup_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adb3707afb830a56fc151afae8d3a4a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>major_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a60dd902439aa9e3353079bb19e173eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>minor_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a42ecfae92498c1706f42b98ccaa85a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>ttl_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2997ff0ab3ed962de2b3bac11eb0acb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>request_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a72d761400f7e540f2890eccf8a4b4869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>client_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa18c5d8fd10b3df25994711409acf8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>session_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>acabf6d89a5f8232b82031d7e03ca86d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>length_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac71906150d5a544c870a734956c1f867</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>protocol_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa1cb109c2e75eceab17deb467e0049aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>interface_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2134c346999fb510057bc8d16c8cbc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>byte_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85c0aa53badeca5d318f8e1351552072</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; byte_t, 4 &gt;</type>
      <name>ipv4_address_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1a9c53f8ef0a2477376d9bfa732dcff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; byte_t, 16 &gt;</type>
      <name>ipv6_address_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a14706387c9b65556d738a0f084b8aa58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>trace_channel_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad672b2d5348970784c9476e58417e348</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>trace_filter_type_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a673602d80ad64071cf219a3ededa2ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>pending_subscription_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa03b7aa63bdf2c81833a4a8ee17c8acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>pending_security_update_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a553b7cd6e0ddbb531d670ef9011e2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::uid_t</type>
      <name>uid_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a89e8b6dc52a19420d56b66ba69ae31d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::uid_t</type>
      <name>gid_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2f69df0d98384cc0c98e964ef1db6420</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const remote_info_t &amp;)&gt;</type>
      <name>sd_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0c6ab7603f9a47ff36234c1cf22c78aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>diagnosis_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5009758353b9c739033d01366ee1c9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_info_entry_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a5aea15babe667876089dabc8145f4edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a9b40196ac95c5d105276c9b4f88ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad9909c88f5eb36ac32bd1942f59b61ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad63a51b60ad623de673de76dc5614d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a5aea15babe667876089dabc8145f4edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a9b40196ac95c5d105276c9b4f88ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad9909c88f5eb36ac32bd1942f59b61ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad63a51b60ad623de673de76dc5614d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>port_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4d1d428cc930cdc04bca08cdaa1e4839</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_info_entry_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a5aea15babe667876089dabc8145f4edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a9b40196ac95c5d105276c9b4f88ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad9909c88f5eb36ac32bd1942f59b61ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad63a51b60ad623de673de76dc5614d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a5aea15babe667876089dabc8145f4edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a9b40196ac95c5d105276c9b4f88ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad9909c88f5eb36ac32bd1942f59b61ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad63a51b60ad623de673de76dc5614d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>port_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4d1d428cc930cdc04bca08cdaa1e4839</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>registration_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a682d6c3fff9c7a46de81c5d234cf5179</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179ad17455cfcb88a53f1603fb817e09c2d6">REGISTER</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179ae0d28f8aa6e4d8744f37b7c358649374">DEREGISTER</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179a71f612d19c691b481cd9c9b1ca67cba7">DEREGISTER_ON_ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>remote_subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a39ec9877abaeb38f64db02fb301e189a</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa66e4694eb60b73ae43dda48a14466e0c">SUBSCRIPTION_PENDING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa70b53341292194e1dc93d6ccfacfe765">SUBSCRIPTION_ACKED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aab2fd439b480e15252e6d51af337f9892">SUBSCRIPTION_NACKED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa934bfa695a08c4a28d19053dcc33902b">SUBSCRIPTION_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aad6dfa4f648f641337fcb2f9291c94c22">SUBSCRIPTION_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>state_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f8fdb462c53cc801ccac8ae7e7b7593</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a1975c1cd8d977e43ed9b80485ff57b9d">ST_REGISTERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a675f8e567ba66fa4a34dc5376b795160">ST_DEREGISTERED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>message_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a37066c88ad32c12b4e6d76c2876931f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9817569e059920f81acd724e0d27427e">MT_REQUEST</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aab4c0d0ec6de9cf94cc974ae8fc9e35a">MT_REQUEST_NO_RETURN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a466e1d89dfcaa5dd44fde3e415f2416d">MT_NOTIFICATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0addf6a7432258a718e2932fa965d97bbc">MT_REQUEST_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a1bf98da6ea8f237e6e51c7e92b246de7">MT_REQUEST_NO_RETURN_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ace5537f09d888102be41b223185ee2f5">MT_NOTIFICATION_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a82ea3980d0263c76e804be8e7bfaf4dc">MT_RESPONSE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aaec6a09cc5b81b91e3be5b9a5ccdc057">MT_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a0f38170a7d6c21f75d364050974268fb">MT_RESPONSE_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ab5fef10d37791909a02e03f233ef9af8">MT_ERROR_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9be143b64fe2fe12b2774d9f34b134b4">MT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>return_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adc9f5628547e5cfcb1cf28ea8c1a9d56</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aa02beabe6f35d74f47eb01520970b350">E_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aad29ea65c1fc33034264f0aae0263f8e">E_NOT_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a026654634a6cf33953ba2f9762d71d5e">E_UNKNOWN_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a54aafae2807f78ee9ff838e8d5af9e6f">E_UNKNOWN_METHOD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56ac496eb6230d3e219a91a9f6dcdf760e0">E_NOT_READY</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a306d4834481f8d0cd8f734bcaf37f80f">E_NOT_REACHABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a5d0b3a75947415de8cc770284a5b94b1">E_TIMEOUT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a48845fadec08cc492508d956b2462c2c">E_WRONG_PROTOCOL_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9b2df6640388ecaae9bc7a002a04b7a1">E_WRONG_INTERFACE_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a1ace601dd1b4b72c5c345d074e8e7303">E_MALFORMED_MESSAGE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9708220dea1582abffb909d98eaa432b">E_WRONG_MESSAGE_TYPE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a6a96cb414ac815468fbfaebd4f4e696e">E_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a86896851ba1e40f6f0734612d990e9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c450e26151d2ee7c85d9ab9a17234b8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ab08f40bf9292c76dd7ab541a0635c1dc">RS_RUNNING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a93b601bbf5c3713331e0dd0296d12715">RS_SUSPENDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8aa085350435b219591b40870198b11c45">RS_RESUMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a97d8d49b4053be702db57810be8aecc4">RS_SHUTDOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ae7f767ece082f4b742ba9f4ec5883692">RS_DIAGNOSIS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a006e557bf836a15785d2d5470b430978">RS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>offer_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a750cce5fdf91a2145560b4391141114c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca22cd38f75748c081219392589ee9f3d2">OT_LOCAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca54feb1c936683243491c3cd815c01b35">OT_REMOTE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114cab89549e23113d3e4072cebaf6abe2484">OT_ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_update_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad6d71f484ce98ac3a3a1f608b5077c5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba15d5ecaf87a1e61054aa9b30c2384195">SU_SUCCESS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba27edac640a41de171f851759ee6e3dbf">SU_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba5091c773435a96ef3eb98ef0cbdf6b0f">SU_UNKNOWN_USER_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba9e3357d764d9082a283270ab50f78291">SU_INVALID_FORMAT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>error_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5b9612ad3bac160f0cdd9cb06b74a4f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a29835fa6602c75b2998993c8785263d4">CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a1f67316ed5b6a9b991cd4c6868745609">PORT_CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1abd0d3fd98ec3b5b4e67789308ee94d65">CLIENT_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a7b9f807aa58e17dd8d55e86fbf270ce8">SERVER_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a461534fb2cc82e79c206b48674bd6017">SERVICE_PROPERTY_MISMATCH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>plugin_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a790c1b95fe9fcda1dc37ad588dedd691</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a624f0ad679551d9d1fbed30ded915e12">APPLICATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8375dcf403160aa383844b954bac3e89">PRE_CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a4c2ea315c4a55edb102dbdaa294148f2">CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8d0f84555f5bee6a3cd109b806e52902">SD_RUNTIME_PLUGIN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>application_plugin_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afb31d94898ceb50558494a96efab3425</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a79d4c02fa345106ed33d9af9a3a5f1d1">STATE_INITIALIZED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a000fd23c9532e70b8bf9450833f8472d">STATE_STARTED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425ae72a91340271ff70343ead0b40cfc0a3">STATE_STOPPED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>state_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f8fdb462c53cc801ccac8ae7e7b7593</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a1975c1cd8d977e43ed9b80485ff57b9d">ST_REGISTERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a675f8e567ba66fa4a34dc5376b795160">ST_DEREGISTERED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>message_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a37066c88ad32c12b4e6d76c2876931f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9817569e059920f81acd724e0d27427e">MT_REQUEST</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aab4c0d0ec6de9cf94cc974ae8fc9e35a">MT_REQUEST_NO_RETURN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a466e1d89dfcaa5dd44fde3e415f2416d">MT_NOTIFICATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0addf6a7432258a718e2932fa965d97bbc">MT_REQUEST_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a1bf98da6ea8f237e6e51c7e92b246de7">MT_REQUEST_NO_RETURN_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ace5537f09d888102be41b223185ee2f5">MT_NOTIFICATION_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a82ea3980d0263c76e804be8e7bfaf4dc">MT_RESPONSE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aaec6a09cc5b81b91e3be5b9a5ccdc057">MT_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a0f38170a7d6c21f75d364050974268fb">MT_RESPONSE_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ab5fef10d37791909a02e03f233ef9af8">MT_ERROR_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9be143b64fe2fe12b2774d9f34b134b4">MT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>return_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adc9f5628547e5cfcb1cf28ea8c1a9d56</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aa02beabe6f35d74f47eb01520970b350">E_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aad29ea65c1fc33034264f0aae0263f8e">E_NOT_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a026654634a6cf33953ba2f9762d71d5e">E_UNKNOWN_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a54aafae2807f78ee9ff838e8d5af9e6f">E_UNKNOWN_METHOD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56ac496eb6230d3e219a91a9f6dcdf760e0">E_NOT_READY</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a306d4834481f8d0cd8f734bcaf37f80f">E_NOT_REACHABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a5d0b3a75947415de8cc770284a5b94b1">E_TIMEOUT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a48845fadec08cc492508d956b2462c2c">E_WRONG_PROTOCOL_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9b2df6640388ecaae9bc7a002a04b7a1">E_WRONG_INTERFACE_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a1ace601dd1b4b72c5c345d074e8e7303">E_MALFORMED_MESSAGE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9708220dea1582abffb909d98eaa432b">E_WRONG_MESSAGE_TYPE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a6a96cb414ac815468fbfaebd4f4e696e">E_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c450e26151d2ee7c85d9ab9a17234b8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ab08f40bf9292c76dd7ab541a0635c1dc">RS_RUNNING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a93b601bbf5c3713331e0dd0296d12715">RS_SUSPENDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8aa085350435b219591b40870198b11c45">RS_RESUMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a97d8d49b4053be702db57810be8aecc4">RS_SHUTDOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ae7f767ece082f4b742ba9f4ec5883692">RS_DIAGNOSIS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a006e557bf836a15785d2d5470b430978">RS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>offer_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a750cce5fdf91a2145560b4391141114c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca22cd38f75748c081219392589ee9f3d2">OT_LOCAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca54feb1c936683243491c3cd815c01b35">OT_REMOTE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114cab89549e23113d3e4072cebaf6abe2484">OT_ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>event_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afffd745bcf53bf88a06b4a42da68e9e6</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a491ebf10d74cafbc4f92c6060e0659d8">ET_EVENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a4101e5665ca41d40d1c72e1b59a7ccd5">ET_SELECTIVE_EVENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6ad0c76974d395561dcd5addd17025caca">ET_FIELD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a622bf80e22546ba409b0ee1f1f765b06">ET_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_mode_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6f6cf174f2fb1215e15535d34a582b4f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fae6ea3fc38b5dd378da5fd9982d07a906">SM_OFF</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fa1e206a41b2e7227f48cf6d239412ab0c">SM_ON</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fa2f6bfcbc8033cafb45764771ea737c12">SM_AUDIT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_update_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad6d71f484ce98ac3a3a1f608b5077c5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba15d5ecaf87a1e61054aa9b30c2384195">SU_SUCCESS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba27edac640a41de171f851759ee6e3dbf">SU_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba5091c773435a96ef3eb98ef0cbdf6b0f">SU_UNKNOWN_USER_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba9e3357d764d9082a283270ab50f78291">SU_INVALID_FORMAT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>reliability_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a3d53b0e729d0788e14cdbcc3c9941d5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5ba26b55ae0f42b75bb199d8ae7bf071fe9">RT_RELIABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5baf6782e4fee43f2927a875e2e76912518">RT_UNRELIABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5ba8cdb04af539d2e16a915e7b27236ba59">RT_BOTH</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5bab3fa977816ea6fabb8b123bc67ee0bea">RT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>error_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5b9612ad3bac160f0cdd9cb06b74a4f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a29835fa6602c75b2998993c8785263d4">CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a1f67316ed5b6a9b991cd4c6868745609">PORT_CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1abd0d3fd98ec3b5b4e67789308ee94d65">CLIENT_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a7b9f807aa58e17dd8d55e86fbf270ce8">SERVER_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a461534fb2cc82e79c206b48674bd6017">SERVICE_PROPERTY_MISMATCH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>plugin_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a790c1b95fe9fcda1dc37ad588dedd691</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a624f0ad679551d9d1fbed30ded915e12">APPLICATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8375dcf403160aa383844b954bac3e89">PRE_CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a4c2ea315c4a55edb102dbdaa294148f2">CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8d0f84555f5bee6a3cd109b806e52902">SD_RUNTIME_PLUGIN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>application_plugin_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afb31d94898ceb50558494a96efab3425</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a79d4c02fa345106ed33d9af9a3a5f1d1">STATE_INITIALIZED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a000fd23c9532e70b8bf9450833f8472d">STATE_STARTED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425ae72a91340271ff70343ead0b40cfc0a3">STATE_STOPPED</enumvalue>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6fb00227954a741ce279e5897cb43b8d</anchor>
      <arglist>(std::ostream &amp;_os, const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>add61fbb87ebbb6ec79d31bdfa4b51c85</anchor>
      <arglist>(std::ostream &amp;_os, const e2exf::data_identifier_t &amp;_data_identifier)</arglist>
    </member>
    <member kind="function">
      <type>const remote_subscription_id_t</type>
      <name>PENDING_SUBSCRIPTION_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a237277afbce9b6ac0469a20b314f6c92</anchor>
      <arglist>(0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_bounds</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85130498b085e6e14a750c392732154a</anchor>
      <arglist>(const boost::icl::discrete_interval&lt; T_ &gt; &amp;_interval, T_ &amp;_lower, T_ &amp;_upper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_data</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac59b4dc82db4f7c7721e988f91e63d24</anchor>
      <arglist>(const std::string &amp;_in, T_ &amp;_out)</arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>MESSAGE_SIZE_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>abc9231a81ccf4ab9e3babcf1f2230345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>QUEUE_SIZE_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a629f2774576f3b00cf8616e8291ded5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>MAX_RECONNECTS_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>abf7c760b3533ab1fc7965af2b14721da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>ANY_UID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a729a2045f1925bc2bb1b178cec2f738a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>ANY_GID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6ceb4f0cdb93357b6bbd96ddf1751f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const major_version_t</type>
      <name>DEFAULT_MAJOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2f2b7b5616e47a6991e02235acd3e3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const minor_version_t</type>
      <name>DEFAULT_MINOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a914f2b51da8df58d43b8aa5e162fe31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ttl_t</type>
      <name>DEFAULT_TTL</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a44b7287ec4b2276c13cc32b429ffd4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>DEFAULT_MULTICAST</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1dfd55967348536b962d3259a31f94cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>DEFAULT_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5c6c490cc1583fe38af30b0cf4c1a967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>ILLEGAL_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae1e873b4fbfd2b49b73bddf0b936b3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>NO_TRACE_FILTER_EXPRESSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a39f544082ffed0ea0506ca12b0fcc035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const service_t</type>
      <name>ANY_SERVICE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adce6ed20385f8cd186b9f82086351651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const instance_t</type>
      <name>ANY_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a97cec69887056455ee978cc3a50dec15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>ANY_METHOD</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa81c85715d8713f0b977d2c4e6c670cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const major_version_t</type>
      <name>ANY_MAJOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a80aa773571156d6c8d6315fdb1131ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const minor_version_t</type>
      <name>ANY_MINOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9be62aeb5875b257d33a34ab638a1938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const eventgroup_t</type>
      <name>DEFAULT_EVENTGROUP</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae3a9af84a72838c170f304b45604f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>ILLEGAL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a347481da1fbdeae875c987e8d18ed8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>MAGIC_COOKIE_CLIENT_MESSAGE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aab691e5d96de4055ec9fb78e614525a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>MAGIC_COOKIE_SERVICE_MESSAGE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab5f16721542eaf1020af95fd7abaa1f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const length_t</type>
      <name>MAGIC_COOKIE_SIZE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aea8ae408d12586b521d770b0814a17fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const request_t</type>
      <name>MAGIC_COOKIE_REQUEST</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9b91bbdc92d781ab839c8e3fb2977fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>MAGIC_COOKIE_NETWORK_BYTE_ORDER</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0874e45e3f37be1f69d40a861db73fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const protocol_version_t</type>
      <name>MAGIC_COOKIE_PROTOCOL_VERSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aabbfece5b1aad839016ea2339ac307a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const interface_version_t</type>
      <name>MAGIC_COOKIE_INTERFACE_VERSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4bf667b9e83075cf22762423e393dc41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>MAGIC_COOKIE_CLIENT_MESSAGE_TYPE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adf2818d9ee2613b716210f68cada1b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>MAGIC_COOKIE_SERVICE_MESSAGE_TYPE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c4ece5170ac1f26dc2c6eabc8feb28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const return_code_e</type>
      <name>MAGIC_COOKIE_RETURN_CODE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab0c5872098eb80f1918a1cc298db7778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>CLIENT_COOKIE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2443bc33f4987cc981c33c119adf2124</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>SERVICE_COOKIE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a23f1ccc0cd6072b6b69077dec6575e99</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const event_t</type>
      <name>ANY_EVENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8bee2b7ec8cfc271c4eb472a01b93286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>ANY_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1d4d4a1e58e40cafd2be7730c1733411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const pending_subscription_id_t</type>
      <name>DEFAULT_SUBSCRIPTION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac8aa72362edafefabb0db273a8449521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const pending_security_update_id_t</type>
      <name>DEFAULT_SECURITY_UPDATE_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1a787fe58d9718fedd3dd8c53d390192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ERROR_INFO</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aceaf0adeb488b085418b2562b6ce9cba</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>ANY_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a05de3fc19b0289d1872cfea55700a952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>INVALID_METHOD</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4b561e3efdc12f157f5a8fc45a8204dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>MAGIC_COOKIE_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab9b5b94b12d67d3aead148a533dd4f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>VSOMEIP_ALL</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab39336d9a0e528a506d19edc40473282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::cfg</name>
    <filename>namespacevsomeip__v3_1_1cfg.html</filename>
    <class kind="struct">vsomeip_v3::cfg::client</class>
    <class kind="class">vsomeip_v3::cfg::configuration_impl</class>
    <class kind="struct">vsomeip_v3::cfg::debounce</class>
    <class kind="struct">vsomeip_v3::cfg::e2e</class>
    <class kind="struct">vsomeip_v3::cfg::event</class>
    <class kind="struct">vsomeip_v3::cfg::eventgroup</class>
    <class kind="struct">vsomeip_v3::cfg::service</class>
    <class kind="struct">vsomeip_v3::cfg::service_instance_range</class>
    <class kind="struct">vsomeip_v3::cfg::trace</class>
    <class kind="struct">vsomeip_v3::cfg::trace_channel</class>
    <class kind="struct">vsomeip_v3::cfg::trace_filter</class>
    <class kind="struct">vsomeip_v3::cfg::watchdog</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e</name>
    <filename>namespacevsomeip__v3_1_1e2e.html</filename>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
    <namespace>vsomeip_v3::e2e::profile_interface</namespace>
    <class kind="class">vsomeip_v3::e2e::e2e_provider</class>
    <class kind="class">vsomeip_v3::e2e::e2e_provider_impl</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile01</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile01.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile01::profile_01</class>
    <class kind="class">vsomeip_v3::e2e::profile01::profile_01_checker</class>
    <class kind="struct">vsomeip_v3::e2e::profile01::profile_config</class>
    <class kind="class">vsomeip_v3::e2e::profile01::protector</class>
    <member kind="enumeration">
      <type></type>
      <name>p01_data_id_mode</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile01.html</anchorfile>
      <anchor>a2e8caaeb4eb85dafd31c5ebb188f8e98</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98a8cde6ca1876fd3f658a3bce6783b689a">E2E_P01_DATAID_BOTH</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98ad94905468a028f23a2bcc87631a7a135">E2E_P01_DATAID_ALT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98aa98164a5695ba23e4bcabd55c904c2c2">E2E_P01_DATAID_LOW</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98ab2f6fa1897c0932a8c97fd7ba731643c">E2E_P01_DATAID_NIBBLE</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile04</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile04.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile04::profile_04</class>
    <class kind="class">vsomeip_v3::e2e::profile04::profile_04_checker</class>
    <class kind="struct">vsomeip_v3::e2e::profile04::profile_config</class>
    <class kind="class">vsomeip_v3::e2e::profile04::protector</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile_custom</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile__custom.html</filename>
    <class kind="struct">vsomeip_v3::e2e::profile_custom::profile_config</class>
    <class kind="class">vsomeip_v3::e2e::profile_custom::profile_custom</class>
    <class kind="class">vsomeip_v3::e2e::profile_custom::profile_custom_checker</class>
    <class kind="class">vsomeip_v3::e2e::profile_custom::protector</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile_interface</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile_interface::checker</class>
    <class kind="class">vsomeip_v3::e2e::profile_interface::profile_interface</class>
    <class kind="class">vsomeip_v3::e2e::profile_interface::protector</class>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>check_status_t</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>af012b9975eaac10690dfee805716c8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>generic_check_status</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_OK</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba4964058702f44175c383698310bee9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_WRONG_CRC</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba8973583c38ef134372426016679e2213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba6a1733e8d1357e370256f30cdf22e20e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2exf</name>
    <filename>namespacevsomeip__v3_1_1e2exf.html</filename>
    <member kind="typedef">
      <type>std::pair&lt; service_t, event_t &gt;</type>
      <name>data_identifier_t</name>
      <anchorfile>namespacevsomeip__v3_1_1e2exf.html</anchorfile>
      <anchor>a3aac6ade88468e74745cab623c6818e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3_1_1e2exf.html</anchorfile>
      <anchor>aeab6b6be4e8186e138c779dba35691fd</anchor>
      <arglist>(std::ostream &amp;_os, const e2exf::data_identifier_t &amp;_data_identifier)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::logger</name>
    <filename>namespacevsomeip__v3_1_1logger.html</filename>
    <class kind="class">vsomeip_v3::logger::logger_impl</class>
    <class kind="class">vsomeip_v3::logger::message</class>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>level_e</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>af19b0f174f174e494d4cdeb6b9f140c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_FATAL</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>abe1620a06072715114c470105c372efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>abfddb3047122bbae740f88f47d4d39eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_WARNING</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a0b81cb93e1bd604c2e0d7cb74cd7b02c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_INFO</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a0b35e17a110c5323b007c1015f5a062b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_DEBUG</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a88acccf741c76e4f81b618cc5201b2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_VERBOSE</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a863ead09626fc9409830856e6cbecd51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::sd</name>
    <filename>namespacevsomeip__v3_1_1sd.html</filename>
    <namespace>vsomeip_v3::sd::protocol</namespace>
    <class kind="class">vsomeip_v3::sd::configuration_option_impl</class>
    <class kind="class">vsomeip_v3::sd::deserializer</class>
    <class kind="struct">vsomeip_v3::sd::entry_data_t</class>
    <class kind="class">vsomeip_v3::sd::entry_impl</class>
    <class kind="class">vsomeip_v3::sd::eventgroupentry_impl</class>
    <class kind="class">vsomeip_v3::sd::ip_option_impl</class>
    <class kind="class">vsomeip_v3::sd::ipv4_option_impl</class>
    <class kind="class">vsomeip_v3::sd::ipv6_option_impl</class>
    <class kind="class">vsomeip_v3::sd::load_balancing_option_impl</class>
    <class kind="class">vsomeip_v3::sd::message_element_impl</class>
    <class kind="class">vsomeip_v3::sd::message_impl</class>
    <class kind="class">vsomeip_v3::sd::option_impl</class>
    <class kind="class">vsomeip_v3::sd::protection_option_impl</class>
    <class kind="class">vsomeip_v3::sd::remote_subscription_ack</class>
    <class kind="class">vsomeip_v3::sd::request</class>
    <class kind="class">vsomeip_v3::sd::runtime</class>
    <class kind="class">vsomeip_v3::sd::runtime_impl</class>
    <class kind="class">vsomeip_v3::sd::selective_option_impl</class>
    <class kind="class">vsomeip_v3::sd::service_discovery</class>
    <class kind="class">vsomeip_v3::sd::service_discovery_host</class>
    <class kind="class">vsomeip_v3::sd::service_discovery_impl</class>
    <class kind="class">vsomeip_v3::sd::serviceentry_impl</class>
    <class kind="class">vsomeip_v3::sd::subscription</class>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>priority_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a03ec7ff05c35cc282087aab5f6acbabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>weight_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab41c3c76dfe5e70beb62aaa5084269bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>alive_counter_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ae83eb26fe7ea1fd2886097606bae3cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>crc_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a418896956300726222443ce4990e25c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>flags_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a665b7bf45c5002c16224ddfaa8fac84d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; request &gt; &gt; &gt;</type>
      <name>requests_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a479bb43b7e65f780b2fdbe9f3b2615e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>option_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a1b095ff9063385699acb46879d760a3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fad08e68ea80bc3bf47a03757579c11900">CONFIGURATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa9f72b3ee74e29c627de58a4d92767907">LOAD_BALANCING</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fae4fa5555709453166935ef887d97dad6">PROTECTION</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fad99bcd855e28a58a0ffb17fb7bc3672c">IP4_ENDPOINT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa656f2d9488fd473cd5c87fc0d0c671d3">IP6_ENDPOINT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa9aa4bece16c8028c887d528022ece58f">IP4_MULTICAST</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa3e52334a97f7b6951548b1f3a8a63512">IP6_MULTICAST</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa45582b83fead3a0cbc52efa59d6ba4c5">SELECTIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>entry_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a5ee6f34e50b9155a337f0eb07d706200</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a324f25871f90b3bd46a9a60e1957cfbb">FIND_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a6906e2a8c179777590bbed7d0316e21a">OFFER_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200ac517d1ab174237d369a8d8a10a3c98f3">STOP_OFFER_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a093a6e7f7885f91c09fa7f9478edd209">REQUEST_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200ae5b65dcf08a837c03fa789dba01dc7a4">FIND_EVENT_GROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a6e85554fa1249e1c5b86afde6b18700b">PUBLISH_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200addbf5099413ff5c80c0793834054340d">STOP_PUBLISH_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a99209c30c3e49367e4faaa8f895e92d6">SUBSCRIBE_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a59221d1438ac23e21204f54c26dc3a1d">STOP_SUBSCRIBE_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200accc382dc381a1b3f403b9e274a265275">SUBSCRIBE_EVENTGROUP_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a0efd8428d44a0d6dd6127a5b2280d85f">STOP_SUBSCRIBE_EVENTGROUP_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>layer_four_protocol_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab28b10cdfdc46bc21d39f6b67c41e66c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66cab136ef5f6a01d816991fe3cf7a6ac763">TCP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66caf5ef036b4d8b630721e51fe23489fbc9">UDP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66ca696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a44d6e76ec7a3229de97bd8b99723074e</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea3bdddbcca7a01b8a1e6ea1483b398e6c">ST_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea27185adbc4a022e762d4d07f1bae4a31">ST_NOT_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea9e3393acb9ba884e9ecfcf1acd696525">ST_RESUBSCRIBING</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea8dcdb2ca996e32272605de24f3b63990">ST_RESUBSCRIBING_NOT_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea0ce3a5f229eb18947e3d3973f173a613">ST_UNKNOWN</enumvalue>
    </member>
    <member kind="variable">
      <type>const service_t</type>
      <name>service</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>aa2a4b491728e2388739c38955d93a663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const instance_t</type>
      <name>instance</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a108c41316ccf8a6f58781b4fbfbb72f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>method</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a9672260623da6a9ec36666d77624c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>client</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a4301fedba81c7bbcc971714312d3191c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const protocol_version_t</type>
      <name>protocol_version</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ac12cd8e7d5bd267aba48e6f9927c7e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const interface_version_t</type>
      <name>interface_version</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a671093c1f6fc5fbf7f149bff14e13af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>message_type</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>aec38071e3274c6a1e8b9decd67c9b7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const return_code_e</type>
      <name>return_code</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab83b958bde23b3ff10be09b4aa7b4e4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::sd::protocol</name>
    <filename>namespacevsomeip__v3_1_1sd_1_1protocol.html</filename>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>reserved_byte</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>a03dc9d80fe666e04fb8afb9a19607321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>reserved_word</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>ab671b814e4ac2ca632a40263faf4ad22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32_t</type>
      <name>reserved_long</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>ab7095f65a99ed25abd9d78ee8d9fbb1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>tcp</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>a807c6ff750c63e9e420eee7c6da2e7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>udp</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>af1cf186cad7101f9b40c3cbfbbf80666</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::tp</name>
    <filename>namespacevsomeip__v3_1_1tp.html</filename>
    <class kind="class">vsomeip_v3::tp::tp</class>
    <class kind="class">vsomeip_v3::tp::tp_message</class>
    <class kind="class">vsomeip_v3::tp::tp_reassembler</class>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>tp_header_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>ae442a454e5c8747a7f581c3beab38f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>tp_message_type_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>ab0ea6b850ec9b67c07d2d4ab5cb74b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; message_buffer_ptr_t &gt;</type>
      <name>tp_split_messages_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>a6aa9829e35052a42f8cafa86aa2868d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint8_t</type>
      <name>TP_FLAG</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>af5908255bf86963844054628ffb83bde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::trace</name>
    <filename>namespacevsomeip__v3_1_1trace.html</filename>
    <class kind="class">vsomeip_v3::trace::channel</class>
    <class kind="class">vsomeip_v3::trace::channel_impl</class>
    <class kind="class">vsomeip_v3::trace::connector</class>
    <class kind="class">vsomeip_v3::trace::connector_impl</class>
    <class kind="struct">vsomeip_v3::trace::header</class>
    <member kind="typedef">
      <type>std::function&lt; bool(service_t, instance_t, method_t)&gt;</type>
      <name>filter_func_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a1fea2d7b56016b1dea4035038b1a70fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>filter_id_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>abdc3d3f7d319ce0af305457e0447cda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; service_t, instance_t, method_t &gt;</type>
      <name>match_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a3efc612d82eb681b5991adae7afdf8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>filter_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>aad08deaf2c9d2b4567b1d323d890acfd</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfda50546bf973283065b6ccf09faf7a580a">NEGATIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfdaab6c31432785221bae58327ef5f6ea58">POSITIVE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>protocol_e</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a2ba767a205c2042308c808a2e5bb3bd4</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4af5ddaf0ca7929578b408c909429f68f2">local</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4a84864c1fe095359bc9c5ac068e24e781">udp</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4ae20bb202b1d5537b1415e3263a37ed78">tcp</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4aad921d60486366258809553a3db49a4a">unknown</enumvalue>
    </member>
    <member kind="function">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>ab270b722efbcbf125d648925c83d40b0</anchor>
      <arglist>(0)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_ID</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a18a8a00a132973615e29ff0e88c4f22c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a85acf523d361436c707c38c0de473cba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>vsomeip</name>
    <title>Vsomeip</title>
    <filename>group__vsomeip.html</filename>
    <namespace>vsomeip::trace</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <class kind="class">vsomeip::application</class>
    <class kind="class">vsomeip::message</class>
    <class kind="class">vsomeip::message_base</class>
    <class kind="class">vsomeip::payload</class>
    <class kind="class">vsomeip::runtime</class>
    <class kind="class">vsomeip_v3::application</class>
    <class kind="class">vsomeip_v3::message</class>
    <class kind="class">vsomeip_v3::message_base</class>
    <class kind="class">vsomeip_v3::payload</class>
    <class kind="class">vsomeip_v3::runtime</class>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga206a275026b03ba26247ff60e9338d1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga97bd6547b9a37814b40cda1e738d9b4f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga32153dd846e5082a5ecfd0303fc00c64</anchor>
      <arglist>(message_t _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga3a42fc1bb1ad36324e13997dc0566d0f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga8ae0c5b2d33e75aa2874b7ed292bb267</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga4c2e06c479c0b2b30d0d4a5650b32504</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaf23fc5b260569ff85a3dc3bf4a58bbc4</anchor>
      <arglist>(instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga6f2bb6b746b5929a9178a509dcb23599</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga68a5d57ba30a1e866aa49c3219bee34c</anchor>
      <arglist>(method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gadf78d2cdd0bba783a9ef4a5b41b51e9f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga69cfe08df5efb5d539fe84577bacd794</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga9cc75d61f405607cb6ea77deb00f88c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga862708a8912fae6f16af9678db4855bc</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga0764d0bcc57088b5da686a6cf1d4e3cc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga65d0115210a280b4375dc19a06696e05</anchor>
      <arglist>(session_t _session)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga3d8631c6a0e6a8342926c2243fc7d70f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaf890115f9dd45d05f0ac8b28365228fc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gad9767ddceec2f86fde60714ef7d6ea74</anchor>
      <arglist>(interface_version_t _version)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga75ba46b7ddebf62f00ba16bb735453e5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga33dd198f3a6f6273d1335fea3ecbfc26</anchor>
      <arglist>(message_type_e _type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gab92e9e4ed2400f16625e0eaf5bd27944</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga40161de103fefe67c8b341119535a607</anchor>
      <arglist>(return_code_e _code)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga6db8a0c37b1521863aa8898da3882185</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga47faf333d2aa5646b1565e743793ea39</anchor>
      <arglist>(bool _is_reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaaccdd9fb11d64ad8b2befff7f9f1a797</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga203ffb0137f0c387945893bdd3c816df</anchor>
      <arglist>(bool _is_initial)=0</arglist>
    </member>
  </compound>
</tagfile>
